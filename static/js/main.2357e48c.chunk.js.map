{"version":3,"sources":["Globals.js","BabylonCanvas.js","components/uiElements/AddBlockModal.js","components/gameObjects/_ENVIRONMENT.js","components/gameObjects/StoneBlock.js","components/gameObjects/GrassBlock.js","components/gameObjects/PathBlock.js","components/gameObjects/TreeOne.js","components/gameObjects/TreeTwo.js","components/gameObjects/RockOne.js","components/gameObjects/RockTwo.js","components/gameObjects/Campfire.js","components/gameObjects/Tent.js","components/gameObjects/Fence.js","components/gameObjects/Character.js","components/uiElements/AddBlockButton.js","components/uiElements/WinScreen.js","components/uiElements/DeleteBlockButton.js","components/uiElements/WalkBlock.js","components/uiElements/TurnBlock.js","components/uiElements/LoopBlock.js","components/uiElements/IfBlock.js","components/codeEngine/CodeEngine.js","components/uiElements/LevelTitle.js","components/uiElements/LevelInstructions.js","components/gameObjects/ObjectivePoint.js","components/levels/LevelOne.js","components/levels/LevelTwo.js","components/levels/LevelThree.js","components/levels/LevelFour.js","components/levels/MainMenu.js","components/levels/VictoryMenu.js","App.js","reportWebVitals.js","index.js"],"names":["this","scene","undefined","engine","framerate","character","addBlockModal","currentLevel","codeEngine","BabylonCanvas","props","componentDidMount","BABYLON","canvas","Globals","addLight","addCamera","addSkybox","addMusic","window","addEventListener","onWindowResize","onKeydownEvent","runRenderLoop","render","registerBeforeRender","event","resize","keyCode","debugLayer","show","hide","hemisphericLight","underMapLighting","Math","PI","photoSphere","CreateSphere","skyboxMaterial","emissiveTexture","diffuseColor","specularColor","uOffset","backFaceCulling","material","arcRotateCamera","panningSensibility","lowerRadiusLimit","upperRadiusLimit","attachControl","setPosition","beta","backgroundMusic","loop","autoplay","volume","disableCameraControl","resetCameraPosition","detachControl","enableCameraControl","state","useWireFrame","shouldAnimate","babylonCanvas","removeEventListener","stop","className","ref","Component","AddBlockModal","onChangeSelection","setState","selectedBlockType","target","id","forceUpdate","resetSelectedBlockType","onAddButtonClicked","console","log","addBlock","parentBlockIndex","allowedBlockTypes","bind","blockTypesArray","tabIndex","role","aria-labelledby","aria-hidden","includes","onClick","type","data-dismiss","disabled","Object","freeze","NONE","STONE","GRASS","PATH","WALKED_PATH","TREE_1","TREE_2","ROCK_1","ROCK_2","LARGE_RED_MUSHROOM","SMALL_PURPLE_MUSHROOM","SMALL_YELLOW_MUSHROOM","CAMPFIRE","TENT","FENCE","OBJECTIVE","WALKABLE_BLOCKS","StoneBlock","createMesh","applyMaterial","startSpawnAnimation","componentWillUnmount","mesh","dispose","posX","posY","posZ","CreateBox","height","width","depth","position","x","y","z","diffuseTexture","updateSamplingMode","NEAREST_NEAREST_MIPLINEAR","spawnAnimation","ANIMATIONTYPE_VECTOR3","ANIMATIONLOOPMODE_CYCLE","animationDelaySeconds","yOffset","keyFrames","push","frame","value","Zero","One","setKeys","animations","beginAnimation","GrassBlock","faceUV","Array","i","wrap","texture","PathBlock","TreeOne","obj","ImportMesh","meshes","forEach","setParent","alpha","TreeTwo","RockOne","RockTwo","Campfire","scaling","Tent","rotation","Fence","Character","idleAnimation","walkingAnimation","faceDirection","characterParentMaterial","characterModel","particleSystem","skeleton","animationGroups","characterModelMeshes","xOffset","zOffset","meshMaterial","ambientColor","characterFaceDirection","walk","moveAxis","moveDirection","walkAnimation","ANIMATIONTYPE_FLOAT","walkKeyframes","animationSpeed","length","pop","start","from","to","setTimeout","turnLeft","abs","turnLeftAnimation","turnLeftKeyframes","turnRight","turnRightAnimation","turnRightKeyframes","respawn","respawnPositionAnimation","positionKeyframe","AddBlockButton","onButtonClicked","updateAllowedBlockTypes","allowedBlocks","parentAddBlock","parent","isBlockLimitReached","blockCount","blockCountLimit","data-toggle","data-target","WinScreen","children","nextLevel","buttonText","DeleteBlockButton","confirm","deleteBlock","parentIndex","index","WalkBlock","TurnBlock","onSelectionChange","updateBlock","direction","onChange","LoopBlock","componentDidUpdate","updateChildReference","indexes","split","map","currentParentRef","functions","currentBlockChildren","onCycleCountChange","loopCycles","min","max","data","key","renderBlock","IfBlock","onOperatorChange","operator","onLeftOperandChange","leftOperand","onRightOperandChange","rightOperand","name","ifBlockLeftOperandSelection","option","idx","uiText","ifBlockRightOperandSelection","CodeEngine","startSimulation","isRunning","simulate","then","runSuccessfuly","characterPosition","level","_ENVIRONMENT","finishLevel","resetLevel","isObjectiveReached","error","a","block","turn","if_","delayAction","hasReachedGoal","canWalk","parentBlock","metadata","getParentRef","functionsArray","parentIndexString","blockType","prevState","newFunctions","JSON","parse","stringify","blockParentRef","blockIndex","newState","keys","splice","blockMetadata","hasBlockCountLimit","CODE_BLOCK_TYPE","WALK","TURN","IF","LOOP","ms","Promise","resolve","targetX","targetZ","targetBlockType","LevelTitle","heading","subheading","LevelInstructions","ObjectivePoint","createParticleSystem","CreateDefault","updateSpeed","minLifeTime","maxLifeTime","LevelOne","environmentSpawned","ENVIRONMENT","yData","yIndex","xData","xIndex","zData","zIndex","spawnEnvironmentItem","LevelTwo","LevelThree","LevelFour","MainMenu","VictoryMenu","href","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"oQAYe,MAXX,aAAe,oBACXA,KAAKC,WAAQC,EACbF,KAAKG,YAASD,EACdF,KAAKI,UAAY,GACjBJ,KAAKK,eAAYH,EACjBF,KAAKM,mBAAgBJ,EACrBF,KAAKO,kBAAeL,EACpBF,KAAKQ,gBAAaN,GCgKXO,E,kDAnKX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAUVC,kBAAoB,WAEhB,EAAKR,OAAS,IAAIS,SAAe,EAAKC,QAAQ,GAC9CC,EAAQb,MAAQ,IAAIW,QAAc,EAAKT,QAGvC,EAAKY,WACL,EAAKC,YACL,EAAKC,YACL,EAAKC,WAGLC,OAAOC,iBAAiB,SAAU,EAAKC,gBAAgB,GACvDF,OAAOC,iBAAiB,UAAW,EAAKE,gBAGxC,EAAKnB,OAAOoB,eAAc,WACtBT,EAAQb,MAAMuB,YAKlBV,EAAQb,MAAMwB,sBAAqB,gBAjCpB,EA2CnBJ,eAAiB,SAAAK,GACb,EAAKvB,OAAOwB,UA5CG,EA+CnBL,eAAiB,SAAAI,GACb,OAAOA,EAAME,SACT,KAAK,IACDd,EAAQb,MAAM4B,WAAWC,OACzB,MACJ,KAAK,IACDhB,EAAQb,MAAM4B,WAAWE,SArDlB,EA4DnBhB,SAAW,WAEP,EAAKiB,iBAAmB,IAAIpB,mBACxB,mBACA,IAAIA,UAAgB,EAAG,EAAG,GAC1BE,EAAQb,OAIZ,EAAKgC,iBAAmB,IAAIrB,YACxB,gBACA,IAAIA,UAAgB,GAAI,GAAI,GAC5B,IAAIA,UAAgB,EAAG,EAAG,GAC1BsB,KAAKC,GACL,EACArB,EAAQb,QA3EG,EA+EnBgB,UAAY,WACR,IAAImB,EAAcxB,OAAayB,aAAa,SAAU,GAAM,GAAMvB,EAAQb,OAEtEqC,EAAiB,IAAI1B,mBAAyB,iBAAkBE,EAAQb,OAC5EqC,EAAeC,gBAAkB,IAAI3B,UACjC,0BACAE,EAAQb,MACR,EACA,GAEJqC,EAAeE,aAAe,IAAI5B,SAAe,EAAG,EAAG,GACvD0B,EAAeG,cAAgB,IAAI7B,SAAe,EAAG,EAAG,GACxD0B,EAAeC,gBAAgBG,SAAWR,KAAKC,GAAK,EACpDG,EAAeC,gBAAgBG,QAAU,GACzCJ,EAAeK,iBAAkB,EAEjCP,EAAYQ,SAAWN,GA/FR,EAkGnBtB,UAAY,WAER,EAAK6B,gBAAkB,IAAIjC,kBACvB,aACAsB,KAAKC,GAAK,EACVD,KAAKC,GAAK,EACV,GACA,IAAIvB,UAAgB,EAAG,EAAG,GAC1BE,EAAQb,OAGZ,EAAK4C,gBAAgBC,mBAAqB,EAC1C,EAAKD,gBAAgBE,iBAAmB,EAAKF,gBAAgBG,iBAAmB,GAOhF,EAAKH,gBAAgBI,cAAc,EAAKpC,QAAQ,GAChD,EAAKgC,gBAAgBK,YAAY,IAAItC,UAAgB,EAAG,EAAG,IAC3D,EAAKiC,gBAAgBM,KAAOjB,KAAKC,GAAK,KAvHvB,EA0HnBjB,SAAW,WACP,EAAKkC,gBAAkB,IAAIxC,QACvB,kBACA,mCACAE,EAAQb,MACR,KACA,CACIoD,MAAM,EACNC,UAAU,EACVC,OAAQ,MAnID,EAwInBC,qBAAuB,WACnB,EAAKC,sBACL,EAAKZ,gBAAgBa,iBA1IN,EA6InBC,oBAAsB,WAClB,EAAKF,sBACL,EAAKZ,gBAAgBI,cAAc,EAAKpC,QAAQ,IA/IjC,EAkJnB4C,oBAAsB,WAClB,EAAKZ,gBAAgBI,cAAc,EAAKpC,QAAQ,GAChD,EAAKgC,gBAAgBK,YAAY,IAAItC,UAAgB,EAAG,EAAG,IAC3D,EAAKiC,gBAAgBM,KAAOjB,KAAKC,GAAK,KAnJtC,EAAKyB,MAAQ,CAAEC,cAAc,EAAOC,eAAe,GACnD,EAAK9B,sBAAmB9B,EACxB,EAAK+B,sBAAmB/B,EACxB,EAAK2C,qBAAkB3C,EACvB,EAAKkD,qBAAkBlD,EAEvBY,EAAQiD,cAAR,eARe,E,mEAuCf5C,OAAO6C,oBAAoB,SAAUhE,KAAKqB,gBAAgB,GAC1DrB,KAAKoD,gBAAgBa,S,+BAgHf,IAAD,OACL,OACI,wBACIC,UAAU,eACVC,IAAK,SAAAtD,GACD,EAAKA,OAASA,S,GA9JNuD,aCsHbC,E,kDAtHX,WAAY3D,GAAQ,IAAD,8BACf,cAAMA,IAaV4D,kBAAoB,SAAC5C,GACjB,EAAK6C,SAAS,CACVC,kBAAmB9C,EAAM+C,OAAOC,KACjC,WAAQ,EAAKC,kBAjBD,EAoBnBC,uBAAyB,SAAClD,GACtB,EAAK6C,SAAS,CACVC,kBAAmB,QAtBR,EA0BnBK,mBAAqB,WACjBC,QAAQC,IAAR,iBAAsB,EAAKnB,MAAMY,kBAAjC,WACA1D,EAAQN,WAAWwE,SAAS,EAAKpB,MAAMY,kBAAmB,EAAKS,kBAC/D,EAAKL,0BA3BL,EAAKhB,MAAQ,CACTY,kBAAmB,KACnBU,kBAAmB,IAEvB,EAAKD,kBAAoB,EAEzBnE,EAAQR,cAAR,eAGA,EAAKgE,kBAAoB,EAAKA,kBAAkBa,KAAvB,gBAXV,E,oEAgCKC,GACpBpF,KAAKuE,SAAS,CACVW,kBAAmBE,M,+BAKvB,OACI,qBAAKV,GAAG,gBAAgBR,UAAU,aAAamB,SAAS,KAAKC,KAAK,SAASC,kBAAgB,eAAeC,cAAY,OAAtH,SACI,qBAAKtB,UAAU,8CAA8CoB,KAAK,WAAlE,SACI,sBAAKpB,UAAU,gBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,oBAAIA,UAAU,cAAcQ,GAAG,eAA/B,0BADJ,8BAEA,qBAAKR,UAAU,aAAf,SACI,+BACI,qBAAIA,UAAU,aAAd,UAEQlE,KAAK4D,MAAMsB,kBAAkBO,SAAS,QACtC,qBAAIvB,UAAS,kDAA8E,SAAjClE,KAAK4D,MAAMY,kBAA+B,SAAW,MAC3GE,GAAG,OACHgB,QAAS1F,KAAKsE,kBAFlB,UAIA,qCAAW,uBAJX,mEAOE,KAGFtE,KAAK4D,MAAMsB,kBAAkBO,SAAS,QACtC,qBAAIvB,UAAS,kDAA8E,SAAjClE,KAAK4D,MAAMY,kBAA+B,SAAW,MAC3GE,GAAG,OACHgB,QAAS1F,KAAKsE,kBAFlB,UAIA,qCAAW,uBAJX,+CAOE,KAGFtE,KAAK4D,MAAMsB,kBAAkBO,SAAS,QACtC,qBAAIvB,UAAS,kDAA8E,SAAjClE,KAAK4D,MAAMY,kBAA+B,SAAW,MAC3GE,GAAG,OACHgB,QAAS1F,KAAKsE,kBAFlB,UAIA,qCAAW,uBAJX,sCAOE,KAGFtE,KAAK4D,MAAMsB,kBAAkBO,SAAS,MACtC,qBAAIvB,UAAS,iDAA6E,OAAjClE,KAAK4D,MAAMY,kBAA6B,SAAW,MACxGE,GAAG,KACHgB,QAAS1F,KAAKsE,kBAFlB,UAIA,mCAAS,uBAJT,0DAOE,YAKlB,sBAAKJ,UAAU,eAAf,UACI,wBACIyB,KAAK,SAASzB,UAAU,kBACxB0B,eAAa,QACbC,SAA2C,OAAjC7F,KAAK4D,MAAMY,kBACrBkB,QAAS1F,KAAK6E,mBAJlB,iBAQA,wBACIc,KAAK,SAASzB,UAAU,gBAAgB0B,eAAa,QACrDF,QAAS1F,KAAK4E,uBAFlB,kC,GAzGAR,aCwBb0B,G,YAAAA,OAAOC,OAAO,I,sCArBzBC,KAAO,E,KACPC,MAAQ,E,KACRC,MAAQ,E,KACRC,KAAO,E,KACPC,YAAc,E,KACdC,OAAS,G,KACTC,OAAS,G,KACTC,OAAS,G,KACTC,OAAS,G,KACTC,mBAAqB,G,KACrBC,sBAAwB,G,KACxBC,sBAAwB,G,KACxBC,SAAW,G,KACXC,KAAO,G,KACPC,MAAQ,G,KACRC,UAAY,G,KAEZC,gBAAkB,CAAChH,KAAKmG,SC4Ebc,E,kDA9FX,WAAYvG,GAAQ,IAAD,8BACf,cAAMA,IAIVC,kBAAoB,WAChB,EAAKuG,aACL,EAAKC,gBACL,EAAKC,uBARU,EAWnBC,qBAAuB,WACnB,EAAKC,KAAKC,WAZK,EAenBL,WAAa,WAET,IAAMM,EAAO,EAAK9G,MAAM8G,KAAO,EAAK9G,MAAM8G,KAAO,EAC3CC,EAAO,EAAK/G,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,EAC3CC,EAAO,EAAKhH,MAAMgH,KAAO,EAAKhH,MAAMgH,KAAO,EAGjD,EAAKJ,KAAO1G,cAAoB+G,UAApB,qBACMH,EADN,YACcC,EADd,YACsBC,GAC9B,CAAEE,OAAQ,EAAGC,MAAO,EAAGC,MAAO,GAC9BhH,EAAQb,OAIZ,EAAKqH,KAAKS,SAASC,EAAIR,EACvB,EAAKF,KAAKS,SAASE,EAAIR,EACvB,EAAKH,KAAKS,SAASG,EAAIR,GA/BR,EAkCnBP,cAAgB,WACZ,IAAIvE,EAAW,IAAIhC,mBAAyB,qBAAsBE,EAAQb,OAG1E2C,EAASuF,eAAiB,IAAIvH,UAAgB,4BAA6BE,EAAQb,OACnF2C,EAASuF,eAAeC,mBAAmBxH,UAAgByH,2BAO3DzF,EAASH,cAAgB,IAAI7B,SAAe,EAAG,EAAG,GAClDgC,EAASD,iBAAkB,EAG3B,EAAK2E,KAAK1E,SAAWA,GAlDN,EAqDnBwE,oBAAsB,WAClB,IAAMkB,EAAiB,IAAI1H,YACvB,iBACA,UACAE,EAAQV,UACRQ,YAAkB2H,sBAClB3H,YAAkB4H,yBAKhBC,EAA2C,KAFjC,EAAK/H,MAAMgI,QAAU,EAAKhI,MAAMgI,QAAU,IAC7C,EAAKhI,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,IACM,EAEjDkB,EAAY,GAClBA,EAAUC,KAAK,CACXC,MAAO,EACPC,MAAOlI,UAAgBmI,SAE3BJ,EAAUC,KAAK,CACXC,MAAOJ,EAAwB3H,EAAQV,UACvC0I,MAAOlI,UAAgBmI,SAE3BJ,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAOlI,UAAgBoI,QAE3BV,EAAeW,QAAQN,GAEvB,EAAKrB,KAAK4B,WAAWN,KAAKN,GAE1BxH,EAAQb,MAAMkJ,eAAe,EAAK7B,KAAM,EAAImB,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,WAAY,IAnFrG,EAuFnBoB,OAAS,WACL,OACI,yBAvFJ,EAAK8F,UAAOpH,EAFG,E,UADEkE,aCkGVgF,E,kDAjGX,WAAY1I,GAAQ,IAAD,8BACf,cAAMA,IAIVC,kBAAoB,WAChB,EAAKuG,aACL,EAAKC,gBACL,EAAKC,uBARU,EAWnBC,qBAAuB,WACnB,EAAKC,KAAKC,WAZK,EAenBL,WAAa,WAeT,IAbA,IAAMM,EAAO,EAAK9G,MAAM8G,KAAO,EAAK9G,MAAM8G,KAAO,EAC3CC,EAAO,EAAK/G,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,EAC3CC,EAAO,EAAKhH,MAAMgH,KAAO,EAAKhH,MAAMgH,KAAO,EAQ7C2B,EAAS,IAAIC,MAAM,GAGdC,EAAI,EAAGA,EAAI,EAAGA,IACnBF,EAAOE,GAAK,IAAI3I,UAAgB2I,EARtB,EAQmC,GAAIA,EAAI,GAR3C,EAQyD,GAIvE,EAAKjC,KAAO1G,cAAoB+G,UAApB,qBACMH,EADN,YACcC,EADd,YACsBC,GAC9B,CAAEE,OAAQ,EAAGC,MAAO,EAAGC,MAAO,EAAGuB,OAAQA,EAAQG,MAAK,GACtD1I,EAAQb,OAIZ,EAAKqH,KAAKS,SAASC,EAAIR,EACvB,EAAKF,KAAKS,SAASE,EAAIR,EACvB,EAAKH,KAAKS,SAASG,EAAIR,GA5CR,EA+CnBP,cAAgB,WACZ,IAAIvE,EAAW,IAAIhC,mBAAyB,qBAAsBE,EAAQb,OACtEwJ,EAAU,IAAI7I,UAAgB,kCAAmCE,EAAQb,OAC7E2C,EAASuF,eAAiBsB,EAC1B7G,EAASH,cAAgB,IAAI7B,SAAe,EAAG,EAAG,GAGlD,EAAK0G,KAAK1E,SAAWA,GAtDN,EAyDnBwE,oBAAsB,WAClB,IAAMkB,EAAiB,IAAI1H,YACvB,iBACA,UACAE,EAAQV,UACRQ,YAAkB2H,sBAClB3H,YAAkB4H,yBAKhBC,EAA2C,KAFjC,EAAK/H,MAAMgI,QAAU,EAAKhI,MAAMgI,QAAU,IAC7C,EAAKhI,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,IACM,EAEjDkB,EAAY,GAClBA,EAAUC,KAAK,CACXC,MAAO,EACPC,MAAOlI,UAAgBmI,SAE3BJ,EAAUC,KAAK,CACXC,MAAOJ,EAAwB3H,EAAQV,UACvC0I,MAAOlI,UAAgBmI,SAE3BJ,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAOlI,UAAgBoI,QAE3BV,EAAeW,QAAQN,GAEvB,EAAKrB,KAAK4B,WAAWN,KAAKN,GAE1BxH,EAAQb,MAAMkJ,eAAe,EAAK7B,KAAM,EAAImB,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,WAAY,IAvFrG,EA0FnBoB,OAAS,WACL,OACI,yBA1FJ,EAAK8F,UAAOpH,EAFG,E,UADEkE,aCkGVsF,E,kDAjGX,WAAYhJ,GAAQ,IAAD,8BACf,cAAMA,IAIVC,kBAAoB,WAChB,EAAKuG,aACL,EAAKC,gBACL,EAAKC,uBARU,EAWnBC,qBAAuB,WACnB,EAAKC,KAAKC,WAZK,EAenBL,WAAa,WAeT,IAbA,IAAMM,EAAO,EAAK9G,MAAM8G,KAAO,EAAK9G,MAAM8G,KAAO,EAC3CC,EAAO,EAAK/G,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,EAC3CC,EAAO,EAAKhH,MAAMgH,KAAO,EAAKhH,MAAMgH,KAAO,EAQ7C2B,EAAS,IAAIC,MAAM,GAGdC,EAAI,EAAGA,EAAI,EAAGA,IACnBF,EAAOE,GAAK,IAAI3I,UAAgB2I,EARtB,EAQmC,GAAIA,EAAI,GAR3C,EAQyD,GAIvE,EAAKjC,KAAO1G,cAAoB+G,UAApB,qBACMH,EADN,YACcC,EADd,YACsBC,GAC9B,CAAEE,OAAQ,EAAGC,MAAO,EAAGC,MAAO,EAAGuB,OAAQA,EAAQG,MAAK,GACtD1I,EAAQb,OAIZ,EAAKqH,KAAKS,SAASC,EAAIR,EACvB,EAAKF,KAAKS,SAASE,EAAIR,EACvB,EAAKH,KAAKS,SAASG,EAAIR,GA5CR,EA+CnBP,cAAgB,WACZ,IAAIvE,EAAW,IAAIhC,mBAAyB,qBAAsBE,EAAQb,OACtEwJ,EAAU,IAAI7I,UAAgB,iCAAkCE,EAAQb,OAC5E2C,EAASuF,eAAiBsB,EAC1B7G,EAASH,cAAgB,IAAI7B,SAAe,EAAG,EAAG,GAGlD,EAAK0G,KAAK1E,SAAWA,GAtDN,EAyDnBwE,oBAAsB,WAClB,IAAMkB,EAAiB,IAAI1H,YACvB,iBACA,UACAE,EAAQV,UACRQ,YAAkB2H,sBAClB3H,YAAkB4H,yBAKhBC,EAA2C,KAFjC,EAAK/H,MAAMgI,QAAU,EAAKhI,MAAMgI,QAAU,IAC7C,EAAKhI,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,IACM,EAEjDkB,EAAY,GAClBA,EAAUC,KAAK,CACXC,MAAO,EACPC,MAAOlI,UAAgBmI,SAE3BJ,EAAUC,KAAK,CACXC,MAAOJ,EAAwB3H,EAAQV,UACvC0I,MAAOlI,UAAgBmI,SAE3BJ,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAOlI,UAAgBoI,QAE3BV,EAAeW,QAAQN,GAEvB,EAAKrB,KAAK4B,WAAWN,KAAKN,GAE1BxH,EAAQb,MAAMkJ,eAAe,EAAK7B,KAAM,EAAImB,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,WAAY,IAvFrG,EA0FnBoB,OAAS,WACL,OACI,yBA1FJ,EAAK8F,UAAOpH,EAFG,E,UADCkE,aCyHTuF,E,kDAxHX,WAAYjJ,GAAQ,IAAD,8BACf,cAAMA,IAKVC,kBAAoB,WAChB,EAAKuG,aACL,EAAKC,iBARU,EAWnBE,qBAAuB,WACnB,EAAKC,KAAKC,WAZK,EAenBL,WAAa,WAET,IAAMM,EAAO,EAAK9G,MAAM8G,KAAO,EAAK9G,MAAM8G,KAAO,EAC3CC,EAAO,EAAK/G,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,EAC3CC,EAAO,EAAKhH,MAAMgH,KAAO,EAAKhH,MAAMgH,KAAO,EAGjD,EAAKJ,KAAO1G,cAAoB+G,UAApB,kBACGH,EADH,YACWC,EADX,YACmBC,GAC3B,CAAEE,OAAQ,EAAGC,MAAO,EAAGC,MAAO,GAC9BhH,EAAQb,OAIZ,EAAK2J,IAAMhJ,cAAoBiJ,WAC3B,GACA,cACA,aACA/I,EAAQb,OACR,SAAC6J,GACGA,EAAOC,SAAQ,SAACzC,GACZA,EAAK0C,UAAU,EAAK1C,MACpBA,EAAKS,SAASE,GAAK,MAIvB,EAAKX,KAAKS,SAASC,EAAIR,EACvB,EAAKF,KAAKS,SAASE,EAAIR,EACvB,EAAKH,KAAKS,SAASG,EAAIR,EAEvB,EAAKN,0BA7CE,EAmDnBD,cAAgB,WACZ,IAAIvE,EAAW,IAAIhC,mBAAyB,wBAAyBE,EAAQb,OAC7E2C,EAASqH,MAAQ,EAGjB,EAAK3C,KAAK1E,SAAWA,GAxDN,EA2DnBwE,oBAAsB,WAClB,IAEMqB,EAA2C,KAFjC,EAAK/H,MAAMgI,QAAU,EAAKhI,MAAMgI,QAAU,IAC7C,EAAKhI,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,IACM,EAEjDa,EAAiB,IAAI1H,YACvB,iBACA,WACAE,EAAQV,UACRQ,YAAkB2H,sBAClB3H,YAAkB4H,yBAGhBG,EAAY,GAClBA,EAAUC,KAAK,CACXC,MAAO,EACPC,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UAAa,EACjF0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KAAO,GAClB,EAAK/G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KACX,EAAK/G,MAAMgH,QAGnBY,EAAeW,QAAQN,GAEvB,EAAKrB,KAAK4B,WAAWN,KAAKN,GAE1BxH,EAAQb,MAAMkJ,eAAe,EAAK7B,KAAM,EAAImB,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,WAAY,IA7GrG,EAiHnBoB,OAAS,WACL,OACI,yBAjHJ,EAAK8F,UAAOpH,EACZ,EAAK0J,SAAM1J,EAHI,E,UADDkE,aCyHP8F,E,kDAxHX,WAAYxJ,GAAQ,IAAD,8BACf,cAAMA,IAKVC,kBAAoB,WAChB,EAAKuG,aACL,EAAKC,iBARU,EAWnBE,qBAAuB,WACnB,EAAKC,KAAKC,WAZK,EAenBL,WAAa,WAET,IAAMM,EAAO,EAAK9G,MAAM8G,KAAO,EAAK9G,MAAM8G,KAAO,EAC3CC,EAAO,EAAK/G,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,EAC3CC,EAAO,EAAKhH,MAAMgH,KAAO,EAAKhH,MAAMgH,KAAO,EAGjD,EAAKJ,KAAO1G,cAAoB+G,UAApB,kBACGH,EADH,YACWC,EADX,YACmBC,GAC3B,CAAEE,OAAQ,EAAGC,MAAO,EAAGC,MAAO,GAC9BhH,EAAQb,OAIZ,EAAK2J,IAAMhJ,cAAoBiJ,WAC3B,GACA,cACA,aACA/I,EAAQb,OACR,SAAC6J,GACGA,EAAOC,SAAQ,SAACzC,GACZA,EAAK0C,UAAU,EAAK1C,MACpBA,EAAKS,SAASE,GAAK,MAIvB,EAAKX,KAAKS,SAASC,EAAIR,EACvB,EAAKF,KAAKS,SAASE,EAAIR,EACvB,EAAKH,KAAKS,SAASG,EAAIR,EAEvB,EAAKN,0BA7CE,EAmDnBD,cAAgB,WACZ,IAAIvE,EAAW,IAAIhC,mBAAyB,wBAAyBE,EAAQb,OAC7E2C,EAASqH,MAAQ,EAGjB,EAAK3C,KAAK1E,SAAWA,GAxDN,EA2DnBwE,oBAAsB,WAClB,IAEMqB,EAA2C,KAFjC,EAAK/H,MAAMgI,QAAU,EAAKhI,MAAMgI,QAAU,IAC7C,EAAKhI,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,IACM,EAEjDa,EAAiB,IAAI1H,YACvB,iBACA,WACAE,EAAQV,UACRQ,YAAkB2H,sBAClB3H,YAAkB4H,yBAGhBG,EAAY,GAClBA,EAAUC,KAAK,CACXC,MAAO,EACPC,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UAAa,EACjF0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KAAO,GAClB,EAAK/G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KACX,EAAK/G,MAAMgH,QAGnBY,EAAeW,QAAQN,GAEvB,EAAKrB,KAAK4B,WAAWN,KAAKN,GAE1BxH,EAAQb,MAAMkJ,eAAe,EAAK7B,KAAM,EAAImB,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,WAAY,IA7GrG,EAiHnBoB,OAAS,WACL,OACI,yBAjHJ,EAAK8F,UAAOpH,EACZ,EAAK0J,SAAM1J,EAHI,E,UADDkE,aCyHP+F,E,kDAxHX,WAAYzJ,GAAQ,IAAD,8BACf,cAAMA,IAKVC,kBAAoB,WAChB,EAAKuG,aACL,EAAKC,iBARU,EAWnBE,qBAAuB,WACnB,EAAKC,KAAKC,WAZK,EAenBL,WAAa,WAET,IAAMM,EAAO,EAAK9G,MAAM8G,KAAO,EAAK9G,MAAM8G,KAAO,EAC3CC,EAAO,EAAK/G,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,EAC3CC,EAAO,EAAKhH,MAAMgH,KAAO,EAAKhH,MAAMgH,KAAO,EAGjD,EAAKJ,KAAO1G,cAAoB+G,UAApB,kBACGH,EADH,YACWC,EADX,YACmBC,GAC3B,CAAEE,OAAQ,EAAGC,MAAO,EAAGC,MAAO,GAC9BhH,EAAQb,OAIZ,EAAK2J,IAAMhJ,cAAoBiJ,WAC3B,GACA,cACA,aACA/I,EAAQb,OACR,SAAC6J,GACGA,EAAOC,SAAQ,SAACzC,GACZA,EAAK0C,UAAU,EAAK1C,MACpBA,EAAKS,SAASE,GAAK,MAIvB,EAAKX,KAAKS,SAASC,EAAIR,EACvB,EAAKF,KAAKS,SAASE,EAAIR,EACvB,EAAKH,KAAKS,SAASG,EAAIR,EAEvB,EAAKN,0BA7CE,EAmDnBD,cAAgB,WACZ,IAAIvE,EAAW,IAAIhC,mBAAyB,wBAAyBE,EAAQb,OAC7E2C,EAASqH,MAAQ,EAGjB,EAAK3C,KAAK1E,SAAWA,GAxDN,EA2DnBwE,oBAAsB,WAClB,IAEMqB,EAA2C,KAFjC,EAAK/H,MAAMgI,QAAU,EAAKhI,MAAMgI,QAAU,IAC7C,EAAKhI,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,IACM,EAEjDa,EAAiB,IAAI1H,YACvB,iBACA,WACAE,EAAQV,UACRQ,YAAkB2H,sBAClB3H,YAAkB4H,yBAGhBG,EAAY,GAClBA,EAAUC,KAAK,CACXC,MAAO,EACPC,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UAAa,EACjF0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KAAO,GAClB,EAAK/G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KACX,EAAK/G,MAAMgH,QAGnBY,EAAeW,QAAQN,GAEvB,EAAKrB,KAAK4B,WAAWN,KAAKN,GAE1BxH,EAAQb,MAAMkJ,eAAe,EAAK7B,KAAM,EAAImB,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,WAAY,IA7GrG,EAiHnBoB,OAAS,WACL,OACI,yBAjHJ,EAAK8F,UAAOpH,EACZ,EAAK0J,SAAM1J,EAHI,E,UADDkE,aCyHPgG,E,kDAxHX,WAAY1J,GAAQ,IAAD,8BACf,cAAMA,IAKVC,kBAAoB,WAChB,EAAKuG,aACL,EAAKC,iBARU,EAWnBE,qBAAuB,WACnB,EAAKC,KAAKC,WAZK,EAenBL,WAAa,WAET,IAAMM,EAAO,EAAK9G,MAAM8G,KAAO,EAAK9G,MAAM8G,KAAO,EAC3CC,EAAO,EAAK/G,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,EAC3CC,EAAO,EAAKhH,MAAMgH,KAAO,EAAKhH,MAAMgH,KAAO,EAGjD,EAAKJ,KAAO1G,cAAoB+G,UAApB,kBACGH,EADH,YACWC,EADX,YACmBC,GAC3B,CAAEE,OAAQ,EAAGC,MAAO,EAAGC,MAAO,GAC9BhH,EAAQb,OAIZ,EAAK2J,IAAMhJ,cAAoBiJ,WAC3B,GACA,cACA,aACA/I,EAAQb,OACR,SAAC6J,GACGA,EAAOC,SAAQ,SAACzC,GACZA,EAAK0C,UAAU,EAAK1C,MACpBA,EAAKS,SAASE,GAAK,MAIvB,EAAKX,KAAKS,SAASC,EAAIR,EACvB,EAAKF,KAAKS,SAASE,EAAIR,EACvB,EAAKH,KAAKS,SAASG,EAAIR,EAEvB,EAAKN,0BA7CE,EAmDnBD,cAAgB,WACZ,IAAIvE,EAAW,IAAIhC,mBAAyB,wBAAyBE,EAAQb,OAC7E2C,EAASqH,MAAQ,EAGjB,EAAK3C,KAAK1E,SAAWA,GAxDN,EA2DnBwE,oBAAsB,WAClB,IAEMqB,EAA2C,KAFjC,EAAK/H,MAAMgI,QAAU,EAAKhI,MAAMgI,QAAU,IAC7C,EAAKhI,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,IACM,EAEjDa,EAAiB,IAAI1H,YACvB,iBACA,WACAE,EAAQV,UACRQ,YAAkB2H,sBAClB3H,YAAkB4H,yBAGhBG,EAAY,GAClBA,EAAUC,KAAK,CACXC,MAAO,EACPC,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UAAa,EACjF0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KAAO,GAClB,EAAK/G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KACX,EAAK/G,MAAMgH,QAGnBY,EAAeW,QAAQN,GAEvB,EAAKrB,KAAK4B,WAAWN,KAAKN,GAE1BxH,EAAQb,MAAMkJ,eAAe,EAAK7B,KAAM,EAAImB,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,WAAY,IA7GrG,EAiHnBoB,OAAS,WACL,OACI,yBAjHJ,EAAK8F,UAAOpH,EACZ,EAAK0J,SAAM1J,EAHI,E,UADDkE,aC2HPiG,E,kDA1HX,WAAY3J,GAAQ,IAAD,8BACf,cAAMA,IAKVC,kBAAoB,WAChB,EAAKuG,aACL,EAAKC,iBARU,EAWnBE,qBAAuB,WACnB,EAAKC,KAAKC,WAZK,EAenBL,WAAa,WAET,IAAMM,EAAO,EAAK9G,MAAM8G,KAAO,EAAK9G,MAAM8G,KAAO,EAC3CC,EAAO,EAAK/G,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,EAC3CC,EAAO,EAAKhH,MAAMgH,KAAO,EAAKhH,MAAMgH,KAAO,EAGjD,EAAKJ,KAAO1G,cAAoB+G,UAApB,mBACIH,EADJ,YACYC,EADZ,YACoBC,GAC5B,CAAEE,OAAQ,EAAGC,MAAO,EAAGC,MAAO,GAC9BhH,EAAQb,OAIZ,EAAK2J,IAAMhJ,cAAoBiJ,WAC3B,GACA,cACA,eACA/I,EAAQb,OACR,SAAC6J,GACGA,EAAOC,SAAQ,SAACzC,GACZA,EAAK0C,UAAU,EAAK1C,MACpBA,EAAKgD,QAAU,IAAI1J,UAAgB,GAAK,GAAK,IAC7C0G,EAAKS,SAASC,GAAK,GACnBV,EAAKS,SAASE,GAAK,MAIvB,EAAKX,KAAKS,SAASC,EAAIR,EACvB,EAAKF,KAAKS,SAASE,EAAIR,EACvB,EAAKH,KAAKS,SAASG,EAAIR,EAEvB,EAAKN,0BA/CE,EAqDnBD,cAAgB,WACZ,IAAIvE,EAAW,IAAIhC,mBAAyB,wBAAyBE,EAAQb,OAC7E2C,EAASqH,MAAQ,EAGjB,EAAK3C,KAAK1E,SAAWA,GA1DN,EA6DnBwE,oBAAsB,WAClB,IAEMqB,EAA2C,KAFjC,EAAK/H,MAAMgI,QAAU,EAAKhI,MAAMgI,QAAU,IAC7C,EAAKhI,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,IACM,EAEjDa,EAAiB,IAAI1H,YACvB,iBACA,WACAE,EAAQV,UACRQ,YAAkB2H,sBAClB3H,YAAkB4H,yBAGhBG,EAAY,GAClBA,EAAUC,KAAK,CACXC,MAAO,EACPC,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UAAa,EACjF0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KAAO,GAClB,EAAK/G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KACX,EAAK/G,MAAMgH,QAGnBY,EAAeW,QAAQN,GAEvB,EAAKrB,KAAK4B,WAAWN,KAAKN,GAE1BxH,EAAQb,MAAMkJ,eAAe,EAAK7B,KAAM,EAAImB,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,WAAY,IA/GrG,EAmHnBoB,OAAS,WACL,OACI,yBAnHJ,EAAK8F,UAAOpH,EACZ,EAAK0J,SAAM1J,EAHI,E,UADAkE,aC2HRmG,E,kDA1HX,WAAY7J,GAAQ,IAAD,8BACf,cAAMA,IAKVC,kBAAoB,WAChB,EAAKuG,aACL,EAAKC,iBARU,EAWnBE,qBAAuB,WACnB,EAAKC,KAAKC,WAZK,EAenBL,WAAa,WAET,IAAMM,EAAO,EAAK9G,MAAM8G,KAAO,EAAK9G,MAAM8G,KAAO,EAC3CC,EAAO,EAAK/G,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,EAC3CC,EAAO,EAAKhH,MAAMgH,KAAO,EAAKhH,MAAMgH,KAAO,EAGjD,EAAKJ,KAAO1G,cAAoB+G,UAApB,eACAH,EADA,YACQC,EADR,YACgBC,GACxB,CAAEE,OAAQ,EAAGC,MAAO,EAAGC,MAAO,GAC9BhH,EAAQb,OAIZ,EAAK2J,IAAMhJ,cAAoBiJ,WAC3B,GACA,cACA,WACA/I,EAAQb,OACR,SAAC6J,GACGA,EAAOC,SAAQ,SAACzC,GACZA,EAAK0C,UAAU,EAAK1C,MACpBA,EAAKS,SAASE,GAAK,GACnBX,EAAKS,SAASC,GAAK,MAIvB,EAAKV,KAAKS,SAASC,EAAIR,EACvB,EAAKF,KAAKS,SAASE,EAAIR,EACvB,EAAKH,KAAKS,SAASG,EAAIR,EACvB,EAAKJ,KAAKkD,SAASvC,EAAI/F,KAAKC,GAE5B,EAAKiF,0BA/CE,EAqDnBD,cAAgB,WACZ,IAAIvE,EAAW,IAAIhC,mBAAyB,wBAAyBE,EAAQb,OAC7E2C,EAASqH,MAAQ,EAGjB,EAAK3C,KAAK1E,SAAWA,GA1DN,EA6DnBwE,oBAAsB,WAClB,IAEMqB,EAA2C,KAFjC,EAAK/H,MAAMgI,QAAU,EAAKhI,MAAMgI,QAAU,IAC7C,EAAKhI,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,IACM,EAEjDa,EAAiB,IAAI1H,YACvB,iBACA,WACAE,EAAQV,UACRQ,YAAkB2H,sBAClB3H,YAAkB4H,yBAGhBG,EAAY,GAClBA,EAAUC,KAAK,CACXC,MAAO,EACPC,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UAAa,EACjF0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KAAO,GAClB,EAAK/G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KACX,EAAK/G,MAAMgH,QAGnBY,EAAeW,QAAQN,GAEvB,EAAKrB,KAAK4B,WAAWN,KAAKN,GAE1BxH,EAAQb,MAAMkJ,eAAe,EAAK7B,KAAM,EAAImB,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,WAAY,IA/GrG,EAmHnBoB,OAAS,WACL,OACI,yBAnHJ,EAAK8F,UAAOpH,EACZ,EAAK0J,SAAM1J,EAHI,E,UADJkE,aC0HJqG,E,kDAzHX,WAAY/J,GAAQ,IAAD,8BACf,cAAMA,IAKVC,kBAAoB,WAChB,EAAKuG,aACL,EAAKC,iBARU,EAWnBE,qBAAuB,WACnB,EAAKC,KAAKC,WAZK,EAenBL,WAAa,WAET,IAAMM,EAAO,EAAK9G,MAAM8G,KAAO,EAAK9G,MAAM8G,KAAO,EAC3CC,EAAO,EAAK/G,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,EAC3CC,EAAO,EAAKhH,MAAMgH,KAAO,EAAKhH,MAAMgH,KAAO,EAGjD,EAAKJ,KAAO1G,cAAoB+G,UAApB,gBACCH,EADD,YACSC,EADT,YACiBC,GACzB,CAAEE,OAAQ,EAAGC,MAAO,EAAGC,MAAO,GAC9BhH,EAAQb,OAIZ,EAAK2J,IAAMhJ,cAAoBiJ,WAC3B,GACA,cACA,YACA/I,EAAQb,OACR,SAAC6J,GACGA,EAAOC,SAAQ,SAACzC,GACZA,EAAK0C,UAAU,EAAK1C,MACpBA,EAAKkD,SAASvC,EAAI,KAClBX,EAAKS,SAASE,GAAK,MAIvB,EAAKX,KAAKS,SAASC,EAAIR,EACvB,EAAKF,KAAKS,SAASE,EAAIR,EACvB,EAAKH,KAAKS,SAASG,EAAIR,EAEvB,EAAKN,0BA9CE,EAoDnBD,cAAgB,WACZ,IAAIvE,EAAW,IAAIhC,mBAAyB,wBAAyBE,EAAQb,OAC7E2C,EAASqH,MAAQ,EAGjB,EAAK3C,KAAK1E,SAAWA,GAzDN,EA4DnBwE,oBAAsB,WAClB,IAEMqB,EAA2C,KAFjC,EAAK/H,MAAMgI,QAAU,EAAKhI,MAAMgI,QAAU,IAC7C,EAAKhI,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,IACM,EAEjDa,EAAiB,IAAI1H,YACvB,iBACA,WACAE,EAAQV,UACRQ,YAAkB2H,sBAClB3H,YAAkB4H,yBAGhBG,EAAY,GAClBA,EAAUC,KAAK,CACXC,MAAO,EACPC,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UAAa,EACjF0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KAAO,GAClB,EAAK/G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KACX,EAAK/G,MAAMgH,QAGnBY,EAAeW,QAAQN,GAEvB,EAAKrB,KAAK4B,WAAWN,KAAKN,GAE1BxH,EAAQb,MAAMkJ,eAAe,EAAK7B,KAAM,EAAImB,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,WAAY,IA9GrG,EAkHnBoB,OAAS,WACL,OACI,yBAlHJ,EAAK8F,UAAOpH,EACZ,EAAK0J,SAAM1J,EAHI,E,UADHkE,aCwULsG,E,kDAvUX,WAAYhK,GAAQ,IAAD,8BACf,cAAMA,IAuBVC,kBAAoB,WAChB,EAAKuG,cAzBU,EA4BnBG,qBAAuB,WACnB,EAAKC,KAAKC,UACV,EAAKoD,cAAgB,EAAKC,iBAAmB,MA9B9B,EAiCnB1D,WAAa,WAET,IAAMM,EAAO,EAAK9G,MAAM8G,KAAO,EAAK9G,MAAM8G,KAAO,EAC3CC,EAAO,EAAK/G,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,EAC3CC,EAAO,EAAKhH,MAAMgH,KAAO,EAAKhH,MAAMgH,KAAO,EAC3CmD,EAAgB,EAAKnK,MAAMmK,cAAgB,EAAKnK,MAAMmK,cAAgB,EAG5E,EAAKvD,KAAO1G,cAAoB+G,UAC5B,YACA,CAAEC,OAAQ,EAAGC,MAAO,EAAGC,MAAO,GAC9BhH,EAAQb,OAIZ,IAAM6K,EAA0B,IAAIlK,WAAiB,2BACrDkK,EAAwBb,MAAQ,EAGhC,EAAK3C,KAAKS,SAAW,IAAInH,UAAgB4G,EAAMC,EAAMC,GACrD,EAAKJ,KAAK1E,SAAWkI,EAIrB,EAAKC,eAAiBnK,cAAoBiJ,WACtC,GACA,cACA,wBACA/I,EAAQb,OACR,SAAC6J,EAAQkB,EAAgBC,EAAUC,GAE/B,EAAKC,qBAAuBrB,EAC5B,EAAKa,cAAgBO,EAAgB,GACrC,EAAKN,iBAAmBM,EAAgB,GAIxCpB,EAAOC,SAAQ,SAAAzC,GACXA,EAAKgD,QAAU,IAAI1J,UAAgB,GAAK,GAAK,IAC7C0G,EAAKS,SAAW,IAAInH,UAChB4G,EAAO,EAAK4D,QACZ3D,EAAO,EAAKiB,QACZhB,EAAO,EAAK2D,SAEhB,IAAMC,EAAe,IAAI1K,mBAAyB,qBAClD0K,EAAa7I,cAAgB,IAAI7B,SAAe,EAAG,EAAG,GACtD0K,EAAa9I,aAAe,IAAI5B,SAAe,EAAG,GAAK,GACvD0K,EAAa3I,iBAAkB,EAC/B2I,EAAaC,aAAe,IAAI3K,SAAe,IAAM,IAAM,KAE3D0G,EAAK1E,SAAW0I,EAChBhE,EAAK0C,UAAU,EAAK1C,SAIxB,EAAKkE,uBAAyBX,EAC9B,EAAKvD,KAAKkD,SAASvC,GAAe,GAAV/F,KAAKC,GAAW0I,EAGxC,EAAKzD,0BA5FE,EAiGnBA,oBAAsB,WAClB,IAEMqB,EAA2C,KAFjC,EAAK/H,MAAMgI,QAAU,EAAKhI,MAAMgI,QAAU,IAC7C,EAAKhI,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,IACM,EAEjDa,EAAiB,IAAI1H,YACvB,iBACA,WACAE,EAAQV,UACRQ,YAAkB2H,sBAClB3H,YAAkB4H,yBAGhBG,EAAY,GAClBA,EAAUC,KAAK,CACXC,MAAO,EACPC,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UAAa,EACjF0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KAAO,GAClB,EAAK/G,MAAMgH,QAGnBiB,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KACX,EAAK/G,MAAMgH,QAGnBY,EAAeW,QAAQN,GAEvB,EAAKrB,KAAK4B,WAAWN,KAAKN,GAE1BxH,EAAQb,MAAMkJ,eAAe,EAAK7B,KAAM,EAAImB,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,WAAY,IAnJrG,EAsJnBqL,KAAO,WAEH,IAAMC,EAAW,EAAKF,uBAAyB,IAAM,EAAI,IAAM,IACzDG,EAAgB,EAAKH,wBAAyB,EAAI,GAAK,EAEvDI,EAAgB,IAAIhL,YACtB,oBADkB,mBAEN8K,GACZ5K,EAAQV,UACRQ,YAAkBiL,oBAClBjL,YAAkB4H,yBAGhBsD,EAAgB,GACtBA,EAAclD,KAAK,CACfC,MAAO,EACPC,MAAoB,MAAb4C,EAAmB,EAAKpE,KAAKS,SAASC,EAAI,EAAKV,KAAKS,SAASG,IAExE4D,EAAclD,KAAK,CACfC,MAAO,EAAKkD,eAAiBjL,EAAQV,UACrC0I,OAAqB,MAAb4C,EAAmB,EAAKpE,KAAKS,SAASC,EAAI,EAAKV,KAAKS,SAASG,GAAKyD,IAG9EC,EAAc3C,QAAQ6C,GAGlB,EAAKxE,KAAK4B,WAAW8C,OAAS,GAC9B,EAAK1E,KAAK4B,WAAW+C,MACzB,EAAK3E,KAAK4B,WAAWN,KAAKgD,GAE1B9K,EAAQb,MAAMkJ,eAAe,EAAK7B,KAAM,EAAG,EAAKyE,eAAiBjL,EAAQV,WAAW,GACpF,EAAKuK,cAAc1G,OACnB,EAAK2G,iBAAiBsB,OAAM,EAAO,EAAK,EAAKtB,iBAAiBuB,KAAM,EAAKvB,iBAAiBwB,IAAI,GAG9FC,YAAW,WACP,EAAKzB,iBAAiB3G,OACtB,EAAK0G,cAAcuB,OAAM,EAAM,EAAK,EAAKvB,cAAcwB,KAAM,EAAKxB,cAAcyB,IAAI,KAC/D,IAAtB,EAAKL,iBA5LO,EA+LnBO,SAAW,WAE6B,IAAhC,EAAKd,uBACL,EAAKA,uBAAyB,EAE9B,EAAKA,uBAAyBtJ,KAAKqK,KAAK,EAAKf,uBAAyB,GAAK,GAC/E1G,QAAQC,IAAR,6BAAkC,EAAKyG,yBAEvC,IAAMgB,EAAoB,IAAI5L,YAC1B,oBACA,aACAE,EAAQV,UACRQ,YAAkBiL,oBAClBjL,YAAkB4H,yBAGhBiE,EAAoB,GAC1BA,EAAkB7D,KAAK,CACnBC,MAAO,EACPC,MAAO,EAAKxB,KAAKkD,SAASvC,IAE9BwE,EAAkB7D,KAAK,CACnBC,MAAO,EAAKkD,eAAiBjL,EAAQV,UACrC0I,MAAO,EAAKxB,KAAKkD,SAASvC,EAAI/F,KAAKC,GAAG,IAG1CqK,EAAkBvD,QAAQwD,GAGtB,EAAKnF,KAAK4B,WAAW8C,OAAS,GAC9B,EAAK1E,KAAK4B,WAAW+C,MACzB,EAAK3E,KAAK4B,WAAWN,KAAK4D,GAE1B1L,EAAQb,MAAMkJ,eAAe,EAAK7B,KAAM,EAAG,EAAKyE,eAAiBjL,EAAQV,WAAW,IAhOrE,EAmOnBsM,UAAY,WAER,EAAKlB,uBAAyBtJ,KAAKqK,KAAK,EAAKf,uBAAyB,GAAK,GAC3E1G,QAAQC,IAAR,6BAAkC,EAAKyG,yBAEvC,IAAMmB,EAAqB,IAAI/L,YAC3B,oBACA,aACAE,EAAQV,UACRQ,YAAkBiL,oBAClBjL,YAAkB4H,yBAGhBoE,EAAqB,GAC3BA,EAAmBhE,KAAK,CACpBC,MAAO,EACPC,MAAO,EAAKxB,KAAKkD,SAASvC,IAE9B2E,EAAmBhE,KAAK,CACpBC,MAAO,EAAKkD,eAAiBjL,EAAQV,UACrC0I,MAAO,EAAKxB,KAAKkD,SAASvC,EAAI/F,KAAKC,GAAG,IAG1CwK,EAAmB1D,QAAQ2D,GAGvB,EAAKtF,KAAK4B,WAAW8C,OAAS,GAC9B,EAAK1E,KAAK4B,WAAW+C,MACzB,EAAK3E,KAAK4B,WAAWN,KAAK+D,GAE1B7L,EAAQb,MAAMkJ,eAAe,EAAK7B,KAAM,EAAG,EAAKyE,eAAiBjL,EAAQV,WAAW,IAjQrE,EAoQnByM,QAAU,WACN,IAAMC,EAA2B,IAAIlM,YACjC,2BACA,WACAE,EAAQV,UACRQ,YAAkB2H,sBAClB3H,YAAkB4H,yBAEhBuE,EAAmB,GACzBA,EAAiBnE,KAAK,CAClBC,MAAO,EACPC,MAAO,EAAKxB,KAAKS,WAErBgF,EAAiBnE,KAAK,CAClBC,MAAO,GAAM/H,EAAQV,UACrB0I,MAAO,IAAIlI,UACP,EAAK0G,KAAKS,SAASC,EACnB,IACA,EAAKV,KAAKS,SAASG,KAG3B6E,EAAiBnE,KAAK,CAClBC,MAAO,GAAM/H,EAAQV,UAAY,EACjC0I,MAAO,IAAIlI,UACP,EAAK0G,KAAKS,SAASC,EACnB,IACA,EAAKV,KAAKS,SAASG,KAG3B6E,EAAiBnE,KAAK,CAClBC,MAAO,GAAM/H,EAAQV,UACrB0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,IACA,EAAK9G,MAAMgH,QAGnBqF,EAAiBnE,KAAK,CAClBC,MAAO,GAAM/H,EAAQV,UACrB0I,MAAO,IAAIlI,UACP,EAAKF,MAAM8G,KACX,EAAK9G,MAAM+G,KACX,EAAK/G,MAAMgH,QAGnBoF,EAAyB7D,QAAQ8D,GAG7B,EAAKzF,KAAK4B,WAAW8C,OAAS,GAC9B,EAAK1E,KAAK4B,WAAW+C,MACzB,EAAK3E,KAAK4B,WAAWN,KAAKkE,GAG1BhM,EAAQb,MAAMkJ,eAAe,EAAK7B,KAAM,EAAG,GAAMxG,EAAQV,WAAW,GAGpE,EAAKkH,KAAKkD,SAASvC,EAAc,GAAV/F,KAAKC,GAAW,EAAKzB,MAAMmK,cAClD,EAAKW,uBAAyB,EAAK9K,MAAMmK,eA7T1B,EAgUnBrJ,OAAS,WACL,OACI,yBA9TJ,EAAK8F,UAAOpH,EACZ,EAAK6K,oBAAiB7K,EACtB,EAAKiL,0BAAuBjL,EAC5B,EAAKsL,uBAAyB9K,EAAMmK,cAGpC,EAAKO,QAAU,EACf,EAAK1C,SAAW,GAChB,EAAK2C,QAAU,EAGf,EAAKU,eAAiB,GACtB,EAAKS,uBAAoBtM,EACzB,EAAKyK,mBAAgBzK,EACrB,EAAK0K,sBAAmB1K,EAGxBY,EAAQT,UAAR,eArBe,E,UADC+D,a,iCCiCT4I,E,kDAjCX,WAAYtM,GAAQ,IAAD,8BACf,cAAMA,IAMVuM,gBAAkB,WAEdnM,EAAQR,cAAc2E,iBAAmB,EAAKvE,MAAMuE,iBACpDnE,EAAQR,cAAc4M,wBAAwBpM,EAAQP,aAAa4M,gBAVpD,EAanB3L,OAAS,WACL,IAAI4L,EAAiB,EAAK1M,MAAM2M,OAAS,iBAAmB,KACxDC,EAAsB,EAAK5M,MAAM6M,YAAc,EAAK7M,MAAM8M,gBAC9D,OACI,yBACItJ,UAAS,sBAAiBkJ,EAAjB,YAAmC,EAAK1M,MAAMwD,WACvDuJ,cAAY,QACZC,cAAY,iBACZhI,QAAS,EAAKuH,gBACdpH,SAAU,EAAKnF,MAAMmF,UAAYyH,EALrC,cASQ,EAAK5M,MAAM8M,gBAAkB,EAA7B,YAAsC,EAAK9M,MAAM8M,gBAAkB,EAAK9M,MAAM6M,WAA9E,UAAmG,SAxB/G,EAAK3J,MAAQ,CACT4J,gBAAiB,MAHN,E,UADMpJ,aCaduJ,E,uKAXP,OACI,sBAAKzJ,UAAU,YAAf,UACI,+CACElE,KAAKU,MAAMkN,SACb,6EACA,cAAC,IAAD,CAAMxB,GAAIpM,KAAKU,MAAMmN,UAAW3J,UAAU,yBAA1C,SAAoElE,KAAKU,MAAMoN,WAAa9N,KAAKU,MAAMoN,WAAa,sB,GAP5G1J,aCmBT2J,E,4MAlBXd,gBAAkB,WACU9L,OAAO6M,QAAQ,mDAClBlN,EAAQN,WAAWyN,YAAY,EAAKvN,MAAMwN,YAAa,EAAKxN,MAAMyN,Q,EAG3F3M,OAAS,WACL,OACI,wBACI0C,UAAU,iBACVwB,QAAS,EAAKuH,gBACdpH,SAAU,EAAKnF,MAAMmF,SAHzB,gB,YARoBzB,aCWjBgK,E,4MAVX5M,OAAS,WACL,OACI,sBAAK0C,UAAU,iBAAiBiK,MAAO,EAAKzN,MAAMyN,MAAlD,UACI,cAAC,EAAD,CAAmBA,MAAO,EAAKzN,MAAMyN,MAAOD,YAAa,EAAKxN,MAAMwN,YAAarI,SAAU,EAAKnF,MAAMmF,WACtG,yC,YALQzB,aCyBTiK,E,4MAvBXC,kBAAoB,SAAC5M,GAAW,IACpBoH,EAAUpH,EAAM+C,OAAhBqE,MACRhI,EAAQN,WAAW+N,YACf,EAAK7N,MAAMwN,YACX,EAAKxN,MAAMyN,MACX,CAAEK,UAAW1F,K,EAIrBtH,OAAS,WACL,OACI,sBAAK0C,UAAU,iBAAiBiK,MAAO,EAAKzN,MAAMyN,MAAlD,UACI,cAAC,EAAD,CAAmBA,MAAO,EAAKzN,MAAMyN,MAAOD,YAAa,EAAKxN,MAAMwN,YAAarI,SAAU,EAAKnF,MAAMmF,WACtG,qCACA,yBAAQ3B,UAAU,eAAe4E,MAAO,EAAKpI,MAAM8N,UAAWC,SAAU,EAAKH,kBAAmBzI,SAAU,EAAKnF,MAAMmF,SAArH,UACI,wBAAQiD,MAAM,KAAd,kBACA,wBAAQA,MAAM,IAAd,0B,YAjBI1E,aCmETsK,E,kDAjEX,WAAYhO,GAAQ,IAAD,8BACf,cAAMA,IAIViO,mBAAqB,WACjB,EAAKC,wBANU,EASnBA,qBAAuB,WAInB,IAFA,IAAMC,EAAU,EAAKnO,MAAMwN,YAAYY,MAAM,KAAKC,KAAI,SAAAxF,GAAC,OAAKA,KACxDyF,OAAmB9O,EACdqJ,EAAI,EAAGA,EAAIsF,EAAQ7C,OAAQzC,IAChC,IAAoB,IAAhBsF,EAAQtF,GACRyF,EAAmBlO,EAAQN,WAAWoD,MAAMqL,cACzC,CACH,IAAKD,EAAiBH,EAAQtF,IAAK,OACnCyF,EAAmBA,EAAiBH,EAAQtF,IAAIqE,SAInDoB,EAAiB,EAAKtO,MAAMyN,SACjC,EAAKe,qBAAuBF,EAAiB,EAAKtO,MAAMyN,OAAOP,WAvBhD,EA0BnBuB,mBAAqB,SAACzN,GAAW,IACrBoH,EAAUpH,EAAM+C,OAAhBqE,MAGRhI,EAAQN,WAAW+N,YACf,EAAK7N,MAAMwN,YACX,EAAKxN,MAAMyN,MACX,CAAEiB,WAAYtG,KAjCH,EAqCnBtH,OAAS,WACL,OACI,sBAAK0C,UAAU,aAAaiK,MAAO,EAAKzN,MAAMyN,MAA9C,UACI,cAAC,EAAD,CAAmBA,MAAO,EAAKzN,MAAMyN,MAAOD,YAAa,EAAKxN,MAAMwN,YAAarI,SAAU,EAAKnF,MAAMmF,WACtG,qCACI,uBACIF,KAAK,SACLzB,UAAU,eACVmL,IAAI,IACJC,IAAI,KACJb,SAAU,EAAKU,mBACfrG,MAAO,EAAKpI,MAAM0O,WAClBvJ,SAAU,EAAKnF,MAAMmF,WAE7B,sCACA,qBAAK3B,UAAU,WAAf,SAEQ,EAAKgL,qBAAqBH,KAAI,SAACQ,EAAMC,GACjC,OAAO1O,EAAQN,WAAWiP,YAAYF,EAAMC,EAArC,UAA6C,EAAK9O,MAAMwN,YAAxD,YAAuE,EAAKxN,MAAMyN,aAIrG,cAAC,EAAD,CAAgBjK,UAAU,kBAAkBe,iBAAgB,UAAK,EAAKvE,MAAMwN,YAAhB,YAA+B,EAAKxN,MAAMyN,OAAStI,SAAU,EAAKnF,MAAMmF,SAAU0H,WAAY,EAAK7M,MAAM6M,WAAYC,gBAAiB,EAAK9M,MAAM8M,sBAzDrN,EAAKoB,uBAFU,E,UADCxK,aCsGTsL,E,kDArGX,WAAYhP,GAAQ,IAAD,8BACf,cAAMA,IAIViO,mBAAqB,WACjB,EAAKC,wBANU,EASnBA,qBAAuB,WAInB,IAFA,IAAMC,EAAU,EAAKnO,MAAMwN,YAAYY,MAAM,KAAKC,KAAI,SAAAxF,GAAC,OAAKA,KACxDyF,OAAmB9O,EACdqJ,EAAI,EAAGA,EAAIsF,EAAQ7C,OAAQzC,IAChC,IAAoB,IAAhBsF,EAAQtF,GACRyF,EAAmBlO,EAAQN,WAAWoD,MAAMqL,cACzC,CACH,IAAKD,EAAiBH,EAAQtF,IAAK,OACnCyF,EAAmBA,EAAiBH,EAAQtF,IAAIqE,SAInDoB,EAAiB,EAAKtO,MAAMyN,SACjC,EAAKe,qBAAuBF,EAAiB,EAAKtO,MAAMyN,OAAOP,WAvBhD,EA0BnB+B,iBAAmB,SAACjO,GAAW,IACnBoH,EAAUpH,EAAM+C,OAAhBqE,MAGRhI,EAAQN,WAAW+N,YACf,EAAK7N,MAAMwN,YACX,EAAKxN,MAAMyN,MACX,CAAEyB,SAAU9G,KAjCD,EAqCnB+G,oBAAsB,SAACnO,GAAW,IACtBoH,EAAUpH,EAAM+C,OAAhBqE,MAGRhI,EAAQN,WAAW+N,YACf,EAAK7N,MAAMwN,YACX,EAAKxN,MAAMyN,MACX,CAAE2B,YAAahH,KA5CJ,EAgDnBiH,qBAAuB,SAACrO,GAAW,IACvBoH,EAAUpH,EAAM+C,OAAhBqE,MAGRhI,EAAQN,WAAW+N,YACf,EAAK7N,MAAMwN,YACX,EAAKxN,MAAMyN,MACX,CAAE6B,aAAclH,KAvDL,EA2DnBtH,OAAS,WACL,OACI,sBAAK0C,UAAU,WAAWiK,MAAO,EAAKzN,MAAMyN,MAA5C,UACI,cAAC,EAAD,CAAmBA,MAAO,EAAKzN,MAAMyN,MAAOD,YAAa,EAAKxN,MAAMwN,YAAarI,SAAU,EAAKnF,MAAMmF,WACtG,mCACA,sBAAK3B,UAAU,UAAf,UACI,wBAAQA,UAAU,uBAAuB+L,KAAK,cAAcnH,MAAO,EAAKpI,MAAMoP,YAAarB,SAAU,EAAKoB,oBAAqBhK,SAAU,EAAKnF,MAAMmF,SAApJ,SAEQ/E,EAAQN,WAAW0P,4BAA4BnB,KAAI,SAACoB,EAAQC,GACxD,OACI,wBAAQtH,MAAOqH,EAAOzL,GAAtB,SAAqCyL,EAAOE,QAAbD,QAK/C,yBAAQlM,UAAU,wBAAwB+L,KAAK,WAAWnH,MAAO,EAAKpI,MAAMkP,SAAUnB,SAAU,EAAKkB,iBAAkB9J,SAAU,EAAKnF,MAAMmF,SAA5I,UACI,wBAAQiD,MAAM,SAAd,eACA,wBAAQA,MAAM,aAAd,mBAEJ,wBAAQ5E,UAAU,uBAAuB+L,KAAK,eAAenH,MAAO,EAAKpI,MAAMsP,aAAcvB,SAAU,EAAKsB,qBAAsBlK,SAAU,EAAKnF,MAAMmF,SAAvJ,SAEQ/E,EAAQN,WAAW8P,6BAA6BvB,KAAI,SAACoB,EAAQC,GACzD,OACI,wBAAQtH,MAAOqH,EAAOzL,GAAtB,SAAqCyL,EAAOE,QAAbD,WAMnD,qBAAKlM,UAAU,WAAf,SAEQ,EAAKgL,qBAAqBH,KAAI,SAACQ,EAAMC,GACjC,OAAO1O,EAAQN,WAAWiP,YAAYF,EAAMC,EAArC,UAA6C,EAAK9O,MAAMwN,YAAxD,YAAuE,EAAKxN,MAAMyN,aAIrG,cAAC,EAAD,CAAgBjK,UAAU,gBAAgBe,iBAAgB,UAAK,EAAKvE,MAAMwN,YAAhB,YAA+B,EAAKxN,MAAMyN,OAAStI,SAAU,EAAKnF,MAAMmF,SAAW0H,WAAY,EAAK7M,MAAM6M,WAAYC,gBAAiB,EAAK9M,MAAM8M,sBA7FpN,EAAKoB,uBAFU,E,UADDxK,aCwZPmM,E,kDAhZX,WAAY7P,GAAQ,IAAD,8BACf,cAAMA,IA+BVC,kBAAoB,aAhCD,EAoCnB6P,gBAAkB,SAACvB,GAEf,EAAK1K,SACD,CAAEkM,WAAW,IACb,WACI,EAAK9L,iBAKb,EAAK+L,SAAS,EAAK9M,MAAMqL,WAAW0B,MAAK,SAACC,GACtC,GAAKA,EAEE,CACH,IAAMC,EAAoB/P,EAAQT,UAAUiH,KAAKS,SAClBjH,EAAQP,aAAauQ,MAAMD,EAAkB5I,EAAI,EAAKvH,MAAMgI,SAASmI,EAAkB7I,GAAG6I,EAAkB3I,KAAO6I,EAAahK,UACnI,EAAKiK,cAC5B,EAAKC,kBALV,EAAKA,iBAhDE,EA0DnBD,YAAc,WACVlM,QAAQC,IAAI,+BACZ,EAAKR,SACD,CAAEkM,WAAW,EAAOS,oBAAoB,IACxC,WACI,EAAKvM,kBA/DE,EAoEnBsM,WAAa,WAETnM,QAAQqM,MAAM,qBACdrQ,EAAQT,UAAUwM,UAClB,EAAKtI,SACD,CAAEkM,WAAW,IACb,WACI,EAAK9L,kBA3EE,EAgFnB+L,SAhFmB,uCAgFR,WAAOrD,GAAP,mBAAA+D,EAAA,oEAEW/D,GAFX,yDAEEgE,EAFF,aAGIA,EAAM1L,KAHV,OAIM,SAJN,OAOM,SAPN,QAUM,SAVN,QAaM,OAbN,yCAKgB,EAAK8F,OALrB,6DAKoC,GALpC,6DAQgB,EAAK6F,KAAKD,EAAM7C,WARhC,6DAQmD,GARnD,6DAWgB,EAAKnL,KAAKgO,GAX1B,6DAWyC,GAXzC,6DAcgB,EAAKE,IAAIF,GAdzB,6DAcwC,GAdxC,mDAiBKvM,QAAQqM,MAAR,uCAA8CE,EAAM1L,OAjBzD,mBAkBY,GAlBZ,WAsBgB,SAAf0L,EAAM1L,MAAkC,OAAf0L,EAAM1L,KAtBhC,kCAsBqD,EAAK6L,YAAY,KAtBtE,yKA4BA,GA5BA,gEAhFQ,wDAmHnBC,eAAiB,aAnHE,EAqJnBhG,KArJmB,sBAqJZ,sBAAA2F,EAAA,yDAEE,EAAKM,UAFP,0CAEyB,GAFzB,cAMH5Q,EAAQT,UAAUoL,OANf,mBAOI,GAPJ,2CArJY,EA+JnB6F,KA/JmB,uCA+JZ,WAAO9C,GAAP,SAAA4C,EAAA,2DACI5C,EADJ,OAEM,MAFN,OAKM,OALN,6BAGK1N,EAAQT,UAAUqM,YAHvB,kCAMK5L,EAAQT,UAAUiM,WANvB,kCASKxH,QAAQqM,MAAR,2CAAkD3C,IATvD,qDAYI,GAZJ,4CA/JY,wDA8KnBnL,KA9KmB,uCA8KZ,WAAOsO,GAAP,eAAAP,EAAA,sDACK7H,EAAI,EADT,YACYA,EAAIoI,EAAYvC,YAD5B,gCAEY,EAAKsB,SAASiB,EAAY/D,UAFtC,2DAEwD,GAFxD,OACwCrE,IADxC,gDAII,GAJJ,4CA9KY,wDAqLnBgI,IArLmB,uCAqLb,WAAOK,GAAP,eAAAR,EAAA,sDACExB,EAAiC,WAAtBgC,EAAShC,SADtB,KAEKgC,EAAS9B,YAFd,OAGO,cAHP,4BAIa8B,EAAS5B,aAJtB,OAKe,aALf,0BAMkB,EAAK0B,YAAc9B,EANrC,kCAO4B,EAAKc,SAASkB,EAAShE,UAPnD,6DAOqE,GAPrE,4CAWc9I,QAAQqM,MAAM,qCAAsCS,EAAS5B,cAX3E,mDAeMlL,QAAQqM,MAAM,oCAAqCS,EAAS9B,aAflE,mBAgBa,GAhBb,kCAmBK,GAnBL,4CArLa,wDA2MnB+B,aAAe,SAACC,EAAgBC,GAG5B,IAFA,IAAMlD,EAAUkD,EAAkBjD,MAAM,KAAKC,KAAI,SAAAxF,GAAC,OAAKA,KACnDyF,OAAmB9O,EACdqJ,EAAI,EAAGA,EAAIsF,EAAQ7C,OAAQzC,IAE5ByF,GADgB,IAAhBH,EAAQtF,GACWuI,EAEA9C,EAAiBH,EAAQtF,IAAIqE,SAGxD,OAAOoB,GArNQ,EAwNnBhK,SAAW,SAACgN,EAAW9D,GACnB,EAAK3J,UACD,SAAA0N,GAGI,IAAIC,EAAeC,KAAKC,MACpBD,KAAKE,UAAUJ,EAAUhD,YAKzBqD,EAAiB,EAAKT,aAAaK,EAAchE,GAGrD,OAAO8D,GACH,IAAK,OACDM,EAAe1J,KAAK,CAChBjD,KAAM,SAEV,MACJ,IAAK,OACD2M,EAAe1J,KAAK,CAChBjD,KAAM,OACN6I,UAAW,MAEf,MACJ,IAAK,OACD8D,EAAe1J,KAAK,CAChBjD,KAAM,OACNyJ,WAAY,EACZxB,SAAU,KAEd,MACJ,IAAK,KACD0E,EAAe1J,KAAK,CAChBjD,KAAM,KACNiK,SAAU,SACVE,YAAa,YACbE,aAAc,WACdpC,SAAU,KAEd,MACJ,QACI9I,QAAQqM,MAAR,mCAA0Ca,IAKlD,MAAO,CACH/C,UAAWiD,EACX3E,WAAY0E,EAAU1E,WAAa,MAG3C,WACI,EAAK5I,kBA9QE,EAmRnB4J,YAAc,SAACL,EAAaqE,EAAYC,GACpC,EAAKjO,UACD,SAAA0N,GAGI,IAAIC,EAAeC,KAAKC,MACpBD,KAAKE,UAAUJ,EAAUhD,YAGzBqD,EAAiB,EAAKT,aAAaK,EAAchE,GAQrD,OALApI,OAAO2M,KAAKD,GAAUzI,SAAQ,SAACyF,GAC3B8C,EAAeC,GAAY/C,GAAOgD,EAAShD,MAIxC,CACHP,UAAWiD,MAGnB,WACI,EAAKvN,kBAzSE,EA8SnBsJ,YAAc,SAACC,EAAaqE,GACxB,EAAKhO,UACD,SAAA0N,GAGI,IAAIC,EAAeC,KAAKC,MACpBD,KAAKE,UAAUJ,EAAUhD,YAQ7B,OALqB,EAAK4C,aAAaK,EAAchE,GAEtCwE,OAAOH,EAAY,GAG3B,CACHtD,UAAWiD,EACX3E,WAAY0E,EAAU1E,WAAa,MAG3C,WACI,EAAK5I,kBAlUE,EAuUnB8K,YAAc,SAACkD,EAAenD,EAAKtB,GAC/B,OAAOyE,EAAchN,MACjB,IAAK,OACD,OACI,cAAC,EAAD,CAEIwI,MAAOqB,EACPtB,YAAaA,EACbrI,SAAU,EAAKjC,MAAM6M,WAHhBjB,GAMjB,IAAK,OACD,OACI,cAAC,EAAD,CAEIrB,MAAOqB,EACPtB,YAAaA,EACbM,UAAWmE,EAAcnE,UACzB3I,SAAU,EAAKjC,MAAM6M,WAJhBjB,GAOjB,IAAK,OACD,OACI,cAAC,EAAD,CAEIrB,MAAOqB,EACPtB,YAAaA,EACbkB,WAAYuD,EAAcvD,WAC1BvJ,SAAU,EAAKjC,MAAM6M,UACrBlD,WAAY,EAAK3J,MAAM2J,WACvBC,gBAAiB,EAAK5J,MAAM4J,iBANvBgC,GASjB,IAAK,KACD,OACI,cAAC,EAAD,CAEIrB,MAAOqB,EACPtB,YAAaA,EACb0B,SAAU+C,EAAc/C,SACxBE,YAAa6C,EAAc7C,YAC3BE,aAAc2C,EAAc3C,aAC5BnK,SAAU,EAAKjC,MAAM6M,UACrBlD,WAAY,EAAK3J,MAAM2J,WACvBC,gBAAiB,EAAK5J,MAAM4J,iBARvBgC,GAWjB,QACI,OAAO,0DAA6B2C,KAAKE,UAAUM,QAvX5C,EA2XnBnR,OAAS,WACL,OACI,qBAAK0C,UAAU,aAAf,SAEQ,EAAKN,MAAMsN,mBACX,cAAC,EAAD,CAAWrD,UAAW,EAAKnN,MAAMmN,YAC/B,gCAEM,EAAKjK,MAAMqL,UAAUF,KAAI,SAACQ,EAAMC,GAC5B,OAAO,EAAKC,YAAYF,EAAMC,EAAK,SAG3C,cAAC,EAAD,CAAgBvK,iBAAiB,KAAKY,SAAU,EAAKjC,MAAM6M,UAAWpD,OAAO,IAAIE,WAAY,EAAK3J,MAAM2J,WAAYC,gBAAiB,EAAK5J,MAAM4J,kBAChJ,wBAAQtJ,UAAU,+BAA+BwB,QAAS,WAAO,EAAK8K,mBAAoB3K,SAAU,EAAKjC,MAAM6M,UAA/G,oCArYhB,EAAK7M,MAAQ,CACTqL,UAAW,GACX2D,oBAAoB,EACpBpF,gBAAiB,EAAK9M,MAAM8M,gBAC5BD,WAAY,EACZkD,WAAW,EACXS,oBAAoB,GAIxB,EAAK2B,gBAAkB/M,OAAOC,OAAO,CACjC+M,KAAM,EACNC,KAAM,EACNC,GAAI,EACJC,KAAM,IAIV,EAAK/C,4BAA8B,CAC/B,CAAExL,GAAI,YAAa2L,OAAQ,cAE/B,EAAKC,6BAA+B,CAChC,CAAE5L,GAAI,WAAY2L,OAAQ,YAI9BvP,EAAQN,WAAR,eA7Be,E,wDA+GP0S,GACR,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAI/G,WAAW+G,EAASF,Q,gCASlD,IAAIG,EAAUvS,EAAQT,UAAUiH,KAAKS,SAASC,EAC1CsL,EAAUxS,EAAQT,UAAUiH,KAAKS,SAASG,EAE9C,OAAOpH,EAAQT,UAAUmL,wBACrB,KAAK,EACD8H,GAAW,EACX,MACJ,KAAK,EACDD,GAAW,EACX,MACJ,KAAK,EACDC,GAAW,EACX,MACJ,KAAK,EACDD,GAAW,EAMnB,GAAIA,EAAU,GAAKA,EAAU,EAAG,OAAO,EACvC,GAAIC,EAAU,GAAKA,EAAU,EAAG,OAAO,EACvC,IAAMC,EAAkBzS,EAAQP,aAAauQ,MAAMhQ,EAAQP,aAAamI,SAAS2K,GAASC,GAC1F,QAAKvC,EAAa/J,gBAAgBvB,SAAS8N,O,GAjJ1BnP,aCCVoP,E,uKATP,OACI,sBAAKtP,UAAU,aAAf,UACI,6BAAKlE,KAAKU,MAAM+S,UAChB,4BAAIzT,KAAKU,MAAMgT,oB,GALNtP,aCaVuP,E,4MAZXnS,OAAS,WACL,OACI,sBAAK0C,UAAU,oBAAf,UACI,qBAAKA,UAAU,sBAAf,0BAGA,4BAAI,EAAKxD,MAAMkN,e,YAPCxJ,aCsHjBwP,E,kDAnHX,WAAYlT,GAAQ,IAAD,8BACf,cAAMA,IAKVC,kBAAoB,WAChB,EAAKuG,aACL,EAAKC,gBACL,EAAKC,uBATU,EAYnBC,qBAAuB,WACnB,EAAKC,KAAKC,UACV,EAAKyD,eAAezD,WAdL,EAiBnBL,WAAa,WAET,IAAMM,EAAO,EAAK9G,MAAM8G,KAAO,EAAK9G,MAAM8G,KAAO,EAC3CC,EAAO,EAAK/G,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,EAC3CC,EAAO,EAAKhH,MAAMgH,KAAO,EAAKhH,MAAMgH,KAAO,EAGjD,EAAKJ,KAAO1G,cAAoB+G,UAApB,yBACUH,EADV,YACkBC,EADlB,YAC0BC,GAClC,CAAEE,OAAQ,IAAMC,MAAO,GAAKC,MAAO,IACnChH,EAAQb,OAIZ,EAAKqH,KAAKS,SAASC,EAAIR,EACvB,EAAKF,KAAKS,SAASE,EAAIR,EAAO,GAC9B,EAAKH,KAAKS,SAASG,EAAIR,EAEvB,EAAKmM,qBAAqBrM,EAAMC,EAAO,GAAKC,IAnC7B,EAsCnBP,cAAgB,WACZ,IAAIvE,EAAW,IAAIhC,mBAAyB,qBAAsBE,EAAQb,OAoB1E2C,EAASH,cAAgB,IAAI7B,SAAe,EAAG,EAAG,GAClDgC,EAASJ,aAAe,IAAI5B,SAAe,GAAK,GAAK,IACrDgC,EAASD,iBAAkB,EAG3B,EAAK2E,KAAK1E,SAAWA,GAhEN,EAmEnBwE,oBAAsB,WAClB,IAAMkB,EAAiB,IAAI1H,YACvB,iBACA,UACAE,EAAQV,UACRQ,YAAkB2H,sBAClB3H,YAAkB4H,yBAKhBC,EAA2C,KAFjC,EAAK/H,MAAMgI,QAAU,EAAKhI,MAAMgI,QAAU,IAC7C,EAAKhI,MAAM+G,KAAO,EAAK/G,MAAM+G,KAAO,IACM,EAEjDkB,EAAY,GAClBA,EAAUC,KAAK,CACXC,MAAO,EACPC,MAAOlI,UAAgBmI,SAE3BJ,EAAUC,KAAK,CACXC,MAAOJ,EAAwB3H,EAAQV,UACvC0I,MAAOlI,UAAgBmI,SAE3BJ,EAAUC,KAAK,CACXC,MAAQJ,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,UACpE0I,MAAOlI,UAAgBoI,QAE3BV,EAAeW,QAAQN,GAEvB,EAAKrB,KAAK4B,WAAWN,KAAKN,GAE1BxH,EAAQb,MAAMkJ,eAAe,EAAK7B,KAAM,EAAImB,EAAwB3H,EAAQV,UAAc,GAAMU,EAAQV,WAAY,IAjGrG,EAoGnByT,qBAAuB,SAACrM,EAAMC,EAAMC,GAChC,EAAKsD,eAAiBpK,iBAAuBkT,cAAc,IAAIlT,UAAgB4G,EAAMC,EAAMC,IAC3F,EAAKsD,eAAe+I,YAAc,KAClC,EAAK/I,eAAegJ,YAAc,GAClC,EAAKhJ,eAAeiJ,YAAc,GAClC,EAAKjJ,eAAekB,MAA2B,IAArB,EAAKxL,MAAMgI,UAzGtB,EA4GnBlH,OAAS,WACL,OACI,yBA5GJ,EAAK8F,UAAOpH,EACZ,EAAK8K,oBAAiB9K,EAHP,E,UADMkE,aCuJd8P,E,kDAnIX,WAAYxT,GAAO,IAAD,8BACd,cAAMA,IACDkD,MAAQ,CACTuQ,oBAAoB,GAIxB,EAAKhH,cAAgB,CAAC,OAAQ,QAG9B,EAAK2D,MAAQ,CACT,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,GAAI,EAAG,EAAG,IACd,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,GAAI,EAAG,EAAG,IACd,CAAC,EAAG,EAAG,EAAG,GAAI,GACd,CAAC,EAAG,GAAI,EAAG,GAAI,KAGvB,EAAKpI,QAAU,EACf5H,EAAQP,aAAR,eAhDc,E,gEAoDdO,EAAQiD,cAAcJ,wB,2CAGLqE,EAAGC,EAAGC,EAAGvC,GAI1B,OAFAsC,GAAKjI,KAAK0I,QAEH/C,GACH,KAAKyO,EAAYpO,KACb,OAAO,wBACX,KAAKoO,EAAYnO,MACb,OAAO,cAAC,EAAD,CAAYuB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAChE,KAAK0L,EAAYlO,MACb,OAAO,cAAC,EAAD,CAAYsB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAChE,KAAK0L,EAAYjO,KACb,OAAO,cAAC,EAAD,CAAWqB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC/D,KAAK0L,EAAYrN,UACb,OAAO,cAAC,EAAD,CAAgBS,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UACpE,KAAK0L,EAAY/N,OACb,OAAO,cAAC,EAAD,CAASmB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY9N,OACb,OAAO,cAAC,EAAD,CAASkB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY7N,OACb,OAAO,cAAC,EAAD,CAASiB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY5N,OACb,OAAO,cAAC,EAAD,CAASgB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAYxN,SACb,OAAO,cAAC,EAAD,CAAUY,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC9D,KAAK0L,EAAYvN,KACb,OAAO,cAAC,EAAD,CAAMW,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC1D,KAAK0L,EAAYtN,MACb,OAAO,cAAC,EAAD,CAAOU,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC3D,QACI,OAAO,2B,+BAIT,IAAD,OACL,OACI,gCAEI,sBAAKxE,UAAU,aAAf,UACI,cAAC,EAAD,CAAYuP,QAAQ,YAAYC,WAAW,eAC3C,cAAC,EAAD,CAAYhL,QAAS1I,KAAK0I,QAASmF,UAAU,8BAC7C,eAAC,EAAD,WACI,6DAAmC,uBADvC,mJAWA7N,KAAK8Q,MAAM/B,KAAI,SAACsF,EAAOC,GACnB,OAAO,sBAAKpQ,UAAS,gBAAWoQ,GAAzB,cACHD,EAAMtF,KAAI,SAACwF,EAAOC,GACd,OAAO,sBAAKtQ,UAAS,gBAAWsQ,GAAzB,cACHD,EAAMxF,KAAI,SAAC0F,EAAOC,GACd,OAAO,sBAAKxQ,UAAS,gBAAWwQ,GAAzB,cACH,EAAKC,qBACDH,EAAQF,EAAQI,EAAQD,GAFzB,MAAwCC,MAFhD,MAAwCF,MAFhD,MAAwCF,MAiBvD,cAAC,EAAD,CAAW9M,KAAM,EAAGC,KAAM,EAAGC,KAAM,EAAGgB,QAAS1I,KAAK0I,QAASmC,cAAe,W,GA9HrEzG,aCuIRwQ,E,kDAtIX,WAAYlU,GAAO,IAAD,8BACd,cAAMA,IACDkD,MAAQ,CACTuQ,oBAAoB,GAIxB,EAAKhH,cAAgB,CAAC,OAAQ,OAAQ,QACtC,EAAKK,gBAAkB,EAGvB,EAAKsD,MAAQ,CACT,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,GAAI,EAAG,GAAI,EAAG,GACf,CAAC,EAAG,GAAI,EAAG,GAAI,GACf,CAAC,EAAG,EAAG,GAAI,EAAG,GACd,CAAC,GAAI,EAAG,EAAG,GAAI,MAGvB,EAAKpI,QAAU,EACf5H,EAAQP,aAAR,eAjDc,E,gEAqDdO,EAAQiD,cAAcJ,wB,2CAGLqE,EAAGC,EAAGC,EAAGvC,GAI1B,OAFAsC,GAAKjI,KAAK0I,QAEH/C,GACH,KAAKyO,EAAYpO,KACb,OAAO,wBACX,KAAKoO,EAAYnO,MACb,OAAO,cAAC,EAAD,CAAYuB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAChE,KAAK0L,EAAYlO,MACb,OAAO,cAAC,EAAD,CAAYsB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAChE,KAAK0L,EAAYjO,KACb,OAAO,cAAC,EAAD,CAAWqB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC/D,KAAK0L,EAAYrN,UACb,OAAO,cAAC,EAAD,CAAgBS,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UACpE,KAAK0L,EAAY/N,OACb,OAAO,cAAC,EAAD,CAASmB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY9N,OACb,OAAO,cAAC,EAAD,CAASkB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY7N,OACb,OAAO,cAAC,EAAD,CAASiB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY5N,OACb,OAAO,cAAC,EAAD,CAASgB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAYxN,SACb,OAAO,cAAC,EAAD,CAAUY,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC9D,KAAK0L,EAAYvN,KACb,OAAO,cAAC,EAAD,CAAMW,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC1D,KAAK0L,EAAYtN,MACb,OAAO,cAAC,EAAD,CAAOU,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC3D,QACI,OAAO,2B,+BAIT,IAAD,OACL,OACI,gCAEI,sBAAKxE,UAAU,aAAf,UACI,cAAC,EAAD,CAAYuP,QAAQ,YAAYC,WAAW,UAC3C,cAAC,EAAD,CAAYhL,QAAS1I,KAAK0I,QAAS8E,gBAAiBxN,KAAKwN,gBAAiBK,UAAU,8BACpF,eAAC,EAAD,WACI,8CAAoB,uBADxB,8PAaA7N,KAAK8Q,MAAM/B,KAAI,SAACsF,EAAOC,GACnB,OAAO,sBAAKpQ,UAAS,gBAAWoQ,GAAzB,cACHD,EAAMtF,KAAI,SAACwF,EAAOC,GACd,OAAO,sBAAKtQ,UAAS,gBAAWsQ,GAAzB,cACHD,EAAMxF,KAAI,SAAC0F,EAAOC,GACd,OAAO,sBAAKxQ,UAAS,gBAAWwQ,GAAzB,cACH,EAAKC,qBACDH,EAAQF,EAAQI,EAAQD,GAFzB,MAAwCC,MAFhD,MAAwCF,MAFhD,MAAwCF,MAiBvD,cAAC,EAAD,CAAW9M,KAAM,EAAGC,KAAM,EAAGC,KAAM,EAAGgB,QAAS1I,KAAK0I,QAASmC,cAAe,W,GAjIrEzG,aCqJRyQ,E,kDApJX,WAAYnU,GAAO,IAAD,8BACd,cAAMA,IACDkD,MAAQ,CACTuQ,oBAAoB,GAIxB,EAAKhH,cAAgB,CAAC,OAAQ,OAAQ,QACtC,EAAKK,gBAAkB,EAGvB,EAAKsD,MAAQ,CACT,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,GAAI,GAAI,EAAG,EAAG,GACf,CAAC,GAAI,EAAG,EAAG,GAAI,IACf,CAAC,EAAG,GAAI,EAAG,EAAG,IAElB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,GAAI,GACd,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,IACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,KAIrB,EAAKpI,QAAU,EACf5H,EAAQP,aAAR,eAhEc,E,gEAoEdO,EAAQiD,cAAcJ,wB,2CAGLqE,EAAGC,EAAGC,EAAGvC,GAI1B,OAFAsC,GAAKjI,KAAK0I,QAEH/C,GACH,KAAKyO,EAAYpO,KACb,OAAO,wBACX,KAAKoO,EAAYnO,MACb,OAAO,cAAC,EAAD,CAAYuB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAChE,KAAK0L,EAAYlO,MACb,OAAO,cAAC,EAAD,CAAYsB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAChE,KAAK0L,EAAYjO,KACb,OAAO,cAAC,EAAD,CAAWqB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC/D,KAAK0L,EAAYrN,UACb,OAAO,cAAC,EAAD,CAAgBS,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UACpE,KAAK0L,EAAY/N,OACb,OAAO,cAAC,EAAD,CAASmB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY9N,OACb,OAAO,cAAC,EAAD,CAASkB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY7N,OACb,OAAO,cAAC,EAAD,CAASiB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY5N,OACb,OAAO,cAAC,EAAD,CAASgB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAYxN,SACb,OAAO,cAAC,EAAD,CAAUY,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC9D,KAAK0L,EAAYvN,KACb,OAAO,cAAC,EAAD,CAAMW,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC1D,KAAK0L,EAAYtN,MACb,OAAO,cAAC,EAAD,CAAOU,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC3D,QACI,OAAO,2B,+BAIT,IAAD,OACL,OACI,gCAEI,sBAAKxE,UAAU,aAAf,UACI,cAAC,EAAD,CAAYuP,QAAQ,cAAcC,WAAW,iBAC7C,cAAC,EAAD,CAAYhL,QAAS1I,KAAK0I,QAAS8E,gBAAiBxN,KAAKwN,gBAAiBK,UAAU,8BACpF,eAAC,EAAD,WACI,wDAA8B,uBADlC,qOAYA7N,KAAK8Q,MAAM/B,KAAI,SAACsF,EAAOC,GACnB,OAAO,sBAAKpQ,UAAS,gBAAWoQ,GAAzB,cACHD,EAAMtF,KAAI,SAACwF,EAAOC,GACd,OAAO,sBAAKtQ,UAAS,gBAAWsQ,GAAzB,cACHD,EAAMxF,KAAI,SAAC0F,EAAOC,GACd,OAAO,sBAAKxQ,UAAS,gBAAWwQ,GAAzB,cACH,EAAKC,qBACDH,EAAQF,EAAQI,EAAQD,GAFzB,MAAwCC,MAFhD,MAAwCF,MAFhD,MAAwCF,MAiBvD,cAAC,EAAD,CAAW9M,KAAM,EAAGC,KAAM,EAAGC,KAAM,EAAGgB,QAAS1I,KAAK0I,QAASmC,cAAe,W,GA/InEzG,aCuIV0Q,E,kDAtIX,WAAYpU,GAAO,IAAD,8BACd,cAAMA,IACDkD,MAAQ,CACTuQ,oBAAoB,GAIxB,EAAKhH,cAAgB,CAAC,OAAQ,OAAQ,OAAQ,MAC9C,EAAKK,gBAAkB,EAGvB,EAAKsD,MAAQ,CACT,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,GAAI,EAAG,EAAG,GACd,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,GAAI,GAAI,GAAI,GAChB,CAAC,EAAG,EAAG,GAAI,EAAG,GACd,CAAC,EAAG,EAAG,EAAG,EAAG,KAIrB,EAAKpI,QAAU,EACf5H,EAAQP,aAAR,eAlDc,E,gEAsDdO,EAAQiD,cAAcJ,wB,2CAGLqE,EAAGC,EAAGC,EAAGvC,GAI1B,OAFAsC,GAAKjI,KAAK0I,QAEH/C,GACH,KAAKyO,EAAYpO,KACb,OAAO,wBACX,KAAKoO,EAAYnO,MACb,OAAO,cAAC,EAAD,CAAYuB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAChE,KAAK0L,EAAYlO,MACb,OAAO,cAAC,EAAD,CAAYsB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAChE,KAAK0L,EAAYjO,KACb,OAAO,cAAC,EAAD,CAAWqB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC/D,KAAK0L,EAAYrN,UACb,OAAO,cAAC,EAAD,CAAgBS,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UACpE,KAAK0L,EAAY/N,OACb,OAAO,cAAC,EAAD,CAASmB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY9N,OACb,OAAO,cAAC,EAAD,CAASkB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY7N,OACb,OAAO,cAAC,EAAD,CAASiB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY5N,OACb,OAAO,cAAC,EAAD,CAASgB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAYxN,SACb,OAAO,cAAC,EAAD,CAAUY,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC9D,KAAK0L,EAAYvN,KACb,OAAO,cAAC,EAAD,CAAMW,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC1D,KAAK0L,EAAYtN,MACb,OAAO,cAAC,EAAD,CAAOU,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC3D,QACI,OAAO,2B,+BAIT,IAAD,OACL,OACI,gCAEI,sBAAKxE,UAAU,aAAf,UACI,cAAC,EAAD,CAAYuP,QAAQ,aAAaC,WAAW,iBAC5C,cAAC,EAAD,CAAYhL,QAAS1I,KAAK0I,QAAS8E,gBAAiBxN,KAAKwN,gBAAiBK,UAAU,0BACpF,eAAC,EAAD,WACI,wDAA8B,uBADlC,4NAYA7N,KAAK8Q,MAAM/B,KAAI,SAACsF,EAAOC,GACnB,OAAO,sBAAKpQ,UAAS,gBAAWoQ,GAAzB,cACHD,EAAMtF,KAAI,SAACwF,EAAOC,GACd,OAAO,sBAAKtQ,UAAS,gBAAWsQ,GAAzB,cACHD,EAAMxF,KAAI,SAAC0F,EAAOC,GACd,OAAO,sBAAKxQ,UAAS,gBAAWwQ,GAAzB,cACH,EAAKC,qBACDH,EAAQF,EAAQI,EAAQD,GAFzB,MAAwCC,MAFhD,MAAwCF,MAFhD,MAAwCF,MAiBvD,cAAC,EAAD,CAAW9M,KAAM,EAAGC,KAAM,EAAGC,KAAM,EAAGgB,QAAS1I,KAAK0I,QAASmC,cAAe,W,GAjIpEzG,aCyIT2Q,E,kDA1IX,WAAYrU,GAAO,IAAD,8BACd,cAAMA,IACDkD,MAAQ,CACTuQ,oBAAoB,GAIxB,EAAKhH,cAAgB,CAAC,OAAQ,QAG9B,EAAK2D,MAAQ,CACT,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,GAAI,EAAG,EAAG,IACd,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,GAAI,EAAG,EAAG,IACd,CAAC,EAAG,EAAG,EAAG,GAAI,GACd,CAAC,EAAG,GAAI,EAAG,GAAI,KAGvB,EAAKpI,QAAU,EACf5H,EAAQP,aAAR,eAhDc,E,gEAoDdO,EAAQiD,cAAcP,yB,2CAGLwE,EAAGC,EAAGC,EAAGvC,GAI1B,OAFAsC,GAAKjI,KAAK0I,QAEH/C,GACH,KAAKyO,EAAYpO,KACb,OAAO,wBACX,KAAKoO,EAAYnO,MACb,OAAO,cAAC,EAAD,CAAYuB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAChE,KAAK0L,EAAYlO,MACb,OAAO,cAAC,EAAD,CAAYsB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAChE,KAAK0L,EAAYjO,KACb,OAAO,cAAC,EAAD,CAAWqB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC/D,KAAK0L,EAAYrN,UACb,OAAO,cAAC,EAAD,CAAgBS,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UACpE,KAAK0L,EAAY/N,OACb,OAAO,cAAC,EAAD,CAASmB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY9N,OACb,OAAO,cAAC,EAAD,CAASkB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY7N,OACb,OAAO,cAAC,EAAD,CAASiB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY5N,OACb,OAAO,cAAC,EAAD,CAASgB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAYxN,SACb,OAAO,cAAC,EAAD,CAAUY,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC9D,KAAK0L,EAAYvN,KACb,OAAO,cAAC,EAAD,CAAMW,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC1D,KAAK0L,EAAYtN,MACb,OAAO,cAAC,EAAD,CAAOU,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC3D,QACI,OAAO,2B,+BAIT,IAAD,OACL,OACI,gCAEI,sBAAKxE,UAAU,2BAAf,UACI,uCACS,uBADT,KAEM,uBAFN,UAKA,+GAIA,cAAC,IAAD,CACIA,UAAU,mCACVkI,GAAG,4BAFP,2BAWApM,KAAK8Q,MAAM/B,KAAI,SAACsF,EAAOC,GACnB,OAAO,sBAAKpQ,UAAS,gBAAWoQ,GAAzB,cACHD,EAAMtF,KAAI,SAACwF,EAAOC,GACd,OAAO,sBAAKtQ,UAAS,gBAAWsQ,GAAzB,cACHD,EAAMxF,KAAI,SAAC0F,EAAOC,GACd,OAAO,sBAAKxQ,UAAS,gBAAWwQ,GAAzB,cACH,EAAKC,qBACDH,EAAQF,EAAQI,EAAQD,GAFzB,MAAwCC,MAFhD,MAAwCF,MAFhD,MAAwCF,MAiBvD,cAAC,EAAD,CAAW9M,KAAM,EAAGC,KAAM,EAAGC,KAAM,EAAGgB,QAAS1I,KAAK0I,QAASmC,cAAe,W,GArIrEzG,aCkJR4Q,E,kDAjJX,WAAYtU,GAAO,IAAD,8BACd,cAAMA,IACDkD,MAAQ,CACTuQ,oBAAoB,GAIxB,EAAKhH,cAAgB,CAAC,OAAQ,QAG9B,EAAK2D,MAAQ,CACT,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjB,CACI,CAAC,EAAG,GAAI,EAAG,EAAG,IACd,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,GAAI,EAAG,EAAG,IACd,CAAC,EAAG,EAAG,EAAG,GAAI,GACd,CAAC,EAAG,GAAI,EAAG,GAAI,KAGvB,EAAKpI,QAAU,EACf5H,EAAQP,aAAR,eAhDc,E,gEAoDdO,EAAQiD,cAAcP,yB,2CAGLwE,EAAGC,EAAGC,EAAGvC,GAI1B,OAFAsC,GAAKjI,KAAK0I,QAEH/C,GACH,KAAKyO,EAAYpO,KACb,OAAO,wBACX,KAAKoO,EAAYnO,MACb,OAAO,cAAC,EAAD,CAAYuB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAChE,KAAK0L,EAAYlO,MACb,OAAO,cAAC,EAAD,CAAYsB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAChE,KAAK0L,EAAYjO,KACb,OAAO,cAAC,EAAD,CAAWqB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC/D,KAAK0L,EAAYrN,UACb,OAAO,cAAC,EAAD,CAAgBS,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UACpE,KAAK0L,EAAY/N,OACb,OAAO,cAAC,EAAD,CAASmB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY9N,OACb,OAAO,cAAC,EAAD,CAASkB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY7N,OACb,OAAO,cAAC,EAAD,CAASiB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAY5N,OACb,OAAO,cAAC,EAAD,CAASgB,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC7D,KAAK0L,EAAYxN,SACb,OAAO,cAAC,EAAD,CAAUY,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC9D,KAAK0L,EAAYvN,KACb,OAAO,cAAC,EAAD,CAAMW,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC1D,KAAK0L,EAAYtN,MACb,OAAO,cAAC,EAAD,CAAOU,KAAMQ,EAAGP,KAAMQ,EAAGP,KAAMQ,EAAGQ,QAAS1I,KAAK0I,UAC3D,QACI,OAAO,2B,+BAIT,IAAD,OACL,OACI,gCAEI,sBAAKxE,UAAU,2BAAf,UACI,uCACS,uBADT,KAEM,uBAFN,UAKA,yHAIA,cAAC,IAAD,CACIA,UAAU,qCACVkI,GAAG,qBAFP,+BAMA,mBAAGlI,UAAU,iBAAb,SACI,gCACI,mBAAG+Q,KAAK,gDAAR,2DAURjV,KAAK8Q,MAAM/B,KAAI,SAACsF,EAAOC,GACnB,OAAO,sBAAKpQ,UAAS,gBAAWoQ,GAAzB,cACHD,EAAMtF,KAAI,SAACwF,EAAOC,GACd,OAAO,sBAAKtQ,UAAS,gBAAWsQ,GAAzB,cACHD,EAAMxF,KAAI,SAAC0F,EAAOC,GACd,OAAO,sBAAKxQ,UAAS,gBAAWwQ,GAAzB,cACH,EAAKC,qBACDH,EAAQF,EAAQI,EAAQD,GAFzB,MAAwCC,MAFhD,MAAwCF,MAFhD,MAAwCF,MAiBvD,cAAC,EAAD,CAAW9M,KAAM,EAAGC,KAAM,EAAGC,KAAM,EAAGgB,QAAS1I,KAAK0I,QAASmC,cAAe,W,GA5IlEzG,aCkCX8Q,E,4MApCXtR,MAAQ,G,uDAGJ,OACI,eAAC,IAAD,WACI,qBAAKM,UAAU,MAAf,SACI,sBAAKA,UAAU,eAAf,UACI,cAAC,EAAD,IACA,eAAC,IAAD,CAAQA,UAAU,iBAAlB,UACI,cAAC,IAAD,CAAOiR,KAAK,qBAAqBC,OAAK,EAAtC,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,KAAK,4BAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,4BAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,4BAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,4BAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,wBAAZ,SACI,cAAC,EAAD,cAKhB,cAAC,EAAD,W,GA/BE/Q,aCNHiR,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5E,MAAK,YAAkD,IAA/C6E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASrU,OACL,cAAC,IAAMsU,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BX,M","file":"static/js/main.2357e48c.chunk.js","sourcesContent":["class Globals {\n    constructor() {\n        this.scene = undefined;\n        this.engine = undefined;\n        this.framerate = 60;\n        this.character = undefined;\n        this.addBlockModal = undefined;\n        this.currentLevel = undefined;\n        this.codeEngine = undefined;\n    }\n}\n\nexport default new Globals();","import React, { Component } from \"react\";\nimport * as BABYLON from \"babylonjs\";\nimport Globals from './Globals';\n\nclass BabylonCanvas extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { useWireFrame: false, shouldAnimate: false };\n        this.hemisphericLight = undefined;\n        this.underMapLighting = undefined;\n        this.arcRotateCamera = undefined;\n        this.backgroundMusic = undefined;\n\n        Globals.babylonCanvas = this;\n    }\n    \n    componentDidMount = () => {        \n        // Initialize scene and engine\n        this.engine = new BABYLON.Engine(this.canvas, true);\n        Globals.scene = new BABYLON.Scene(this.engine);\n        \n        // Intitialize the scene with the required elements\n        this.addLight();\n        this.addCamera();\n        this.addSkybox();\n        this.addMusic();\n\n        // Add Events\n        window.addEventListener(\"resize\", this.onWindowResize, false);\n        window.addEventListener(\"keydown\", this.onKeydownEvent);\n\n        // Render Loop\n        this.engine.runRenderLoop(() => {\n            Globals.scene.render();\n        });\n\n        // Handle animations and per frame calculations\n        // Simillar to Update() function in Unity\n        Globals.scene.registerBeforeRender(() => {\n            \n        });\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.onWindowResize, false);\n        this.backgroundMusic.stop();\n    }\n\n    onWindowResize = event => {\n        this.engine.resize();\n    };\n\n    onKeydownEvent = event => {\n        switch(event.keyCode) {\n            case 219: // [\n                Globals.scene.debugLayer.show();\n                break;\n            case 221: // ]\n                Globals.scene.debugLayer.hide();\n                break;\n            default:\n                break;\n        }\n    } \n\n    addLight = () => {\n        // Create a basic light, aiming 0,1,0 - meaning, to the sky.\n        this.hemisphericLight = new BABYLON.HemisphericLight(\n            \"hemisphericLight\",\n            new BABYLON.Vector3(0, 1, 0),\n            Globals.scene\n        );\n\n        // Create directional light below the map to light up the bottom faces\n        this.underMapLighting = new BABYLON.SpotLight(\n            \"underMapLight\",\n            new BABYLON.Vector3(2, -10, 2),\n            new BABYLON.Vector3(0, 1, 0),\n            Math.PI,\n            8,\n            Globals.scene\n        )\n    };\n\n    addSkybox = () => {\n        var photoSphere = BABYLON.Mesh.CreateSphere(\"skybox\", 16.0, 50.0, Globals.scene);\n\n        var skyboxMaterial = new BABYLON.StandardMaterial(\"skyboxMaterial\", Globals.scene);\n        skyboxMaterial.emissiveTexture = new BABYLON.Texture(\n            \"assets/other/skybox.png\",\n            Globals.scene,\n            1,\n            0\n        );\n        skyboxMaterial.diffuseColor = new BABYLON.Color3(0, 0, 0);\n        skyboxMaterial.specularColor = new BABYLON.Color3(0, 0, 0);\n        skyboxMaterial.emissiveTexture.uOffset = -Math.PI / 2; // left-right\n        skyboxMaterial.emissiveTexture.uOffset = 0.1; // up-down\n        skyboxMaterial.backFaceCulling = false;\n\n        photoSphere.material = skyboxMaterial;\n    }\n\n    addCamera = () => {\n        // ---------------ArcRotateCamera or Orbit Control----------\n        this.arcRotateCamera = new BABYLON.ArcRotateCamera(\n            \"MainCamera\",\n            Math.PI / 2,\n            Math.PI / 4,\n            10,\n            new BABYLON.Vector3(2, 0, 2),\n            Globals.scene\n        );\n        \n        this.arcRotateCamera.panningSensibility = 0;\n        this.arcRotateCamera.lowerRadiusLimit = this.arcRotateCamera.upperRadiusLimit = 10;\n\n        // camera.inertia = 0;\n        // camera.angularSensibilityX = 250;\n        // camera.angularSensibilityY = 250;\n\n        // This attaches the camera to the canvas\n        this.arcRotateCamera.attachControl(this.canvas, true);\n        this.arcRotateCamera.setPosition(new BABYLON.Vector3(7, 7, 7));\n        this.arcRotateCamera.beta = Math.PI / 2.5;\n    };\n\n    addMusic = () => {\n        this.backgroundMusic = new BABYLON.Sound(\n            \"backgroundMusic\",\n            \"assets/other/Hypnotic-Puzzle.mp3\",\n            Globals.scene,\n            null,\n            {\n                loop: true,\n                autoplay: true,\n                volume: 0.2\n            }\n        )\n    }\n\n    disableCameraControl = () => {\n        this.resetCameraPosition();\n        this.arcRotateCamera.detachControl()\n    }\n\n    enableCameraControl = () => {\n        this.resetCameraPosition();\n        this.arcRotateCamera.attachControl(this.canvas, true);\n    }\n\n    resetCameraPosition = () => {\n        this.arcRotateCamera.attachControl(this.canvas, true);\n        this.arcRotateCamera.setPosition(new BABYLON.Vector3(7, 7, 7));\n        this.arcRotateCamera.beta = Math.PI / 2.5;\n    }\n\n    render() {\n        return (\n            <canvas\n                className=\"renderCanvas\"\n                ref={canvas => {\n                    this.canvas = canvas;\n                }}\n            />\n        );\n    }\n}\nexport default BabylonCanvas;","import React, { Component } from 'react';\nimport Globals from '../../Globals';\n\nclass AddBlockModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedBlockType: null,\n            allowedBlockTypes: []\n        }\n        this.parentBlockIndex = -1;\n\n        Globals.addBlockModal = this;\n\n        // Bind functions\n        this.onChangeSelection = this.onChangeSelection.bind(this);\n    }\n\n    onChangeSelection = (event) => {\n        this.setState({\n            selectedBlockType: event.target.id\n        }, () => { this.forceUpdate() });\n    }\n\n    resetSelectedBlockType = (event) => {\n        this.setState({\n            selectedBlockType: null\n        });\n    }\n\n    onAddButtonClicked = () => {\n        console.log(`Adding ${this.state.selectedBlockType} block`);\n        Globals.codeEngine.addBlock(this.state.selectedBlockType, this.parentBlockIndex);\n        this.resetSelectedBlockType();\n    }\n\n    updateAllowedBlockTypes(blockTypesArray) {\n        this.setState({\n            allowedBlockTypes: blockTypesArray\n        });\n    }\n\n    render() { \n        return (\n            <div id=\"addBlockModal\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h4 className=\"modal-title\" id=\"myModalLabel\">Add Function</h4>                        </div>\n                        <div className=\"modal-body\">\n                            <form>\n                                <ul className=\"list-group\">\n                                    {\n                                        this.state.allowedBlockTypes.includes(\"WALK\") ?\n                                        <li className={`list-group-item list-group-item-primary ${this.state.selectedBlockType === \"WALK\" ? \"active\" : null}`} \n                                            id=\"WALK\" \n                                            onClick={this.onChangeSelection}\n                                        >\n                                        <b>Walk</b><br/>\n                                        Move the character one block towards the direction its facing\n                                        </li>\n                                        : null\n                                    }\n                                    {\n                                        this.state.allowedBlockTypes.includes(\"TURN\") ?\n                                        <li className={`list-group-item list-group-item-primary ${this.state.selectedBlockType === \"TURN\" ? \"active\" : null}`} \n                                            id=\"TURN\" \n                                            onClick={this.onChangeSelection}\n                                        >\n                                        <b>Turn</b><br/>\n                                        Rotate the character to the left or right\n                                        </li>\n                                        : null\n                                    }\n                                    {                    \n                                        this.state.allowedBlockTypes.includes(\"LOOP\") ?                \n                                        <li className={`list-group-item list-group-item-warning ${this.state.selectedBlockType === \"LOOP\" ? \"active\" : null}`} \n                                            id=\"LOOP\" \n                                            onClick={this.onChangeSelection}\n                                        >\n                                        <b>Loop</b><br/>\n                                        Run a set of functions in a loop\n                                        </li>\n                                        : null\n                                    }\n                                    {\n                                        this.state.allowedBlockTypes.includes(\"IF\") ?\n                                        <li className={`list-group-item list-group-item-danger ${this.state.selectedBlockType === \"IF\" ? \"active\" : null}`} \n                                            id=\"IF\" \n                                            onClick={this.onChangeSelection}\n                                        >\n                                        <b>If</b><br/>\n                                        Run a set of functions if a certain condition is met\n                                        </li> \n                                        : null\n                                    }\n                                </ul>\n                            </form>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button\n                                type=\"button\" className=\"btn btn-success\" \n                                data-dismiss=\"modal\"\n                                disabled={this.state.selectedBlockType === null}\n                                onClick={this.onAddButtonClicked}\n                            >\n                                Add\n                            </button>\n                            <button \n                                type=\"button\" className=\"btn btn-light\" data-dismiss=\"modal\" \n                                onClick={this.resetSelectedBlockType}\n                            >\n                                Cancel\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddBlockModal\n","/*\n    _ENVIRONMENT.js\n    Environment game objects id definition. Used for map spawning and referencing\n*/\n\nclass ENVIRONMENT {\n    NONE = 0;\n    STONE = 1;\n    GRASS = 2;\n    PATH = 3;\n    WALKED_PATH = 4\n    TREE_1 = 10;\n    TREE_2 = 11;\n    ROCK_1 = 12;\n    ROCK_2 = 13;\n    LARGE_RED_MUSHROOM = 14;\n    SMALL_PURPLE_MUSHROOM = 15;\n    SMALL_YELLOW_MUSHROOM = 16;\n    CAMPFIRE = 17;\n    TENT = 18;\n    FENCE = 19;\n    OBJECTIVE = 99;\n    \n    WALKABLE_BLOCKS = [this.PATH];\n}\n\n// Freeze the object to prevent changes\nexport default Object.freeze(new ENVIRONMENT());","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass StoneBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n        this.startSpawnAnimation();\n    }\n\n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `stoneBlock_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Modify mesh properties\n        this.mesh.position.x = posX;\n        this.mesh.position.y = posY;\n        this.mesh.position.z = posZ;\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"StoneBlockMaterial\", Globals.scene);\n        \n        // \n        material.diffuseTexture = new BABYLON.Texture(\"assets/textures/stone.png\", Globals.scene);\n        material.diffuseTexture.updateSamplingMode(BABYLON.Texture.NEAREST_NEAREST_MIPLINEAR);\n\n        // Use CubeTexture to map the texture to each face\n        // material.reflectionTexture = new BABYLON.CubeTexture(\"/assets/textures/grass/grass\", Globals.scene);\n        // material.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\n        // material.reflectionTexture.updateSamplingMode(BABYLON.Texture.NEAREST_NEAREST_MIPLINEAR);\n        // material.diffuseColor = new BABYLON.Color3(0, 0, 0);\n        material.specularColor = new BABYLON.Color3(0, 0, 0);\n        material.backFaceCulling = false;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"scaling\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: BABYLON.Vector3.Zero(),\n        });\n        keyFrames.push({\n            frame: animationDelaySeconds * Globals.framerate,\n            value: BABYLON.Vector3.Zero()\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: BABYLON.Vector3.One(),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default StoneBlock\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass GrassBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n        this.startSpawnAnimation();\n    }\n\n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Texture Options\n        // Source: https://playground.babylonjs.com/#ICLXQ8#1\n        let columns = 6;  // 6 columns\n        let rows = 1;  // 1 row\n\n        //alien sprite\n        let faceUV = new Array(6);\n\n        //set all faces to same\n        for (let i = 0; i < 6; i++) {\n            faceUV[i] = new BABYLON.Vector4(i / columns, 0, (i + 1) / columns, 1 / rows);\n        }\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `grassBlock_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1, faceUV: faceUV, wrap:true },\n            Globals.scene\n        );\n\n        // Modify mesh properties\n        this.mesh.position.x = posX;\n        this.mesh.position.y = posY;\n        this.mesh.position.z = posZ;\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"GrassBlockMaterial\", Globals.scene);\n        let texture = new BABYLON.Texture(\"assets/textures/grass_block.jpg\", Globals.scene);\n        material.diffuseTexture = texture;\n        material.specularColor = new BABYLON.Color3(0, 0, 0);\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"scaling\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: BABYLON.Vector3.Zero(),\n        });\n        keyFrames.push({\n            frame: animationDelaySeconds * Globals.framerate,\n            value: BABYLON.Vector3.Zero()\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: BABYLON.Vector3.One(),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default GrassBlock\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass PathBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n        this.startSpawnAnimation();\n    }\n\n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Texture Options\n        // Source: https://playground.babylonjs.com/#ICLXQ8#1\n        let columns = 6;  // 6 columns\n        let rows = 1;  // 1 row\n\n        //alien sprite\n        let faceUV = new Array(6);\n\n        //set all faces to same\n        for (let i = 0; i < 6; i++) {\n            faceUV[i] = new BABYLON.Vector4(i / columns, 0, (i + 1) / columns, 1 / rows);\n        }\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `grassBlock_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1, faceUV: faceUV, wrap:true },\n            Globals.scene\n        );\n\n        // Modify mesh properties\n        this.mesh.position.x = posX;\n        this.mesh.position.y = posY;\n        this.mesh.position.z = posZ;\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"GrassBlockMaterial\", Globals.scene);\n        let texture = new BABYLON.Texture(\"assets/textures/path_block.jpg\", Globals.scene);\n        material.diffuseTexture = texture;\n        material.specularColor = new BABYLON.Color3(0, 0, 0);\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"scaling\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: BABYLON.Vector3.Zero(),\n        });\n        keyFrames.push({\n            frame: animationDelaySeconds * Globals.framerate,\n            value: BABYLON.Vector3.Zero()\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: BABYLON.Vector3.One(),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default PathBlock\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass TreeOne extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n        this.obj = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n    }\n    \n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `treeOne_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Load 3D model\n        this.obj = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"tree_1.obj\",\n            Globals.scene,\n            (meshes) => {\n                meshes.forEach((mesh) => {\n                    mesh.setParent(this.mesh);\n                    mesh.position.y -= 0.5;\n                });\n\n                // Modify parent mesh properties\n                this.mesh.position.x = posX;\n                this.mesh.position.y = posY;\n                this.mesh.position.z = posZ;\n\n                this.startSpawnAnimation();\n            }\n        );\n\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"TreeOneParentMaterial\", Globals.scene);\n        material.alpha = 0;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"position\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate) - 1,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY + 0.5,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            ),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default TreeOne\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass TreeTwo extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n        this.obj = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n    }\n    \n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `treeTwo_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Load 3D model\n        this.obj = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"tree_2.obj\",\n            Globals.scene,\n            (meshes) => {\n                meshes.forEach((mesh) => {\n                    mesh.setParent(this.mesh);\n                    mesh.position.y -= 0.5;\n                });\n\n                // Modify parent mesh properties\n                this.mesh.position.x = posX;\n                this.mesh.position.y = posY;\n                this.mesh.position.z = posZ;\n\n                this.startSpawnAnimation();\n            }\n        );\n\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"TreeOneParentMaterial\", Globals.scene);\n        material.alpha = 0;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"position\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate) - 1,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY + 0.5,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            ),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default TreeTwo\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass RockOne extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n        this.obj = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n    }\n    \n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `rockOne_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Load 3D model\n        this.obj = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"rock_1.obj\",\n            Globals.scene,\n            (meshes) => {\n                meshes.forEach((mesh) => {\n                    mesh.setParent(this.mesh);\n                    mesh.position.y -= 0.5;\n                });\n\n                // Modify parent mesh properties\n                this.mesh.position.x = posX;\n                this.mesh.position.y = posY;\n                this.mesh.position.z = posZ;\n\n                this.startSpawnAnimation();\n            }\n        );\n\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"TreeOneParentMaterial\", Globals.scene);\n        material.alpha = 0;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"position\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate) - 1,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY + 0.5,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            ),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default RockOne\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass RockTwo extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n        this.obj = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n    }\n    \n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `rockTwo_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Load 3D model\n        this.obj = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"rock_2.obj\",\n            Globals.scene,\n            (meshes) => {\n                meshes.forEach((mesh) => {\n                    mesh.setParent(this.mesh);\n                    mesh.position.y -= 0.5;\n                });\n\n                // Modify parent mesh properties\n                this.mesh.position.x = posX;\n                this.mesh.position.y = posY;\n                this.mesh.position.z = posZ;\n\n                this.startSpawnAnimation();\n            }\n        );\n\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"TreeOneParentMaterial\", Globals.scene);\n        material.alpha = 0;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"position\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate) - 1,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY + 0.5,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            ),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default RockTwo\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass Campfire extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n        this.obj = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n    }\n    \n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `campfire_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Load 3D model\n        this.obj = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"campfire.obj\",\n            Globals.scene,\n            (meshes) => {\n                meshes.forEach((mesh) => {\n                    mesh.setParent(this.mesh);\n                    mesh.scaling = new BABYLON.Vector3(0.9, 0.9, 0.9);\n                    mesh.position.x += 0.1;\n                    mesh.position.y -= 0.5;\n                });\n\n                // Modify parent mesh properties\n                this.mesh.position.x = posX;\n                this.mesh.position.y = posY;\n                this.mesh.position.z = posZ;\n\n                this.startSpawnAnimation();\n            }\n        );\n\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"TreeOneParentMaterial\", Globals.scene);\n        material.alpha = 0;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"position\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate) - 1,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY + 0.5,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            ),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default Campfire;\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass Tent extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n        this.obj = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n    }\n    \n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `tent_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Load 3D model\n        this.obj = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"tent.obj\",\n            Globals.scene,\n            (meshes) => {\n                meshes.forEach((mesh) => {\n                    mesh.setParent(this.mesh);\n                    mesh.position.y -= 0.5;\n                    mesh.position.x -= 0.5;\n                });\n\n                // Modify parent mesh properties\n                this.mesh.position.x = posX;\n                this.mesh.position.y = posY;\n                this.mesh.position.z = posZ;\n                this.mesh.rotation.y = Math.PI;\n\n                this.startSpawnAnimation();\n            }\n        );\n\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"TreeOneParentMaterial\", Globals.scene);\n        material.alpha = 0;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"position\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate) - 1,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY + 0.5,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            ),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default Tent;\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass Fence extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n        this.obj = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n    }\n    \n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `fence_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Load 3D model\n        this.obj = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"fence.obj\",\n            Globals.scene,\n            (meshes) => {\n                meshes.forEach((mesh) => {\n                    mesh.setParent(this.mesh);\n                    mesh.rotation.y = 0.125;\n                    mesh.position.y -= 0.5;\n                });\n\n                // Modify parent mesh properties\n                this.mesh.position.x = posX;\n                this.mesh.position.y = posY;\n                this.mesh.position.z = posZ;\n\n                this.startSpawnAnimation();\n            }\n        );\n\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"TreeOneParentMaterial\", Globals.scene);\n        material.alpha = 0;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"position\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate) - 1,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY + 0.5,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            ),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default Fence;\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass Character extends Component {\n    constructor(props) {\n        super(props);\n\n        // Character\n        this.mesh = undefined;\n        this.characterModel = undefined;\n        this.characterModelMeshes = undefined;\n        this.characterFaceDirection = props.faceDirection;    // Value represents N E S W\n        \n        // Object position offset\n        this.xOffset = 0;\n        this.yOffset = -0.5;\n        this.zOffset = 0;\n\n        // Animations\n        this.animationSpeed = 0.5;\n        this.turnLeftAnimation = undefined;\n        this.idleAnimation = undefined;\n        this.walkingAnimation = undefined;\n\n        // Put a global reference to this object\n        Globals.character = this;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n    }\n    \n    componentWillUnmount = () => {\n        this.mesh.dispose();\n        this.idleAnimation = this.walkingAnimation = null;\n    }\n    \n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n        const faceDirection = this.props.faceDirection ? this.props.faceDirection : 0;\n        \n        // Create parent mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            \"character\",\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Create parent material for transparency\n        const characterParentMaterial = new BABYLON.Material(\"characterParentMaterial\");\n        characterParentMaterial.alpha = 0;\n            \n        // Modify parent object properties\n        this.mesh.position = new BABYLON.Vector3(posX, posY, posZ);\n        this.mesh.material = characterParentMaterial;\n        \n\n        // Load mesh\n        this.characterModel = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"character_running.glb\",\n            Globals.scene,\n            (meshes, particleSystem, skeleton, animationGroups) => {               \n                // Expose the meshes and animations to the outside world\n                this.characterModelMeshes = meshes;\n                this.idleAnimation = animationGroups[0];\n                this.walkingAnimation = animationGroups[1];\n                \n                \n                // Modify mesh properties\n                meshes.forEach(mesh => {\n                    mesh.scaling = new BABYLON.Vector3(0.1, 0.1, 0.1);\n                    mesh.position = new BABYLON.Vector3(\n                        posX + this.xOffset,\n                        posY + this.yOffset,\n                        posZ + this.zOffset\n                    );\n                    const meshMaterial = new BABYLON.StandardMaterial(\"characterMaterial\");\n                    meshMaterial.specularColor = new BABYLON.Color3(1 ,1 ,1);\n                    meshMaterial.diffuseColor = new BABYLON.Color3(1, 0.6, 0);\n                    meshMaterial.backFaceCulling = false;\n                    meshMaterial.ambientColor = new BABYLON.Color3(0.23, 0.98, 0.53);\n\n                    mesh.material = meshMaterial;\n                    mesh.setParent(this.mesh);\n                });\n\n                // Use rotation data from component properties\n                this.characterFaceDirection = faceDirection;\n                this.mesh.rotation.y += Math.PI * 0.5 * faceDirection;\n\n                // Start spawn animation after loading mesh\n                this.startSpawnAnimation();\n            }\n        );\n    }\n\n    startSpawnAnimation = () => {\n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"position\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate) - 1,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY + 0.5,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            ),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n    walk = () => {\n        // Determine the move axis and move direction\n        const moveAxis = this.characterFaceDirection % 2 === 0 ? \"z\" : \"x\";\n        const moveDirection = this.characterFaceDirection >=2 ? 1 : -1;\n\n        const walkAnimation = new BABYLON.Animation(\n            \"characterTurnleft\",\n            `position.${moveAxis}`,\n            Globals.framerate,\n            BABYLON.Animation.ANIMATIONTYPE_FLOAT,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n\n        const walkKeyframes = [];\n        walkKeyframes.push({\n            frame: 0,\n            value: moveAxis === \"x\" ? this.mesh.position.x : this.mesh.position.z\n        });\n        walkKeyframes.push({\n            frame: this.animationSpeed * Globals.framerate,\n            value: (moveAxis === \"x\" ? this.mesh.position.x : this.mesh.position.z) + moveDirection\n        });\n\n        walkAnimation.setKeys(walkKeyframes);\n\n        // Pop the last animation before adding another one\n        if (this.mesh.animations.length > 0)\n            this.mesh.animations.pop();\n        this.mesh.animations.push(walkAnimation);\n\n        Globals.scene.beginAnimation(this.mesh, 0, this.animationSpeed * Globals.framerate, false);\n        this.idleAnimation.stop();\n        this.walkingAnimation.start(false, 2.0, this.walkingAnimation.from, this.walkingAnimation.to, false);\n        \n        // Stop animation after finished walking\n        setTimeout(() => {\n            this.walkingAnimation.stop();\n            this.idleAnimation.start(true, 1.0, this.idleAnimation.from, this.idleAnimation.to, false);\n        }, this.animationSpeed * 1000);\n    }\n\n    turnLeft = () => {\n        // Update the direction of the character\n        if (this.characterFaceDirection === 0)\n            this.characterFaceDirection = 3;\n        else\n            this.characterFaceDirection = Math.abs((this.characterFaceDirection - 1) % 4);\n        console.log(`Rotating player to ${this.characterFaceDirection}`);\n\n        const turnLeftAnimation = new BABYLON.Animation(\n            \"characterTurnleft\",\n            \"rotation.y\",\n            Globals.framerate,\n            BABYLON.Animation.ANIMATIONTYPE_FLOAT,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n\n        const turnLeftKeyframes = [];\n        turnLeftKeyframes.push({\n            frame: 0,\n            value: this.mesh.rotation.y\n        });\n        turnLeftKeyframes.push({\n            frame: this.animationSpeed * Globals.framerate,\n            value: this.mesh.rotation.y - Math.PI/2\n        });\n\n        turnLeftAnimation.setKeys(turnLeftKeyframes);\n        \n        // Pop the last animation before adding another one\n        if (this.mesh.animations.length > 0)\n            this.mesh.animations.pop();\n        this.mesh.animations.push(turnLeftAnimation);\n\n        Globals.scene.beginAnimation(this.mesh, 0, this.animationSpeed * Globals.framerate, false);\n    }\n\n    turnRight = () => {\n        // Update the direction of the character\n        this.characterFaceDirection = Math.abs((this.characterFaceDirection + 1) % 4);\n        console.log(`Rotating player to ${this.characterFaceDirection}`);\n\n        const turnRightAnimation = new BABYLON.Animation(\n            \"characterTurnleft\",\n            \"rotation.y\",\n            Globals.framerate,\n            BABYLON.Animation.ANIMATIONTYPE_FLOAT,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n\n        const turnRightKeyframes = [];\n        turnRightKeyframes.push({\n            frame: 0,\n            value: this.mesh.rotation.y\n        });\n        turnRightKeyframes.push({\n            frame: this.animationSpeed * Globals.framerate,\n            value: this.mesh.rotation.y + Math.PI/2\n        });\n\n        turnRightAnimation.setKeys(turnRightKeyframes);\n        \n        // Pop the last animation before adding another one\n        if (this.mesh.animations.length > 0)\n            this.mesh.animations.pop();\n        this.mesh.animations.push(turnRightAnimation);\n\n        Globals.scene.beginAnimation(this.mesh, 0, this.animationSpeed * Globals.framerate, false);\n    }\n\n    respawn = () => {\n        const respawnPositionAnimation = new BABYLON.Animation(\n            \"characterRespawnPosition\",\n            \"position\",\n            Globals.framerate,\n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );        \n        const positionKeyframe = [];\n        positionKeyframe.push({\n            frame: 0,\n            value: this.mesh.position\n        });\n        positionKeyframe.push({\n            frame: 0.2 * Globals.framerate,\n            value: new BABYLON.Vector3(\n                this.mesh.position.x,\n                1.5,\n                this.mesh.position.z\n            )\n        });\n        positionKeyframe.push({\n            frame: 0.2 * Globals.framerate + 1,\n            value: new BABYLON.Vector3(\n                this.mesh.position.x,\n                1.5,\n                this.mesh.position.z\n            )\n        });\n        positionKeyframe.push({\n            frame: 0.4 * Globals.framerate,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                1.5,\n                this.props.posZ\n            )\n        });\n        positionKeyframe.push({\n            frame: 0.7 * Globals.framerate,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            )\n        });\n        respawnPositionAnimation.setKeys(positionKeyframe);\n        \n        // Pop the last animation before adding another one\n        if (this.mesh.animations.length > 0)\n            this.mesh.animations.pop();\n        this.mesh.animations.push(respawnPositionAnimation);\n\n        // Move character to spawn point\n        Globals.scene.beginAnimation(this.mesh, 0, 0.8 * Globals.framerate, false);\n        \n        // Rotate player to its original state\n        this.mesh.rotation.y = Math.PI * 0.5 * this.props.faceDirection;\n        this.characterFaceDirection = this.props.faceDirection;\n    }\n    \n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default Character\n","import React, { Component } from 'react';\nimport Globals from '../../Globals';\n\nclass AddBlockButton extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            blockCountLimit: null\n        }\n    }\n\n    onButtonClicked = () => {\n        // Set the modal's parent index reference\n        Globals.addBlockModal.parentBlockIndex = this.props.parentBlockIndex;\n        Globals.addBlockModal.updateAllowedBlockTypes(Globals.currentLevel.allowedBlocks);\n    }\n\n    render = () => {\n        let parentAddBlock = this.props.parent ? \"parentAddBlock\" : null;\n        let isBlockLimitReached = this.props.blockCount >= this.props.blockCountLimit\n        return (\n            <button \n                className={`btnAddBlock ${parentAddBlock} ${this.props.className}`}\n                data-toggle=\"modal\"\n                data-target=\"#addBlockModal\"\n                onClick={this.onButtonClicked}\n                disabled={this.props.disabled || isBlockLimitReached }\n            >\n                +\n                {\n                    this.props.blockCountLimit > 0 ? ` (${this.props.blockCountLimit - this.props.blockCount} left)` : null\n                }\n            </button>\n        )\n    }\n}\n\nexport default AddBlockButton\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass WinScreen extends Component {\n    render() {\n        return (\n            <div className=\"winScreen\">\n                <h1>Level Passed!</h1>\n                { this.props.children }\n                <p>Congratulations! You passed the first level.</p>\n                <Link to={this.props.nextLevel} className=\"btn btn-lg btn-success\">{this.props.buttonText ? this.props.buttonText : \"Next Level\"}</Link>\n            </div>\n        )\n    }\n}\n\nexport default WinScreen\n","import React, { Component } from 'react';\nimport Globals from '../../Globals';\n\nclass DeleteBlockButton extends Component {\n    onButtonClicked = () => {\n        const deleteConfirmed = window.confirm(\"Are you sure you want to delete this function?\");\n        if (deleteConfirmed) Globals.codeEngine.deleteBlock(this.props.parentIndex, this.props.index);\n    }\n\n    render = () => {\n        return (\n            <button \n                className=\"btnDeleteBlock\"\n                onClick={this.onButtonClicked}\n                disabled={this.props.disabled}\n            >\n                -\n            </button>\n        )\n    }\n}\n\nexport default DeleteBlockButton\n","import React, { Component } from 'react';\nimport DeleteBlockButton from '../uiElements/DeleteBlockButton';\n\nclass WalkBlock extends Component {\n    render = () => {\n        return (\n            <div className=\"block function\" index={this.props.index}>\n                <DeleteBlockButton index={this.props.index} parentIndex={this.props.parentIndex} disabled={this.props.disabled}/>\n                <p>Walk</p>\n            </div>\n        )\n    }\n}\n\nexport default WalkBlock\n","import React, { Component } from 'react';\nimport Globals from '../../Globals';\nimport DeleteBlockButton from '../uiElements/DeleteBlockButton';\n\nclass TurnBlock extends Component {\n    onSelectionChange = (event) => {\n        const { value } = event.target;\n        Globals.codeEngine.updateBlock(\n            this.props.parentIndex,\n            this.props.index,\n            { direction: value }\n        );\n    }\n\n    render = () => {\n        return (\n            <div className=\"block function\" index={this.props.index}>\n                <DeleteBlockButton index={this.props.index} parentIndex={this.props.parentIndex} disabled={this.props.disabled}/>\n                <p>Turn</p>\n                <select className=\"form-control\" value={this.props.direction} onChange={this.onSelectionChange} disabled={this.props.disabled}>\n                    <option value=\"-1\">Left</option>\n                    <option value=\"1\">Right</option>\n                </select>\n            </div>\n        )\n    }\n}\n\nexport default TurnBlock\n","import React, { Component } from 'react';\nimport Globals from '../../Globals';\nimport AddBlockButton from './AddBlockButton';\nimport DeleteBlockButton from './DeleteBlockButton';\n\nclass LoopBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.updateChildReference();\n    }\n    \n    componentDidUpdate = () => {\n        this.updateChildReference();\n    }\n    \n    updateChildReference = () => {\n        // Retrieve functions array reference from index props\n        const indexes = this.props.parentIndex.split(\" \").map(i => +i);\n        let currentParentRef = undefined;\n        for (let i = 0; i < indexes.length; i++) {\n            if (indexes[i] === -1) {\n                currentParentRef = Globals.codeEngine.state.functions;\n            } else {\n                if (!currentParentRef[indexes[i]]) return;\n                currentParentRef = currentParentRef[indexes[i]].children;\n            }\n        }\n\n        if (!currentParentRef[this.props.index]) return;\n        this.currentBlockChildren = currentParentRef[this.props.index].children;\n    }\n\n    onCycleCountChange = (event) => {\n        const { value } = event.target;\n\n        // Update value on CodeEngine\n        Globals.codeEngine.updateBlock(\n            this.props.parentIndex,\n            this.props.index,\n            { loopCycles: value }\n        );        \n    }\n\n    render = () => {\n        return (\n            <div className=\"block loop\" index={this.props.index}>\n                <DeleteBlockButton index={this.props.index} parentIndex={this.props.parentIndex} disabled={this.props.disabled}/>\n                <p>Loop</p>\n                    <input \n                        type=\"number\"\n                        className=\"form-control\"\n                        min=\"2\"\n                        max=\"99\"\n                        onChange={this.onCycleCountChange}\n                        value={this.props.loopCycles}\n                        disabled={this.props.disabled}\n                    />\n                <p>times</p>\n                <div className=\"children\">\n                    {\n                        this.currentBlockChildren.map((data, key) => {\n                            return Globals.codeEngine.renderBlock(data, key, `${this.props.parentIndex} ${this.props.index}`);\n                        })\n                    }\n                </div>\n                <AddBlockButton className=\"btnAddBlockLoop\" parentBlockIndex={`${this.props.parentIndex} ${this.props.index}`} disabled={this.props.disabled} blockCount={this.props.blockCount} blockCountLimit={this.props.blockCountLimit}/>\n            </div>\n        )\n    }\n}\n\nexport default LoopBlock\n","import React, { Component } from 'react';\nimport Globals from '../../Globals';\nimport AddBlockButton from './AddBlockButton';\nimport DeleteBlockButton from './DeleteBlockButton';\n\nclass IfBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.updateChildReference();\n    }\n    \n    componentDidUpdate = () => {\n        this.updateChildReference();\n    }\n    \n    updateChildReference = () => {\n        // Retrieve functions array reference from index props\n        const indexes = this.props.parentIndex.split(\" \").map(i => +i);\n        let currentParentRef = undefined;\n        for (let i = 0; i < indexes.length; i++) {\n            if (indexes[i] === -1) {\n                currentParentRef = Globals.codeEngine.state.functions;\n            } else {\n                if (!currentParentRef[indexes[i]]) return;\n                currentParentRef = currentParentRef[indexes[i]].children;\n            }\n        }\n\n        if (!currentParentRef[this.props.index]) return;\n        this.currentBlockChildren = currentParentRef[this.props.index].children;\n    }\n\n    onOperatorChange = (event) => {\n        const { value } = event.target;\n\n        // Update value on CodeEngine\n        Globals.codeEngine.updateBlock(\n            this.props.parentIndex,\n            this.props.index,\n            { operator: value }\n        );        \n    }\n\n    onLeftOperandChange = (event) => {\n        const { value } = event.target;\n\n        // Update value on CodeEngine\n        Globals.codeEngine.updateBlock(\n            this.props.parentIndex,\n            this.props.index,\n            { leftOperand: value }\n        );        \n    }\n\n    onRightOperandChange = (event) => {\n        const { value } = event.target;\n\n        // Update value on CodeEngine\n        Globals.codeEngine.updateBlock(\n            this.props.parentIndex,\n            this.props.index,\n            { rightOperand: value }\n        );        \n    }\n\n    render = () => {\n        return (\n            <div className=\"block if\" index={this.props.index}>\n                <DeleteBlockButton index={this.props.index} parentIndex={this.props.parentIndex} disabled={this.props.disabled}/>\n                <p>If</p>\n                <div className=\"options\">\n                    <select className=\"form-control operand\" name=\"leftOperand\" value={this.props.leftOperand} onChange={this.onLeftOperandChange} disabled={this.props.disabled}>\n                        {\n                            Globals.codeEngine.ifBlockLeftOperandSelection.map((option, idx) => {\n                                return (\n                                    <option value={option.id} key={idx}>{option.uiText}</option>\n                                );\n                            })\n                        }\n                    </select>\n                    <select className=\"form-control operator\" name=\"operator\" value={this.props.operator} onChange={this.onOperatorChange} disabled={this.props.disabled}>\n                        <option value=\"EQUALS\">=</option>\n                        <option value=\"NOT_EQUALS\">!=</option>\n                    </select>\n                    <select className=\"form-control operand\" name=\"rightOperand\" value={this.props.rightOperand} onChange={this.onRightOperandChange} disabled={this.props.disabled}>\n                        {\n                            Globals.codeEngine.ifBlockRightOperandSelection.map((option, idx) => {\n                                return (\n                                    <option value={option.id} key={idx}>{option.uiText}</option>\n                                );\n                            })\n                        }\n                    </select>\n                </div>\n                <div className=\"children\">\n                    {\n                        this.currentBlockChildren.map((data, key) => {\n                            return Globals.codeEngine.renderBlock(data, key, `${this.props.parentIndex} ${this.props.index}`);\n                        })\n                    }\n                </div>\n                <AddBlockButton className=\"btnAddBlockIf\" parentBlockIndex={`${this.props.parentIndex} ${this.props.index}`} disabled={this.props.disabled}  blockCount={this.props.blockCount} blockCountLimit={this.props.blockCountLimit}/>\n            </div>\n        )\n    }\n}\n\nexport default IfBlock;\n","import React, { Component } from 'react'\nimport Globals from '../../Globals';\nimport _ENVIRONMENT from '../gameObjects/_ENVIRONMENT';\n\n// CodeEngine DOM Elements\nimport AddBlockButton from '../uiElements/AddBlockButton';\nimport WinScreen from '../uiElements/WinScreen';\nimport WalkBlock from '../uiElements/WalkBlock';\nimport TurnBlock from '../uiElements/TurnBlock';\nimport LoopBlock from '../uiElements/LoopBlock';\nimport IfBlock from '../uiElements/IfBlock';\n\nclass CodeEngine extends Component {\n    constructor(props) {\n        super(props);\n        // const { allowedFunctions, level } = props;\n        this.state = {\n            functions: [],\n            hasBlockCountLimit: false,\n            blockCountLimit: this.props.blockCountLimit,\n            blockCount: 0,\n            isRunning: false,\n            isObjectiveReached: false\n        }\n\n        // Block types enum\n        this.CODE_BLOCK_TYPE = Object.freeze({\n            WALK: 0,\n            TURN: 1,\n            IF: 2,\n            LOOP: 3\n        });\n\n        // If block value definition\n        this.ifBlockLeftOperandSelection = [\n            { id: \"CHARACTER\", uiText: \"character\" }\n        ];\n        this.ifBlockRightOperandSelection = [\n            { id: \"CAN_WALK\", uiText: \"canWalk\" }\n        ];\n\n        // Reference current CodeEngine instance to globals\n        Globals.codeEngine = this;\n    }\n\n    componentDidMount = () => {\n\n    }\n\n    startSimulation = (functions) => {\n        // Disable buttons\n        this.setState(\n            { isRunning: true },\n            () => {\n                this.forceUpdate();\n            }\n        );\n\n        // Run recursive simulation function\n        this.simulate(this.state.functions).then((runSuccessfuly) => {\n            if (!runSuccessfuly) {\n                this.resetLevel();\n            } else {\n                const characterPosition = Globals.character.mesh.position;\n                const characterIsOnObjective = Globals.currentLevel.level[characterPosition.y + this.props.yOffset][characterPosition.x][characterPosition.z] === _ENVIRONMENT.OBJECTIVE;\n                if (characterIsOnObjective) this.finishLevel();\n                else this.resetLevel()\n            }\n        });\n    }\n    \n    finishLevel = () => {\n        console.log(\"Simulation ran successfuly.\");\n        this.setState(\n            { isRunning: false, isObjectiveReached: true },\n            () => {\n                this.forceUpdate();\n            }\n        );\n    }\n\n    resetLevel = () => {\n        // Reset level to its original state\n        console.error(\"Simulation failed\");\n        Globals.character.respawn();\n        this.setState(\n            { isRunning: false },\n            () => {\n                this.forceUpdate();\n            }\n        );\n    }\n\n    simulate = async (parent) => {\n        // Run actions based on the user input\n        for (let block of parent) {\n            switch(block.type) {\n                case \"WALK\":\n                    if (!await this.walk()) return false;\n                    break;\n                case \"TURN\":\n                    if (!await this.turn(block.direction)) return false;\n                    break;\n                case \"LOOP\":\n                    if (!await this.loop(block)) return false;\n                    break;\n                case \"IF\":\n                    if (!await this.if_(block)) return false;\n                    break;\n                default:\n                    console.error(`Invalid block type. Received ${block.type}`);\n                    return false;\n            }\n\n            // Do not add any execution delay if the current block is loop\n            if (block.type !== \"LOOP\" && block.type !== \"IF\") await this.delayAction(1000);\n            \n            // Check if the player has reached the final position\n        }\n\n        // Check if the player has reached the final position\n        return true;\n    }\n\n    delayAction(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    hasReachedGoal = () => {\n        // Check if the player has reached the final position\n    }\n\n    canWalk() {\n        // Validate if the player can move forward\n        let targetX = Globals.character.mesh.position.x;\n        let targetZ = Globals.character.mesh.position.z;\n\n        switch(Globals.character.characterFaceDirection) {\n            case 0: // Z-\n                targetZ -= 1;\n                break;\n            case 1:  // X-\n                targetX -= 1;\n                break;\n            case 2: // Z+\n                targetZ += 1;\n                break;\n            case 3: // X+\n                targetX += 1;\n                break;\n            default:\n                break;\n        }\n\n        if (targetX < 0 || targetX > 4) return false;\n        if (targetZ < 0 || targetZ > 4) return false;\n        const targetBlockType = Globals.currentLevel.level[Globals.currentLevel.yOffset][targetX][targetZ];\n        if (!_ENVIRONMENT.WALKABLE_BLOCKS.includes(targetBlockType)) return false;\n\n        return true;\n    }\n\n    walk = async () => {\n        // Before walking, check if the character can move into its direction\n        if (!this.canWalk()) return false;\n\n        // Send the command to move forward.\n        // Return true tells the recursive funciton to contunue running.\n        Globals.character.walk();\n        return true;\n    }\n\n    turn = async (direction) => {\n        switch(direction) {\n            case \"1\": // Turn right\n                Globals.character.turnRight();\n                break;\n            case \"-1\": // Turn left\n                Globals.character.turnLeft();\n                break;\n            default:\n                console.error(`Invalid turn direction. Received ${direction}`);\n                break;\n        }\n        return true;\n    }\n\n    loop = async (parentBlock) => {\n        for(let i = 0; i < parentBlock.loopCycles; i++) {\n            if (!await this.simulate(parentBlock.children)) return false;\n        }\n        return true;\n    }\n\n    if_ = async (metadata) => {\n        let operator = metadata.operator === \"EQUALS\";\n        switch(metadata.leftOperand) {\n            case \"CHARACTER\":\n                switch(metadata.rightOperand) {\n                    case \"CAN_WALK\":\n                        if (this.canWalk() === operator) {\n                            if(!await this.simulate(metadata.children)) return false;\n                        }\n                        break;\n                    default:\n                        console.error(\"Invalid if right operand. Received\", metadata.rightOperand);\n                }    \n                break;\n            default:\n                console.error(\"Invalid if left operand. Received\", metadata.leftOperand);\n                return false;\n        }\n\n        return true;\n    }\n\n    getParentRef = (functionsArray, parentIndexString) => {\n        const indexes = parentIndexString.split(\" \").map(i => +i);\n        let currentParentRef = undefined;\n        for (let i = 0; i < indexes.length; i++) {\n            if (indexes[i] === -1) {\n                currentParentRef = functionsArray;\n            } else {\n                currentParentRef = currentParentRef[indexes[i]].children;\n            }\n        }\n        return currentParentRef;\n    }\n\n    addBlock = (blockType, parentIndex) => {\n        this.setState(\n            prevState => {\n                // Duplicate the state to another variable\n                // Stringify and reparse JSON to do deep copy of nested objects\n                let newFunctions = JSON.parse(\n                    JSON.stringify(prevState.functions)\n                );\n\n                // Get the reference to the parent block\n                // Determines where the new objecrt is placed\n                let blockParentRef = this.getParentRef(newFunctions, parentIndex);\n\n                // Add the new block to the parent block\n                switch(blockType) {\n                    case \"WALK\":\n                        blockParentRef.push({\n                            type: \"WALK\"\n                        });\n                        break;\n                    case \"TURN\":\n                        blockParentRef.push({\n                            type: \"TURN\",\n                            direction: \"1\"    // 1: left, -1: right\n                        });\n                        break;\n                    case \"LOOP\":\n                        blockParentRef.push({\n                            type: \"LOOP\",\n                            loopCycles: 2,\n                            children: []\n                        });\n                        break;\n                    case \"IF\":\n                        blockParentRef.push({\n                            type: \"IF\",\n                            operator: \"EQUALS\",\n                            leftOperand: \"CHARACTER\",\n                            rightOperand: \"CAN_WALK\",\n                            children: []\n                        });\n                        break;\n                    default:\n                        console.error(`Unknown code block type: ${blockType}`);\n                        break; \n                }\n\n                // Return the new functions array\n                return {\n                    functions: newFunctions,\n                    blockCount: prevState.blockCount + 1\n                }\n            },\n            () => {\n                this.forceUpdate();\n            }\n        )\n    }\n\n    updateBlock = (parentIndex, blockIndex, newState) => {\n        this.setState(\n            prevState => {\n                // Duplicate the state to another variable\n                // Stringify and reparse JSON to do deep copy of nested objects\n                let newFunctions = JSON.parse(\n                    JSON.stringify(prevState.functions)\n                );\n\n                let blockParentRef = this.getParentRef(newFunctions, parentIndex);\n                \n                // Update block with the passed key value pair(s)\n                Object.keys(newState).forEach((key) => {\n                    blockParentRef[blockIndex][key] = newState[key];\n                });\n                \n                // Return the new functions array\n                return {\n                    functions: newFunctions\n                }\n            },\n            () => {\n                this.forceUpdate();\n            }\n        )\n    }\n\n    deleteBlock = (parentIndex, blockIndex) => {\n        this.setState(\n            prevState => {\n                // Duplicate the state to another variable\n                // Stringify and reparse JSON to do deep copy of nested objects\n                let newFunctions = JSON.parse(\n                    JSON.stringify(prevState.functions)\n                );\n\n                let blockParentRef = this.getParentRef(newFunctions, parentIndex);\n                \n                blockParentRef.splice(blockIndex, 1);\n\n                // Return the new functions array\n                return {\n                    functions: newFunctions,\n                    blockCount: prevState.blockCount - 1\n                }\n            },\n            () => {\n                this.forceUpdate();\n            }\n        )\n    }\n\n    renderBlock = (blockMetadata, key, parentIndex) => {\n        switch(blockMetadata.type) {\n            case \"WALK\":\n                return (\n                    <WalkBlock\n                        key={key}\n                        index={key}\n                        parentIndex={parentIndex}\n                        disabled={this.state.isRunning}\n                    />\n                );\n            case \"TURN\":\n                return (\n                    <TurnBlock \n                        key={key} \n                        index={key} \n                        parentIndex={parentIndex}\n                        direction={blockMetadata.direction}\n                        disabled={this.state.isRunning}\n                    />\n                );\n            case \"LOOP\":\n                return (\n                    <LoopBlock \n                        key={key}\n                        index={key}\n                        parentIndex={parentIndex}\n                        loopCycles={blockMetadata.loopCycles}\n                        disabled={this.state.isRunning}\n                        blockCount={this.state.blockCount}\n                        blockCountLimit={this.state.blockCountLimit}\n                    />\n                );\n            case \"IF\":\n                return (\n                    <IfBlock\n                        key={key}\n                        index={key}\n                        parentIndex={parentIndex}\n                        operator={blockMetadata.operator}\n                        leftOperand={blockMetadata.leftOperand}\n                        rightOperand={blockMetadata.rightOperand}\n                        disabled={this.state.isRunning}\n                        blockCount={this.state.blockCount}\n                        blockCountLimit={this.state.blockCountLimit}\n                    />\n                );\n            default:\n                return <div>Invalid data. Received {JSON.stringify(blockMetadata)}</div>;\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"codeEngine\">\n                {\n                    this.state.isObjectiveReached ?\n                    <WinScreen nextLevel={this.props.nextLevel}/>\n                    : <div>\n                        {\n                            this.state.functions.map((data, key) => {\n                                return this.renderBlock(data, key, \"-1\");\n                            })\n                        }\n                        <AddBlockButton parentBlockIndex=\"-1\" disabled={this.state.isRunning} parent=\"1\" blockCount={this.state.blockCount} blockCountLimit={this.state.blockCountLimit}/>\n                        <button className=\"btn btn-info startSimulation\" onClick={() => {this.startSimulation()}} disabled={this.state.isRunning}>Start Simulation</button>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default CodeEngine;\n","import React, { Component } from 'react';\n\nclass LevelTitle extends Component {\n    render() {\n        return (\n            <div className=\"titlePanel\">\n                <h1>{this.props.heading}</h1>\n                <p>{this.props.subheading}</p>\n            </div>\n        )\n    }\n}\n\nexport default LevelTitle\n","import React, { Component } from 'react';\n\nclass LevelInstructions extends Component {\n    render = () => {\n        return (\n            <div className=\"instructionsPanel\">\n                <div className=\"instructionsHeading\">\n                    Instructions\n                </div>\n                <p>{this.props.children}</p>\n            </div>\n        )\n    }\n}\n\nexport default LevelInstructions\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass ObjectivePoint extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n        this.particleSystem = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n        this.startSpawnAnimation();\n    }\n\n    componentWillUnmount = () => {\n        this.mesh.dispose();\n        this.particleSystem.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `objectivePoint_${posX},${posY},${posZ}`,\n            { height: 0.15, width: 0.8, depth: 0.8 },\n            Globals.scene\n        );\n\n        // Modify mesh properties\n        this.mesh.position.x = posX;\n        this.mesh.position.y = posY - 0.5;\n        this.mesh.position.z = posZ;\n\n        this.createParticleSystem(posX, posY - 0.5, posZ);\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"StoneBlockMaterial\", Globals.scene);\n        // let shaderMaterial = new BABYLON.ShaderMaterial(\n        //     \"objectiveShader\", \n        //     Globals.scene, \n        //     \"/cg-final-project/assets/other/ObjectivePoint\",\n        //     {\n        //     attributes: [\"position\", \"normal\", \"uv\"],\n        //     uniforms: [\"world\", \"worldView\", \"worldViewProjection\", \"view\", \"projection\", \"time\", \"direction\" ],\n        //     // defines: [\"MyDefine\"],\n        //     needAlphaBlending: true,\n        //     needAlphaTesting: true\n        //     }\n        // );\n        // let shaderMaterial = new BABYLON.ShaderMaterial(\"shader\", Globals.scene, {\n        //     vertexElement: \"objectivePointShader\",\n        //     // fragmentElement: \"fragmentShaderCode\"\n        // }, {\n        //     attributes: [\"position\", \"normal\", \"uv\"],\n        //     // uniforms: [\"world\", \"worldView\", \"worldViewProjection\", \"view\", \"project\"]\n        // });\n        material.specularColor = new BABYLON.Color3(0, 0, 0);\n        material.diffuseColor = new BABYLON.Color3(0.3, 0.3, 0.3);\n        material.backFaceCulling = false;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"scaling\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: BABYLON.Vector3.Zero(),\n        });\n        keyFrames.push({\n            frame: animationDelaySeconds * Globals.framerate,\n            value: BABYLON.Vector3.Zero()\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: BABYLON.Vector3.One(),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n    createParticleSystem = (posX, posY, posZ) => {\n        this.particleSystem = BABYLON.ParticleHelper.CreateDefault(new BABYLON.Vector3(posX, posY, posZ));\n        this.particleSystem.updateSpeed = 0.005;\n        this.particleSystem.minLifeTime = 0.1;\n        this.particleSystem.maxLifeTime = 0.5;\n        this.particleSystem.start(this.props.yOffset * 1000);\n    }\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default ObjectivePoint\n","import React, { Component } from 'react';\nimport ENVIRONMENT from '../gameObjects/_ENVIRONMENT';\nimport Globals from '../../Globals';\n\n// Babylon Objects\nimport StoneBlock from '../gameObjects/StoneBlock';\nimport GrassBlock from '../gameObjects/GrassBlock';\nimport PathBlock from '../gameObjects/PathBlock';\nimport TreeOne from '../gameObjects/TreeOne';\nimport TreeTwo from '../gameObjects/TreeTwo';\nimport RockOne from '../gameObjects/RockOne';\nimport RockTwo from '../gameObjects/RockTwo';\nimport Campfire from '../gameObjects/Campfire';\nimport Tent from '../gameObjects/Tent';\nimport Fence from '../gameObjects/Fence';\nimport Character from '../gameObjects/Character';\n\n// UI and Code Engine\nimport CodeEngine from '../codeEngine/CodeEngine';\nimport LevelTitle from '../uiElements/LevelTitle';\nimport LevelInstructions from '../uiElements/LevelInstructions';\nimport ObjectivePoint from '../gameObjects/ObjectivePoint';\n\nclass LevelOne extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            environmentSpawned: false\n        }\n\n        // Update allowed functions\n        this.allowedBlocks = [\"WALK\", \"TURN\"];\n\n        // level[y][x][z]\n        this.level = [ \n            [   // First Layer\n                [0, 0, 1, 0, 0],\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n                [0, 0, 1, 0, 0],\n            ],\n            [   // Second Layer\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n            ],\n            [   // ...\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n            ],\n            [\n                [2, 2, 2, 2, 2],\n                [2, 3, 3, 3, 2],\n                [2, 2, 2, 3, 2],\n                [2, 2, 2, 3, 2],\n                [2, 2, 2, 2, 2],\n            ],\n            [\n                [0, 13, 0, 0, 11],\n                [0, 0, 0, 0, 0],\n                [0, 18, 0, 0, 19],\n                [0, 0, 0, 99, 0],\n                [0, 10, 0, 12, 0],\n            ]\n        ]\n        this.yOffset = 3;\n        Globals.currentLevel = this;\n    }\n\n    componentDidMount() {\n        Globals.babylonCanvas.enableCameraControl();\n    }\n\n    spawnEnvironmentItem(x, y, z, type) {\n        // Apply y spawn offset\n        y -= this.yOffset;\n\n        switch(type) {\n            case ENVIRONMENT.NONE:\n                return <div></div>\n            case ENVIRONMENT.STONE:\n                return <StoneBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.GRASS:\n                return <GrassBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.PATH:\n                return <PathBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.OBJECTIVE:\n                return <ObjectivePoint posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TREE_1:\n                return <TreeOne posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TREE_2:\n                return <TreeTwo posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.ROCK_1:\n                return <RockOne posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.ROCK_2:\n                return <RockTwo posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.CAMPFIRE:\n                return <Campfire posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TENT:\n                return <Tent posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.FENCE:\n                return <Fence posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            default:\n                return <div></div>;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {/* Level Details */}\n                <div className=\"levelPanel\">\n                    <LevelTitle heading=\"Level One\" subheading=\"The Basics\"/>\n                    <CodeEngine yOffset={this.yOffset} nextLevel=\"/cg-final-project/level-2\"/>\n                    <LevelInstructions>\n                        <b>Welcome to your first level!</b><br/>\n                        To complete this level, you need to walk the\n                        character to the finish line using functions. \n                        To add a function, press the plus button above.\n                    </LevelInstructions>\n                </div>\n\n                {/* Spawn map environment */}\n                {\n                    // Spawn the map according to this.level\n                    this.level.map((yData, yIndex) => {\n                        return <div className={`env_y_${yIndex}`} key={yIndex}> {\n                            yData.map((xData, xIndex) => {\n                                return <div className={`env_x_${xIndex}`} key={xIndex}> {\n                                    xData.map((zData, zIndex) => {\n                                        return <div className={`env_z_${zIndex}`} key={zIndex}> {\n                                            this.spawnEnvironmentItem(\n                                                xIndex, yIndex, zIndex, zData\n                                            )\n                                        } </div>\n                                    })\n                                } </div>\n                            })\n                        } </div>\n                    })\n                }\n\n                {/* Spawn player object */}\n                <Character posX={1} posY={1} posZ={1} yOffset={this.yOffset} faceDirection={2}/>\n            </div>\n        )\n    }\n}\n\nexport default LevelOne\n","import React, { Component } from 'react';\nimport ENVIRONMENT from '../gameObjects/_ENVIRONMENT';\nimport Globals from '../../Globals';\n\n// Babylon Objects\nimport StoneBlock from '../gameObjects/StoneBlock';\nimport GrassBlock from '../gameObjects/GrassBlock';\nimport PathBlock from '../gameObjects/PathBlock';\nimport TreeOne from '../gameObjects/TreeOne';\nimport TreeTwo from '../gameObjects/TreeTwo';\nimport RockOne from '../gameObjects/RockOne';\nimport RockTwo from '../gameObjects/RockTwo';\nimport Campfire from '../gameObjects/Campfire';\nimport Tent from '../gameObjects/Tent';\nimport Fence from '../gameObjects/Fence';\nimport Character from '../gameObjects/Character';\n\n// UI and Code Engine\nimport CodeEngine from '../codeEngine/CodeEngine';\nimport LevelTitle from '../uiElements/LevelTitle';\nimport LevelInstructions from '../uiElements/LevelInstructions';\nimport ObjectivePoint from '../gameObjects/ObjectivePoint';\n\nclass LevelTwo extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            environmentSpawned: false\n        }\n\n        // Update allowed functions\n        this.allowedBlocks = [\"WALK\", \"TURN\", \"LOOP\"];\n        this.blockCountLimit = 5;\n\n        // level[y][x][z]\n        this.level = [ \n            [   // First Layer\n                [0, 0, 1, 0, 0],\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n                [0, 0, 1, 0, 0],\n            ],\n            [   // Second Layer\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n            ],\n            [   // ...\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n            ],\n            [\n                [3, 3, 3, 3, 3],\n                [2, 2, 2, 2, 3],\n                [2, 2, 2, 2, 3],\n                [2, 2, 2, 2, 3],\n                [2, 2, 2, 2, 3],\n            ],\n            [\n                [0, 0, 0, 0, 0],\n                [12, 0, 13, 0, 0],\n                [0, 11, 0, 19, 0],\n                [0, 0, 17, 0, 0],\n                [10, 0, 0, 12, 99],\n            ]\n        ]\n        this.yOffset = 3;\n        Globals.currentLevel = this;\n    }\n\n    componentDidMount() {\n        Globals.babylonCanvas.enableCameraControl();\n    }\n\n    spawnEnvironmentItem(x, y, z, type) {\n        // Apply y spawn offset\n        y -= this.yOffset;\n\n        switch(type) {\n            case ENVIRONMENT.NONE:\n                return <div></div>\n            case ENVIRONMENT.STONE:\n                return <StoneBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.GRASS:\n                return <GrassBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.PATH:\n                return <PathBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.OBJECTIVE:\n                return <ObjectivePoint posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TREE_1:\n                return <TreeOne posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TREE_2:\n                return <TreeTwo posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.ROCK_1:\n                return <RockOne posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.ROCK_2:\n                return <RockTwo posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.CAMPFIRE:\n                return <Campfire posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TENT:\n                return <Tent posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.FENCE:\n                return <Fence posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            default:\n                return <div></div>;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {/* Level Details */}\n                <div className=\"levelPanel\">\n                    <LevelTitle heading=\"Level Two\" subheading=\"Loops\"/>\n                    <CodeEngine yOffset={this.yOffset} blockCountLimit={this.blockCountLimit} nextLevel=\"/cg-final-project/level-3\"/>\n                    <LevelInstructions>\n                        <b>Loops in code</b><br/>\n                        The loop function allows you to run tasks multiple times.\n                        It eliminates the need to write the same code\n                        over and over again for repetitive tasks. \n                        In this level, you are only allowed to use five functions.\n                        Use the loop function to your advantage!\n                    </LevelInstructions>\n                </div>\n\n                {/* Spawn map environment */}\n                {\n                    // Spawn the map according to this.level\n                    this.level.map((yData, yIndex) => {\n                        return <div className={`env_y_${yIndex}`} key={yIndex}> {\n                            yData.map((xData, xIndex) => {\n                                return <div className={`env_x_${xIndex}`} key={xIndex}> {\n                                    xData.map((zData, zIndex) => {\n                                        return <div className={`env_z_${zIndex}`} key={zIndex}> {\n                                            this.spawnEnvironmentItem(\n                                                xIndex, yIndex, zIndex, zData\n                                            )\n                                        } </div>\n                                    })\n                                } </div>\n                            })\n                        } </div>\n                    })\n                }\n\n                {/* Spawn player object */}\n                <Character posX={0} posY={1} posZ={0} yOffset={this.yOffset} faceDirection={2}/>\n            </div>\n        )\n    }\n}\n\nexport default LevelTwo\n","import React, { Component } from 'react';\nimport ENVIRONMENT from '../gameObjects/_ENVIRONMENT';\nimport Globals from '../../Globals';\n\n// Babylon Objects\nimport StoneBlock from '../gameObjects/StoneBlock';\nimport GrassBlock from '../gameObjects/GrassBlock';\nimport PathBlock from '../gameObjects/PathBlock';\nimport TreeOne from '../gameObjects/TreeOne';\nimport TreeTwo from '../gameObjects/TreeTwo';\nimport RockOne from '../gameObjects/RockOne';\nimport RockTwo from '../gameObjects/RockTwo';\nimport Campfire from '../gameObjects/Campfire';\nimport Tent from '../gameObjects/Tent';\nimport Fence from '../gameObjects/Fence';\nimport Character from '../gameObjects/Character';\n\n// UI and Code Engine\nimport CodeEngine from '../codeEngine/CodeEngine';\nimport LevelTitle from '../uiElements/LevelTitle';\nimport LevelInstructions from '../uiElements/LevelInstructions';\nimport ObjectivePoint from '../gameObjects/ObjectivePoint';\n\nclass LevelThree extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            environmentSpawned: false\n        }\n\n        // Update allowed functions\n        this.allowedBlocks = [\"WALK\", \"TURN\", \"LOOP\"];\n        this.blockCountLimit = 4;\n\n        // level[y][x][z]\n        this.level = [ \n            [   // First Layer\n                [0, 0, 1, 0, 0],\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n                [0, 0, 1, 0, 0],\n            ],\n            [   // Second Layer\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n            ],\n            [   // ...\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n            ],\n            [\n                [1, 1, 1, 1, 1],\n                [3, 3, 3, 1, 1],\n                [2, 2, 3, 2, 1],\n                [3, 3, 3, 2, 2],\n                [2, 2, 2, 2, 2],\n            ],\n            [\n                [2, 2, 1, 1, 1],\n                [0, 0, 0, 2, 1],\n                [10, 13, 0, 0, 2],\n                [99, 0, 0, 19, 17],\n                [0, 11, 0, 0, 0],\n            ],\n            [\n                [0, 0, 2, 2, 2],\n                [0, 0, 0, 12, 2],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n            ],\n            [\n                [0, 0, 0, 0, 10],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n            ]\n\n        ]\n        this.yOffset = 3;\n        Globals.currentLevel = this;\n    }\n\n    componentDidMount() {\n        Globals.babylonCanvas.enableCameraControl();\n    }\n\n    spawnEnvironmentItem(x, y, z, type) {\n        // Apply y spawn offset\n        y -= this.yOffset;\n\n        switch(type) {\n            case ENVIRONMENT.NONE:\n                return <div></div>\n            case ENVIRONMENT.STONE:\n                return <StoneBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.GRASS:\n                return <GrassBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.PATH:\n                return <PathBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.OBJECTIVE:\n                return <ObjectivePoint posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TREE_1:\n                return <TreeOne posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TREE_2:\n                return <TreeTwo posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.ROCK_1:\n                return <RockOne posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.ROCK_2:\n                return <RockTwo posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.CAMPFIRE:\n                return <Campfire posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TENT:\n                return <Tent posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.FENCE:\n                return <Fence posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            default:\n                return <div></div>;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {/* Level Details */}\n                <div className=\"levelPanel\">\n                    <LevelTitle heading=\"Level Three\" subheading=\"Nested Loops\"/>\n                    <CodeEngine yOffset={this.yOffset} blockCountLimit={this.blockCountLimit} nextLevel=\"/cg-final-project/level-4\"/>\n                    <LevelInstructions>\n                        <b>A loop inside of a loop</b><br/>\n                        The loop function allows you to run any functions multiple times, \n                        including the loop function itself. It allows you to create complex\n                        tasks using less functions. \n                        In this level, you are only allowed to use four functions.\n                    </LevelInstructions>\n                </div>\n\n                {/* Spawn map environment */}\n                {\n                    // Spawn the map according to this.level\n                    this.level.map((yData, yIndex) => {\n                        return <div className={`env_y_${yIndex}`} key={yIndex}> {\n                            yData.map((xData, xIndex) => {\n                                return <div className={`env_x_${xIndex}`} key={xIndex}> {\n                                    xData.map((zData, zIndex) => {\n                                        return <div className={`env_z_${zIndex}`} key={zIndex}> {\n                                            this.spawnEnvironmentItem(\n                                                xIndex, yIndex, zIndex, zData\n                                            )\n                                        } </div>\n                                    })\n                                } </div>\n                            })\n                        } </div>\n                    })\n                }\n\n                {/* Spawn player object */}\n                <Character posX={1} posY={1} posZ={0} yOffset={this.yOffset} faceDirection={2}/>\n            </div>\n        )\n    }\n}\n\nexport default LevelThree\n","import React, { Component } from 'react';\nimport ENVIRONMENT from '../gameObjects/_ENVIRONMENT';\nimport Globals from '../../Globals';\n\n// Babylon Objects\nimport StoneBlock from '../gameObjects/StoneBlock';\nimport GrassBlock from '../gameObjects/GrassBlock';\nimport PathBlock from '../gameObjects/PathBlock';\nimport TreeOne from '../gameObjects/TreeOne';\nimport TreeTwo from '../gameObjects/TreeTwo';\nimport RockOne from '../gameObjects/RockOne';\nimport RockTwo from '../gameObjects/RockTwo';\nimport Campfire from '../gameObjects/Campfire';\nimport Tent from '../gameObjects/Tent';\nimport Fence from '../gameObjects/Fence';\nimport Character from '../gameObjects/Character';\n\n// UI and Code Engine\nimport CodeEngine from '../codeEngine/CodeEngine';\nimport LevelTitle from '../uiElements/LevelTitle';\nimport LevelInstructions from '../uiElements/LevelInstructions';\nimport ObjectivePoint from '../gameObjects/ObjectivePoint';\n\nclass LevelFour extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            environmentSpawned: false\n        }\n\n        // Update allowed functions\n        this.allowedBlocks = [\"WALK\", \"TURN\", \"LOOP\", \"IF\"];\n        this.blockCountLimit = 4;\n\n        // level[y][x][z]\n        this.level = [ \n            [   // First Layer\n                [0, 0, 1, 0, 0],\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n                [0, 0, 1, 0, 0],\n            ],\n            [   // Second Layer\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n            ],\n            [   // ...\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n            ],\n            [\n                [3, 2, 3, 3, 3],\n                [3, 2, 3, 2, 3],\n                [3, 2, 3, 2, 3],\n                [3, 2, 2, 2, 3],\n                [3, 3, 3, 3, 3],\n            ],\n            [\n                [0, 11, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 19, 99, 19, 0],\n                [0, 0, 13, 0, 0],\n                [0, 0, 0, 0, 0],\n            ]\n\n        ]\n        this.yOffset = 3;\n        Globals.currentLevel = this;\n    }\n\n    componentDidMount() {\n        Globals.babylonCanvas.enableCameraControl();\n    }\n\n    spawnEnvironmentItem(x, y, z, type) {\n        // Apply y spawn offset\n        y -= this.yOffset;\n\n        switch(type) {\n            case ENVIRONMENT.NONE:\n                return <div></div>\n            case ENVIRONMENT.STONE:\n                return <StoneBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.GRASS:\n                return <GrassBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.PATH:\n                return <PathBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.OBJECTIVE:\n                return <ObjectivePoint posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TREE_1:\n                return <TreeOne posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TREE_2:\n                return <TreeTwo posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.ROCK_1:\n                return <RockOne posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.ROCK_2:\n                return <RockTwo posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.CAMPFIRE:\n                return <Campfire posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TENT:\n                return <Tent posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.FENCE:\n                return <Fence posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            default:\n                return <div></div>;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {/* Level Details */}\n                <div className=\"levelPanel\">\n                    <LevelTitle heading=\"Level Four\" subheading=\"If Statemets\"/>\n                    <CodeEngine yOffset={this.yOffset} blockCountLimit={this.blockCountLimit} nextLevel=\"/cg-final-project/win\"/>\n                    <LevelInstructions>\n                        <b>What if this happens...</b><br/>\n                        If statement allows you to execute functions if\n                        a certain condition is met. It allows your program\n                        to behave differently, adapting to the current state.\n                        In this level, you are only allowed to use four functions.\n                    </LevelInstructions>\n                </div>\n\n                {/* Spawn map environment */}\n                {\n                    // Spawn the map according to this.level\n                    this.level.map((yData, yIndex) => {\n                        return <div className={`env_y_${yIndex}`} key={yIndex}> {\n                            yData.map((xData, xIndex) => {\n                                return <div className={`env_x_${xIndex}`} key={xIndex}> {\n                                    xData.map((zData, zIndex) => {\n                                        return <div className={`env_z_${zIndex}`} key={zIndex}> {\n                                            this.spawnEnvironmentItem(\n                                                xIndex, yIndex, zIndex, zData\n                                            )\n                                        } </div>\n                                    })\n                                } </div>\n                            })\n                        } </div>\n                    })\n                }\n\n                {/* Spawn player object */}\n                <Character posX={0} posY={1} posZ={0} yOffset={this.yOffset} faceDirection={3}/>\n            </div>\n        )\n    }\n}\n\nexport default LevelFour\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ENVIRONMENT from '../gameObjects/_ENVIRONMENT';\nimport Globals from '../../Globals';\n\n// Babylon Objects\nimport StoneBlock from '../gameObjects/StoneBlock';\nimport GrassBlock from '../gameObjects/GrassBlock';\nimport PathBlock from '../gameObjects/PathBlock';\nimport TreeOne from '../gameObjects/TreeOne';\nimport TreeTwo from '../gameObjects/TreeTwo';\nimport RockOne from '../gameObjects/RockOne';\nimport RockTwo from '../gameObjects/RockTwo';\nimport Campfire from '../gameObjects/Campfire';\nimport Tent from '../gameObjects/Tent';\nimport Fence from '../gameObjects/Fence';\nimport Character from '../gameObjects/Character';\n\n// UI and Code Engine\nimport ObjectivePoint from '../gameObjects/ObjectivePoint';\n\nclass MainMenu extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            environmentSpawned: false\n        }\n\n        // Update allowed functions\n        this.allowedBlocks = [\"WALK\", \"TURN\"];\n\n        // level[y][x][z]\n        this.level = [ \n            [   // First Layer\n                [0, 0, 1, 0, 0],\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n                [0, 0, 1, 0, 0],\n            ],\n            [   // Second Layer\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n            ],\n            [   // ...\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n            ],\n            [\n                [2, 2, 2, 2, 2],\n                [2, 3, 3, 3, 2],\n                [2, 2, 2, 3, 2],\n                [2, 2, 2, 3, 2],\n                [2, 2, 2, 2, 2],\n            ],\n            [\n                [0, 13, 0, 0, 11],\n                [0, 0, 0, 0, 0],\n                [0, 18, 0, 0, 19],\n                [0, 0, 0, 99, 0],\n                [0, 10, 0, 12, 0],\n            ]\n        ]\n        this.yOffset = 3;\n        Globals.currentLevel = this;\n    }\n\n    componentDidMount() {\n        Globals.babylonCanvas.disableCameraControl();\n    }\n\n    spawnEnvironmentItem(x, y, z, type) {\n        // Apply y spawn offset\n        y -= this.yOffset;\n\n        switch(type) {\n            case ENVIRONMENT.NONE:\n                return <div></div>\n            case ENVIRONMENT.STONE:\n                return <StoneBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.GRASS:\n                return <GrassBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.PATH:\n                return <PathBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.OBJECTIVE:\n                return <ObjectivePoint posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TREE_1:\n                return <TreeOne posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TREE_2:\n                return <TreeTwo posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.ROCK_1:\n                return <RockOne posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.ROCK_2:\n                return <RockTwo posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.CAMPFIRE:\n                return <Campfire posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TENT:\n                return <Tent posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.FENCE:\n                return <Fence posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            default:\n                return <div></div>;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {/* Level Details */}\n                <div className=\"levelPanel mainMenuPanel\">\n                    <h1>\n                        Learn<br/>\n                        to<br/>\n                        Code\n                    </h1>\n                    <p>\n                        Learn the concepts of coding by helping the orange guy\n                        walk to the checkpoint.\n                    </p>\n                    <Link\n                        className=\"btn btn-lg btn-primary btn-block\"\n                        to=\"/cg-final-project/level-1\"\n                    >\n                        Start Game\n                    </Link>\n                </div>\n\n                {/* Spawn map environment */}\n                {\n                    // Spawn the map according to this.level\n                    this.level.map((yData, yIndex) => {\n                        return <div className={`env_y_${yIndex}`} key={yIndex}> {\n                            yData.map((xData, xIndex) => {\n                                return <div className={`env_x_${xIndex}`} key={xIndex}> {\n                                    xData.map((zData, zIndex) => {\n                                        return <div className={`env_z_${zIndex}`} key={zIndex}> {\n                                            this.spawnEnvironmentItem(\n                                                xIndex, yIndex, zIndex, zData\n                                            )\n                                        } </div>\n                                    })\n                                } </div>\n                            })\n                        } </div>\n                    })\n                }\n\n                {/* Spawn player object */}\n                <Character posX={1} posY={1} posZ={1} yOffset={this.yOffset} faceDirection={2}/>\n            </div>\n        )\n    }\n}\n\nexport default MainMenu\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ENVIRONMENT from '../gameObjects/_ENVIRONMENT';\nimport Globals from '../../Globals';\n\n// Babylon Objects\nimport StoneBlock from '../gameObjects/StoneBlock';\nimport GrassBlock from '../gameObjects/GrassBlock';\nimport PathBlock from '../gameObjects/PathBlock';\nimport TreeOne from '../gameObjects/TreeOne';\nimport TreeTwo from '../gameObjects/TreeTwo';\nimport RockOne from '../gameObjects/RockOne';\nimport RockTwo from '../gameObjects/RockTwo';\nimport Campfire from '../gameObjects/Campfire';\nimport Tent from '../gameObjects/Tent';\nimport Fence from '../gameObjects/Fence';\nimport Character from '../gameObjects/Character';\n\n// UI and Code Engine\nimport ObjectivePoint from '../gameObjects/ObjectivePoint';\n\nclass VictoryMenu extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            environmentSpawned: false\n        }\n\n        // Update allowed functions\n        this.allowedBlocks = [\"WALK\", \"TURN\"];\n\n        // level[y][x][z]\n        this.level = [ \n            [   // First Layer\n                [0, 0, 1, 0, 0],\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n                [0, 0, 1, 0, 0],\n            ],\n            [   // Second Layer\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n            ],\n            [   // ...\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n            ],\n            [\n                [2, 2, 2, 2, 2],\n                [2, 3, 3, 3, 2],\n                [2, 2, 2, 3, 2],\n                [2, 2, 2, 3, 2],\n                [2, 2, 2, 2, 2],\n            ],\n            [\n                [0, 13, 0, 0, 11],\n                [0, 0, 0, 0, 0],\n                [0, 18, 0, 0, 19],\n                [0, 0, 0, 99, 0],\n                [0, 10, 0, 12, 0],\n            ]\n        ]\n        this.yOffset = 3;\n        Globals.currentLevel = this;\n    }\n\n    componentDidMount() {\n        Globals.babylonCanvas.disableCameraControl();\n    }\n\n    spawnEnvironmentItem(x, y, z, type) {\n        // Apply y spawn offset\n        y -= this.yOffset;\n\n        switch(type) {\n            case ENVIRONMENT.NONE:\n                return <div></div>\n            case ENVIRONMENT.STONE:\n                return <StoneBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.GRASS:\n                return <GrassBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.PATH:\n                return <PathBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.OBJECTIVE:\n                return <ObjectivePoint posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TREE_1:\n                return <TreeOne posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TREE_2:\n                return <TreeTwo posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.ROCK_1:\n                return <RockOne posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.ROCK_2:\n                return <RockTwo posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.CAMPFIRE:\n                return <Campfire posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TENT:\n                return <Tent posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.FENCE:\n                return <Fence posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            default:\n                return <div></div>;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {/* Level Details */}\n                <div className=\"levelPanel mainMenuPanel\">\n                    <h1>\n                        Learn<br/>\n                        to<br/>\n                        Code\n                    </h1>\n                    <p>\n                        Congratulations! With the basics in mind,\n                        you are ready to continue your coding journey!\n                    </p>\n                    <Link\n                        className=\"btn btn-lg btn-secondary btn-block\"\n                        to=\"/cg-final-project/\"\n                    >\n                        Back to Main Menu\n                    </Link>\n                    <p className=\"text-sm-center\">\n                        <small>\n                            <a href=\"https://github.com/zefryuuko/cg-final-project\">\n                                View the source of this game on GitHub\n                            </a>\n                        </small>\n                    </p>\n                </div>\n\n                {/* Spawn map environment */}\n                {\n                    // Spawn the map according to this.level\n                    this.level.map((yData, yIndex) => {\n                        return <div className={`env_y_${yIndex}`} key={yIndex}> {\n                            yData.map((xData, xIndex) => {\n                                return <div className={`env_x_${xIndex}`} key={xIndex}> {\n                                    xData.map((zData, zIndex) => {\n                                        return <div className={`env_z_${zIndex}`} key={zIndex}> {\n                                            this.spawnEnvironmentItem(\n                                                xIndex, yIndex, zIndex, zData\n                                            )\n                                        } </div>\n                                    })\n                                } </div>\n                            })\n                        } </div>\n                    })\n                }\n\n                {/* Spawn player object */}\n                <Character posX={1} posY={1} posZ={1} yOffset={this.yOffset} faceDirection={2}/>\n            </div>\n        )\n    }\n}\n\nexport default VictoryMenu\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport 'babylonjs-loaders';\nimport BabylonCanvas from './BabylonCanvas';\nimport AddBlockModal from './components/uiElements/AddBlockModal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Levels\nimport LevelOne from './components/levels/LevelOne';\nimport LevelTwo from './components/levels/LevelTwo';\nimport LevelThree from './components/levels/LevelThree';\nimport LevelFour from './components/levels/LevelFour';\n\n// Menus\nimport MainMenu from './components/levels/MainMenu';\nimport VictoryMenu from './components/levels/VictoryMenu';\n\nclass App extends Component {\n    state = {  }\n\n    render() {\n        return (\n            <Router>\n                <div className=\"App\">\n                    <div className=\"AppContainer\">\n                        <BabylonCanvas/>\n                        <Switch className=\"LevelContainer\">\n                            <Route path=\"/cg-final-project/\" exact>\n                                <MainMenu/>\n                            </Route>\n                            <Route path=\"/cg-final-project/level-1\">\n                                <LevelOne/>\n                            </Route>\n                            <Route path=\"/cg-final-project/level-2\">\n                                <LevelTwo/>\n                            </Route>\n                            <Route path=\"/cg-final-project/level-3\">\n                                <LevelThree/>\n                            </Route>\n                            <Route path=\"/cg-final-project/level-4\">\n                                <LevelFour/>\n                            </Route>\n                            <Route path=\"/cg-final-project/win\">\n                                <VictoryMenu/>\n                            </Route>\n                        </Switch>\n                    </div>\n                </div>\n                <AddBlockModal></AddBlockModal>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}