{"version":3,"sources":["BabylonCanvas.js","Globals.js","components/Navbar.js","components/uiElements/AddBlockModal.js","components/gameObjects/_ENVIRONMENT.js","components/gameObjects/StoneBlock.js","components/gameObjects/GrassBlock.js","components/gameObjects/Character.js","components/uiElements/AddBlockButton.js","components/uiElements/WalkBlock.js","components/codeEngine/CodeEngine.js","components/uiElements/LevelTitle.js","components/uiElements/LevelInstructions.js","components/levels/LevelOne.js","App.js","reportWebVitals.js","index.js"],"names":["scene","boxMesh","this","undefined","engine","framerate","character","addBlockModal","BabylonCanvas","props","componentDidMount","BABYLON","canvas","Globals","addLight","addCamera","addSkybox","window","addEventListener","onWindowResize","onKeydownEvent","runRenderLoop","render","registerBeforeRender","event","resize","keyCode","debugLayer","show","hide","hemisphericLight","underMapLighting","Math","PI","photoSphere","CreateSphere","skyboxMaterial","emissiveTexture","diffuseColor","specularColor","uOffset","backFaceCulling","material","arcRotateCamera","panningSensibility","lowerRadiusLimit","upperRadiusLimit","attachControl","setPosition","beta","addGround","ground","CreateGround","height","width","subdivisions","groundMaterial","diffuseTexture","addModels","CreateBox","depth","position","y","woodMaterial","state","useWireFrame","shouldAnimate","removeEventListener","className","ref","Component","Navbar","href","AddBlockModal","onChangeSelection","setState","selectedBlockType","target","value","onCancelClicked","onAddButtonClicked","console","log","targetParent","addBlock","id","tabIndex","role","aria-labelledby","aria-hidden","type","checked","onChange","data-dismiss","disabled","onClick","Object","freeze","NONE","STONE","GRASS","PATH","WALKABLE_BLOCKS","StoneBlock","createMesh","applyMaterial","startSpawnAnimation","componentWillUnmount","mesh","dispose","posX","posY","posZ","x","z","updateSamplingMode","NEAREST_NEAREST_MIPLINEAR","spawnAnimation","ANIMATIONTYPE_VECTOR3","ANIMATIONLOOPMODE_CYCLE","animationDelaySeconds","yOffset","keyFrames","push","frame","Zero","One","setKeys","animations","beginAnimation","GrassBlock","reflectionTexture","coordinatesMode","SKYBOX_MODE","Character","idleAnimation","walkingAnimation","faceDirection","characterParentMaterial","alpha","characterModel","ImportMesh","meshes","particleSystem","skeleton","animationGroups","characterModelMeshes","forEach","scaling","xOffset","zOffset","meshMaterial","ambientColor","setParent","characterFaceDirection","rotation","walk","moveAxis","moveDirection","walkAnimation","ANIMATIONTYPE_FLOAT","walkKeyframes","animationSpeed","length","pop","stop","start","from","to","setTimeout","turnLeft","abs","turnLeftAnimation","turnLeftKeyframes","turnRight","turnRightAnimation","turnRightKeyframes","AddBlockButton","onButtonClicked","data-toggle","data-target","blockCountLimit","WalkBlock","onDeleteButtonClicked","index","CodeEngine","startSimulation","blockType","prevState","functions","concat","direction","loopCycles","children","error","renderBlock","blockMetadata","key","JSON","stringify","map","data","isRunning","CODE_BLOCK_TYPE","WALK","TURN","IF","LOOP","LevelTitle","heading","subheading","LevelInstructions","LevelOne","environmentSpawned","level","ENVIRONMENT","yData","yIndex","xData","xIndex","zData","zIndex","spawnEnvironmentItem","App","style","color","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc2e2a5f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport * as BABYLON from \"babylonjs\";\nimport Globals from './Globals';\n\n// Temp definitions, delete later\nvar scene;\nvar boxMesh;\n\nclass BabylonCanvas extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { useWireFrame: false, shouldAnimate: false };\n        this.hemisphericLight = undefined;\n        this.underMapLighting = undefined;\n        this.arcRotateCamera = undefined;\n    }\n    \n    componentDidMount = () => {        \n        // Initialize scene and engine\n        this.engine = new BABYLON.Engine(this.canvas, true);\n        Globals.scene = new BABYLON.Scene(this.engine);\n        \n        // Intitialize the scene with the required elements\n        this.addLight();\n        this.addCamera();\n        this.addSkybox();\n\n        // this.addModels();\n        // this.addGround();\n\n        // Add Events\n        window.addEventListener(\"resize\", this.onWindowResize, false);\n        window.addEventListener(\"keydown\", this.onKeydownEvent);\n\n        // Render Loop\n        this.engine.runRenderLoop(() => {\n            Globals.scene.render();\n        });\n\n        // Handle animations and per frame calculations\n        // Simillar to Update() function in Unity\n        Globals.scene.registerBeforeRender(() => {\n            \n        });\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.onWindowResize, false);\n    }\n\n    onWindowResize = event => {\n        this.engine.resize();\n    };\n\n    onKeydownEvent = event => {\n        switch(event.keyCode) {\n            case 219: // [\n                Globals.scene.debugLayer.show();\n                break;\n            case 221: // ]\n                Globals.scene.debugLayer.hide();\n                break;\n            default:\n                break;\n        }\n    } \n\n    addLight = () => {\n        // Create a basic light, aiming 0,1,0 - meaning, to the sky.\n        this.hemisphericLight = new BABYLON.HemisphericLight(\n            \"hemisphericLight\",\n            new BABYLON.Vector3(0, 1, 0),\n            Globals.scene\n        );\n\n        // Create directional light below the map to light up the bottom faces\n        this.underMapLighting = new BABYLON.SpotLight(\n            \"underMapLight\",\n            new BABYLON.Vector3(2, -10, 2),\n            new BABYLON.Vector3(0, 1, 0),\n            Math.PI,\n            8,\n            Globals.scene\n        )\n    };\n\n    addSkybox = () => {\n        var photoSphere = BABYLON.Mesh.CreateSphere(\"skybox\", 16.0, 50.0, scene);\n\n        var skyboxMaterial = new BABYLON.StandardMaterial(\"skyboxMaterial\", scene);\n        skyboxMaterial.emissiveTexture = new BABYLON.Texture(\n            \"assets/other/skybox.png\",\n            Globals.scene,\n            1,\n            0\n        );\n        skyboxMaterial.diffuseColor = new BABYLON.Color3(0, 0, 0);\n        skyboxMaterial.specularColor = new BABYLON.Color3(0, 0, 0);\n        skyboxMaterial.emissiveTexture.uOffset = -Math.PI / 2; // left-right\n        skyboxMaterial.emissiveTexture.uOffset = 0.1; // up-down\n        skyboxMaterial.backFaceCulling = false;\n\n        photoSphere.material = skyboxMaterial;\n    }\n\n    addCamera = () => {\n        // ---------------ArcRotateCamera or Orbit Control----------\n        this.arcRotateCamera = new BABYLON.ArcRotateCamera(\n            \"MainCamera\",\n            Math.PI / 2,\n            Math.PI / 4,\n            10,\n            new BABYLON.Vector3(2, 0, 2),\n            Globals.scene\n        );\n        \n        this.arcRotateCamera.panningSensibility = 0;\n        this.arcRotateCamera.lowerRadiusLimit = this.arcRotateCamera.upperRadiusLimit = 10;\n\n        // camera.inertia = 0;\n        // camera.angularSensibilityX = 250;\n        // camera.angularSensibilityY = 250;\n\n        // This attaches the camera to the canvas\n        this.arcRotateCamera.attachControl(this.canvas, true);\n        this.arcRotateCamera.setPosition(new BABYLON.Vector3(7, 7, 7));\n        this.arcRotateCamera.beta = Math.PI / 2.5;\n    };\n\n    addGround = () => {\n        // Create a built-in \"ground\" shape.\n        var ground = BABYLON.MeshBuilder.CreateGround(\n            \"ground1\",\n            { height: 6, width: 6, subdivisions: 2 },\n            scene\n        );\n        var groundMaterial = new BABYLON.StandardMaterial(\"grass0\", scene);\n        groundMaterial.diffuseTexture = new BABYLON.Texture(\n            \"./assets/ground.jpeg\",\n            scene\n        );\n        ground.material = groundMaterial;\n    };\n\n    addModels = () => {\n        // Add BOX\n        boxMesh = BABYLON.MeshBuilder.CreateBox(\n            \"box\",\n            { height: 1, width: 1, depth: 1 },\n            scene\n        );\n        boxMesh.position.y = 1;\n\n        var woodMaterial = new BABYLON.StandardMaterial(\"wood\", scene);\n        woodMaterial.diffuseTexture = new BABYLON.Texture(\n            \"./assets/portal_cube.png\",\n            scene\n        );\n        boxMesh.material = woodMaterial;\n    };\n\n    render() {\n        return (\n            <canvas\n                className=\"renderCanvas\"\n                ref={canvas => {\n                    this.canvas = canvas;\n                }}\n            />\n        );\n    }\n}\nexport default BabylonCanvas;","class Globals {\n    constructor() {\n        this.scene = undefined;\n        this.engine = undefined;\n        this.framerate = 60;\n        this.character = undefined;\n        this.addBlockModal = undefined;\n    }\n}\n\nexport default new Globals();","import React, { Component } from 'react';\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return (\n            <nav className=\"navbar navbar-light bg-light\">\n                <a className=\"navbar-brand\" href=\"/\">REEEE</a>\n            </nav>\n        );\n    }\n}\n \nexport default Navbar;","import React, { Component } from 'react';\nimport Globals from '../../Globals';\n\nclass AddBlockModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedBlockType: null\n        }\n        this.targetParent = undefined;\n\n        Globals.addBlockModal = this;\n    }\n\n    onChangeSelection = (event) => {\n        this.setState({\n            selectedBlockType: event.target.value\n        });\n    }\n\n    onCancelClicked = (event) => {\n        this.setState({\n            selectedBlockType: null\n        });\n    }\n\n    onAddButtonClicked = () => {\n        console.log(`Adding ${this.state.selectedBlockType} block`);\n        this.targetParent.addBlock(this.state.selectedBlockType);\n    }\n\n    render() { \n        return (\n            <div id=\"addBlockModal\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h4 className=\"modal-title\" id=\"myModalLabel\">Add Function</h4>                        </div>\n                        <div className=\"modal-body\">\n                            <form>\n                                <input \n                                    type=\"radio\"\n                                    value=\"WALK\"\n                                    checked={this.state.selectedBlockType === \"WALK\"}\n                                    onChange={this.onChangeSelection}\n                                />\n                                <label>Walk</label>\n                                <input \n                                    type=\"radio\"\n                                    value=\"TURN\"\n                                    checked={this.state.selectedBlockType === \"TURN\"}\n                                    onChange={this.onChangeSelection}\n                                />\n                                <label>Turn</label>\n                                <input\n                                    type=\"radio\"\n                                    value=\"LOOP\"\n                                    checked={this.state.selectedBlockType === \"LOOP\"}\n                                    onChange={this.onChangeSelection}\n                                />\n                                <label>Loop</label>\n                                <input \n                                    type=\"radio\"\n                                    value=\"IF\"\n                                    checked={this.state.selectedBlockType === \"IF\"}\n                                    onChange={this.onChangeSelection}\n                                />\n                                <label>If</label>\n                            </form>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button\n                                type=\"button\" className=\"btn btn-success\" \n                                data-dismiss=\"modal\"\n                                disabled={this.state.selectedBlockType === null}\n                                onClick={this.onAddButtonClicked}\n                            >\n                                Add\n                            </button>\n                            <button \n                                type=\"button\" className=\"btn btn-light\" data-dismiss=\"modal\" \n                                onClick={this.onCancelClicked}\n                            >\n                                Cancel\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddBlockModal\n","/*\n    _ENVIRONMENT.js\n    Environment game objects id definition. Used for map spawning and referencing\n*/\n\nclass ENVIRONMENT {\n    NONE = 0;\n    STONE = 1;\n    GRASS = 2;\n    PATH = 3;\n    \n    WALKABLE_BLOCKS = [this.PATH];\n}\n\n// Freeze the object to prevent changes\nexport default Object.freeze(new ENVIRONMENT());","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass StoneBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n        this.startSpawnAnimation();\n    }\n\n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `stoneBlock_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Modify mesh properties\n        this.mesh.position.x = posX;\n        this.mesh.position.y = posY;\n        this.mesh.position.z = posZ;\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"StoneBlockMaterial\", Globals.scene);\n        \n        // \n        material.diffuseTexture = new BABYLON.Texture(\"assets/textures/stone.png\", Globals.scene);\n        material.diffuseTexture.updateSamplingMode(BABYLON.Texture.NEAREST_NEAREST_MIPLINEAR);\n\n        // Use CubeTexture to map the texture to each face\n        // material.reflectionTexture = new BABYLON.CubeTexture(\"/assets/textures/grass/grass\", Globals.scene);\n        // material.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\n        // material.reflectionTexture.updateSamplingMode(BABYLON.Texture.NEAREST_NEAREST_MIPLINEAR);\n        // material.diffuseColor = new BABYLON.Color3(0, 0, 0);\n        material.specularColor = new BABYLON.Color3(0, 0, 0);\n        material.backFaceCulling = false;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"scaling\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: BABYLON.Vector3.Zero(),\n        });\n        keyFrames.push({\n            frame: animationDelaySeconds * Globals.framerate,\n            value: BABYLON.Vector3.Zero()\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: BABYLON.Vector3.One(),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default StoneBlock\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass GrassBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n        this.startSpawnAnimation();\n    }\n\n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `grassBlock_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Modify mesh properties\n        this.mesh.position.x = posX;\n        this.mesh.position.y = posY;\n        this.mesh.position.z = posZ;\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"GrassBlockMaterial\", Globals.scene);\n        \n        // Use CubeTexture to map the texture to each face\n        material.reflectionTexture = new BABYLON.CubeTexture(\"assets/textures/grass/grass\", Globals.scene);\n        material.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\n        material.reflectionTexture.updateSamplingMode(BABYLON.Texture.NEAREST_NEAREST_MIPLINEAR);\n        material.diffuseColor = new BABYLON.Color3(0, 0, 0);\n        material.specularColor = new BABYLON.Color3(0, 0, 0);\n        material.backFaceCulling = false;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"scaling\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: BABYLON.Vector3.Zero(),\n        });\n        keyFrames.push({\n            frame: animationDelaySeconds * Globals.framerate,\n            value: BABYLON.Vector3.Zero()\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: BABYLON.Vector3.One(),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default GrassBlock\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass Character extends Component {\n    constructor(props) {\n        super(props);\n\n        // Character\n        this.mesh = undefined;\n        this.characterModel = undefined;\n        this.characterModelMeshes = undefined;\n        this.characterFaceDirection = 0;    // Value represents N E S W\n        \n        // Object position offset\n        this.xOffset = 0;\n        this.yOffset = -0.5;\n        this.zOffset = 0;\n\n        // Animations\n        this.animationSpeed = 0.5;\n        this.turnLeftAnimation = undefined;\n        this.idleAnimation = undefined;\n        this.walkingAnimation = undefined;\n\n        // Put a global reference to this object\n        Globals.character = this;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n    }\n    \n    componentWillUnmount = () => {\n        Globals.character = undefined;\n        this.mesh.dispose();\n        this.idleAnimation = this.walkingAnimation = null;\n    }\n    \n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n        const faceDirection = this.props.faceDirection ? this.props.faceDirection : 0;\n        \n        // Create parent mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            \"character\",\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Create parent material for transparency\n        const characterParentMaterial = new BABYLON.Material(\"characterParentMaterial\");\n        characterParentMaterial.alpha = 0;\n            \n        // Modify parent object properties\n        this.mesh.position = new BABYLON.Vector3(posX, posY, posZ);\n        this.mesh.material = characterParentMaterial;\n        \n\n        // Load mesh\n        this.characterModel = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"character_running.glb\",\n            Globals.scene,\n            (meshes, particleSystem, skeleton, animationGroups) => {               \n                // Expose the meshes and animations to the outside world\n                this.characterModelMeshes = meshes;\n                this.idleAnimation = animationGroups[0];\n                this.walkingAnimation = animationGroups[1];\n                \n                \n                // Modify mesh properties\n                meshes.forEach(mesh => {\n                    mesh.scaling = new BABYLON.Vector3(0.1, 0.1, 0.1);\n                    mesh.position = new BABYLON.Vector3(\n                        posX + this.xOffset,\n                        posY + this.yOffset,\n                        posZ + this.zOffset\n                    );\n                    const meshMaterial = new BABYLON.StandardMaterial(\"characterMaterial\");\n                    meshMaterial.specularColor = new BABYLON.Color3(1 ,1 ,1);\n                    meshMaterial.diffuseColor = new BABYLON.Color3(1, 0.6, 0);\n                    meshMaterial.backFaceCulling = false;\n                    meshMaterial.ambientColor = new BABYLON.Color3(0.23, 0.98, 0.53);\n\n                    mesh.material = meshMaterial;\n                    mesh.setParent(this.mesh);\n                });\n\n                // Use rotation data from component properties\n                this.characterFaceDirection = faceDirection;\n                this.mesh.rotation.y += Math.PI * 0.5 * faceDirection;\n            }\n        );\n    }\n\n    walk = () => {\n        // Determine the move axis and move direction\n        const moveAxis = this.characterFaceDirection % 2 === 0 ? \"z\" : \"x\";\n        const moveDirection = this.characterFaceDirection >=2 ? 1 : -1;\n\n        const walkAnimation = new BABYLON.Animation(\n            \"characterTurnleft\",\n            `position.${moveAxis}`,\n            Globals.framerate,\n            BABYLON.Animation.ANIMATIONTYPE_FLOAT,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n\n        const walkKeyframes = [];\n        walkKeyframes.push({\n            frame: 0,\n            value: moveAxis === \"x\" ? this.mesh.position.x : this.mesh.position.z\n        });\n        walkKeyframes.push({\n            frame: this.animationSpeed * Globals.framerate,\n            value: (moveAxis === \"x\" ? this.mesh.position.x : this.mesh.position.z) + moveDirection\n        });\n\n        walkAnimation.setKeys(walkKeyframes);\n\n        // Pop the last animation before adding another one\n        if (this.mesh.animations.length > 0)\n            this.mesh.animations.pop();\n        this.mesh.animations.push(walkAnimation);\n\n        Globals.scene.beginAnimation(this.mesh, 0, this.animationSpeed * Globals.framerate, false);\n        this.idleAnimation.stop();\n        this.walkingAnimation.start(false, 2.0, this.walkingAnimation.from, this.walkingAnimation.to, false);\n        \n        // Stop animation after finished walking\n        setTimeout(() => {\n            this.walkingAnimation.stop();\n            this.idleAnimation.start(true, 1.0, this.idleAnimation.from, this.idleAnimation.to, false);\n        }, this.animationSpeed * 1000);\n    }\n\n    turnLeft = () => {\n        // Update the direction of the character\n        if (this.characterFaceDirection === 0)\n            this.characterFaceDirection = 3;\n        else\n            this.characterFaceDirection = Math.abs((this.characterFaceDirection - 1) % 4);\n        console.log(`Rotating player to ${this.characterFaceDirection}`);\n\n        const turnLeftAnimation = new BABYLON.Animation(\n            \"characterTurnleft\",\n            \"rotation.y\",\n            Globals.framerate,\n            BABYLON.Animation.ANIMATIONTYPE_FLOAT,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n\n        const turnLeftKeyframes = [];\n        turnLeftKeyframes.push({\n            frame: 0,\n            value: this.mesh.rotation.y\n        });\n        turnLeftKeyframes.push({\n            frame: this.animationSpeed * Globals.framerate,\n            value: this.mesh.rotation.y - Math.PI/2\n        });\n\n        turnLeftAnimation.setKeys(turnLeftKeyframes);\n        \n        // Pop the last animation before adding another one\n        if (this.mesh.animations.length > 0)\n            this.mesh.animations.pop();\n        this.mesh.animations.push(turnLeftAnimation);\n\n        Globals.scene.beginAnimation(this.mesh, 0, this.animationSpeed * Globals.framerate, false);\n    }\n\n    turnRight = () => {\n        // Update the direction of the character\n        this.characterFaceDirection = Math.abs((this.characterFaceDirection + 1) % 4);\n        console.log(`Rotating player to ${this.characterFaceDirection}`);\n\n        const turnRightAnimation = new BABYLON.Animation(\n            \"characterTurnleft\",\n            \"rotation.y\",\n            Globals.framerate,\n            BABYLON.Animation.ANIMATIONTYPE_FLOAT,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n\n        const turnRightKeyframes = [];\n        turnRightKeyframes.push({\n            frame: 0,\n            value: this.mesh.rotation.y\n        });\n        turnRightKeyframes.push({\n            frame: this.animationSpeed * Globals.framerate,\n            value: this.mesh.rotation.y + Math.PI/2\n        });\n\n        turnRightAnimation.setKeys(turnRightKeyframes);\n        \n        // Pop the last animation before adding another one\n        if (this.mesh.animations.length > 0)\n            this.mesh.animations.pop();\n        this.mesh.animations.push(turnRightAnimation);\n\n        Globals.scene.beginAnimation(this.mesh, 0, this.animationSpeed * Globals.framerate, false);\n    }\n    \n    render = () => {\n        return (\n            <div>\n                <button onClick={this.walk}>Move Forward</button>\n                <button onClick={this.turnLeft}>Turn Left</button>\n                <button onClick={this.turnRight}>Turn Right</button>\n            </div>\n        )\n    }\n}\n\nexport default Character\n","import React, { Component } from 'react';\nimport Globals from '../../Globals';\n\nclass AddBlockButton extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            blockCountLimit: null\n        }\n        this.targetParent = props.targetParent;\n    }\n\n    onButtonClicked = () => {\n        // Set modal's target component to the passed props\n        Globals.addBlockModal.targetParent = this.props.targetParent;\n    }\n\n    render = () => {\n        return (\n            <button \n                className=\"btnAddBlock\" \n                data-toggle=\"modal\"\n                data-target=\"#addBlockModal\"\n                onClick={this.onButtonClicked}\n            >\n                +\n            </button>\n        )\n    }\n}\n\nexport default AddBlockButton\n","import React, { Component } from 'react'\n\nclass WalkBlock extends Component {\n    onDeleteButtonClicked = () => {\n\n    }\n\n    render = () => {\n        return (\n            <div className=\"block function\" index={this.props.index}>\n                Walk\n            </div>\n        )\n    }\n}\n\nexport default WalkBlock\n","import React, { Component } from 'react'\nimport AddBlockButton from '../uiElements/AddBlockButton';\nimport WalkBlock from '../uiElements/WalkBlock';\n\nclass CodeEngine extends Component {\n    constructor(props) {\n        super(props);\n        // const { allowedFunctions, level } = props;\n        this.state = {\n            functions: [],\n            isRunning: false\n        }\n\n        // Block types enum\n        this.CODE_BLOCK_TYPE = Object.freeze({\n            WALK: 0,\n            TURN: 1,\n            IF: 2,\n            LOOP: 3\n        });\n    }\n\n    componentDidMount = () => {\n\n    }\n\n    startSimulation = () => {\n\n    }\n\n    addBlock = (blockType) => {\n        // Create block \n        switch(blockType) {\n            case \"WALK\":\n                this.setState(prevState => {\n                    return {\n                        functions: prevState.functions.concat({\n                            type: \"WALK\"\n                        })\n                    }\n                });\n                break;\n            case \"TURN\":\n                this.setState(prevState => {\n                    return {\n                        functions: prevState.functions.concat({\n                            type: \"TURN\",\n                            direction: \"LEFT\"\n                        })\n                    }\n                });\n                break;\n            case \"LOOP\":\n                this.setState(prevState => {\n                    return {\n                        functions: prevState.functions.concat({\n                            type: \"LOOP\",\n                            loopCycles: 1,\n                            children: []\n                        })\n                    }\n                });\n                break;\n            default:\n                console.error(`Unknown code block type: ${blockType}`);\n                break;\n        }\n    }\n\n    renderBlock = (blockMetadata, key) => {\n        switch(blockMetadata.type) {\n            case \"WALK\":\n                return (\n                    <WalkBlock key={key} index={key}/>\n                );\n            default:\n                return <div>Invalid data. Received {JSON.stringify(blockMetadata)}</div>;\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"codeEngine\">\n                {\n                    this.state.functions.map((data, index) => {\n                        return this.renderBlock(data, index);\n                    })\n                }\n                {/* <div className=\"block function\">\n                    function\n                </div>\n                <div className=\"block if\">\n                    if\n                    <AddBlockButton></AddBlockButton>\n                </div>\n                <div className=\"block loop\">\n                    loop\n                    <div className=\"block function\">\n                        function\n                    </div>\n                    <AddBlockButton></AddBlockButton>\n                </div>\n                <div className=\"block if\">\n                    if\n                    <div className=\"block loop\">\n                        loop\n                        <div className=\"block function\">\n                            function\n                        </div>\n                        <AddBlockButton></AddBlockButton>\n                    </div>\n                    <AddBlockButton></AddBlockButton>\n                </div> */}\n                <AddBlockButton targetParent={this}></AddBlockButton>\n            </div>\n        );\n    }\n}\n\nexport default CodeEngine;\n","import React, { Component } from 'react';\n\nclass LevelTitle extends Component {\n    render() {\n        return (\n            <div className=\"titlePanel\">\n                <h1>{this.props.heading}</h1>\n                <p>{this.props.subheading}</p>\n            </div>\n        )\n    }\n}\n\nexport default LevelTitle\n","import React, { Component } from 'react';\n\nclass LevelInstructions extends Component {\n    render = () => {\n        return (\n            <div className=\"instructionsPanel\">\n                <div className=\"instructionsHeading\">\n                    Instructions\n                </div>\n                <p>{this.props.children}</p>\n            </div>\n        )\n    }\n}\n\nexport default LevelInstructions\n","import React, { Component } from 'react';\nimport ENVIRONMENT from '../gameObjects/_ENVIRONMENT';\n\n// Babylon Objects\nimport StoneBlock from '../gameObjects/StoneBlock';\nimport GrassBlock from '../gameObjects/GrassBlock';\nimport Character from '../gameObjects/Character';\n\n// UI and Code Engine\nimport CodeEngine from '../codeEngine/CodeEngine';\nimport LevelTitle from '../uiElements/LevelTitle';\nimport LevelInstructions from '../uiElements/LevelInstructions';\n\nclass LevelOne extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            environmentSpawned: false\n        }\n\n        // level[y][x][z]\n        this.level = [ \n            [   // First Layer\n                [0, 0, 1, 0, 0],\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n                [0, 0, 1, 0, 0],\n            ],\n            [   // Second Layer\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n            ],\n            [   // ...\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n            ],\n            [\n                [2, 2, 2, 2, 2],\n                [2, 2, 2, 2, 2],\n                [2, 2, 2, 2, 2],\n                [2, 2, 2, 2, 2],\n                [2, 2, 2, 2, 2],\n            ]\n        ]\n        this.yOffset = 3;\n    }\n\n    componentDidMount() {\n        \n    }\n\n    spawnEnvironmentItem(x, y, z, type) {\n        // Apply y spawn offset\n        y -= this.yOffset;\n\n        switch(type) {\n            case ENVIRONMENT.NONE:\n                return <div></div>\n            case ENVIRONMENT.STONE:\n                return <StoneBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.GRASS:\n                return <GrassBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            default:\n                return <div></div>;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {/* Level Details */}\n                <div className=\"levelPanel\">\n                    <LevelTitle heading=\"Level One\" subheading=\"The Basics\"/>\n                    <CodeEngine/>\n                    <LevelInstructions>\n                        <b>Welcome to your first level!</b><br/>\n                        To complete this level, you need to walk the\n                        character to the finish line using functions. \n                        To add a function, press the plus button above.\n                    </LevelInstructions>\n                </div>\n\n                {/* Spawn map environment */}\n                {\n                    // Spawn the map according to this.level\n                    this.level.map((yData, yIndex) => {\n                        return <div className={`env_y_${yIndex}`} key={yIndex}> {\n                            yData.map((xData, xIndex) => {\n                                return <div className={`env_x_${xIndex}`} key={xIndex}> {\n                                    xData.map((zData, zIndex) => {\n                                        return <div className={`env_z_${zIndex}`} key={zIndex}> {\n                                            this.spawnEnvironmentItem(\n                                                xIndex, yIndex, zIndex, zData\n                                            )\n                                        } </div>\n                                    })\n                                } </div>\n                            })\n                        } </div>\n                    })\n                }\n\n                {/* Spawn player object */}\n                <Character posX={0} posY={1} posZ={0} faceDirection={2}/>\n                <button data-toggle=\"modal\" data-target=\"#addBlockModal\" className=\"btn btn-sm text-white btn-success mr-2\">TEST ADD BLOCK MODAL</button>\n            </div>\n        )\n    }\n}\n\nexport default LevelOne\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport 'babylonjs-loaders';\nimport BabylonCanvas from './BabylonCanvas';\nimport Navbar from './components/Navbar';\nimport AddBlockModal from './components/uiElements/AddBlockModal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Levels\nimport LevelOne from './components/levels/LevelOne';\n\nclass App extends Component {\n    state = {  }\n\n    render() {\n        return (\n            <Router>\n                <div className=\"App\">\n                    <Navbar/>\n                    <ul style={{color: \"white\"}}>\n                        <li>Show Debugger: [</li>\n                        <li>Hide Debugger: ]</li>\n                        <li><Link to=\"/cg-final-project/\">Load Main Menu</Link></li>\n                        <li><Link to=\"/cg-final-project/level-1\">Load Level 1</Link></li>\n                    </ul>\n                    <div className=\"AppContainer\">\n                        <BabylonCanvas/>\n                        <Switch className=\"LevelContainer\">\n                            {/* <Route path=\"/\"> */}\n                                {/* Create main menu scene */}\n                            {/* </Route> */}\n                            <Route path=\"/cg-final-project/level-1\">\n                                <LevelOne/>\n                            </Route>\n                        </Switch>\n                    </div>\n                </div>\n                <AddBlockModal></AddBlockModal>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}