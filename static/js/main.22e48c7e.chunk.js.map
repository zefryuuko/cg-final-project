{"version":3,"sources":["BabylonCanvas.js","Globals.js","components/uiElements/AddBlockModal.js","components/gameObjects/_ENVIRONMENT.js","components/gameObjects/StoneBlock.js","components/gameObjects/GrassBlock.js","components/gameObjects/PathBlock.js","components/gameObjects/TreeOne.js","components/gameObjects/TreeTwo.js","components/gameObjects/RockOne.js","components/gameObjects/RockTwo.js","components/gameObjects/Campfire.js","components/gameObjects/Tent.js","components/gameObjects/Fence.js","components/gameObjects/Character.js","components/uiElements/AddBlockButton.js","components/uiElements/WinScreen.js","components/uiElements/DeleteBlockButton.js","components/uiElements/WalkBlock.js","components/uiElements/TurnBlock.js","components/uiElements/LoopBlock.js","components/uiElements/IfBlock.js","components/codeEngine/CodeEngine.js","components/uiElements/LevelTitle.js","components/uiElements/LevelInstructions.js","components/gameObjects/ObjectivePoint.js","components/levels/LevelOne.js","App.js","reportWebVitals.js","index.js"],"names":["scene","boxMesh","this","undefined","engine","framerate","character","addBlockModal","currentLevel","codeEngine","BabylonCanvas","props","componentDidMount","BABYLON","canvas","Globals","addLight","addCamera","addSkybox","window","addEventListener","onWindowResize","onKeydownEvent","runRenderLoop","render","registerBeforeRender","event","resize","keyCode","debugLayer","show","hide","hemisphericLight","underMapLighting","Math","PI","photoSphere","CreateSphere","skyboxMaterial","emissiveTexture","diffuseColor","specularColor","uOffset","backFaceCulling","material","arcRotateCamera","panningSensibility","lowerRadiusLimit","upperRadiusLimit","attachControl","setPosition","beta","addGround","ground","CreateGround","height","width","subdivisions","groundMaterial","diffuseTexture","addModels","CreateBox","depth","position","y","woodMaterial","state","useWireFrame","shouldAnimate","removeEventListener","className","ref","Component","AddBlockModal","onChangeSelection","setState","selectedBlockType","target","id","forceUpdate","resetSelectedBlockType","onAddButtonClicked","console","log","addBlock","parentBlockIndex","allowedBlockTypes","bind","blockTypesArray","tabIndex","role","aria-labelledby","aria-hidden","includes","onClick","type","data-dismiss","disabled","Object","freeze","NONE","STONE","GRASS","PATH","WALKED_PATH","TREE_1","TREE_2","ROCK_1","ROCK_2","LARGE_RED_MUSHROOM","SMALL_PURPLE_MUSHROOM","SMALL_YELLOW_MUSHROOM","CAMPFIRE","TENT","FENCE","OBJECTIVE","WALKABLE_BLOCKS","StoneBlock","createMesh","applyMaterial","startSpawnAnimation","componentWillUnmount","mesh","dispose","posX","posY","posZ","x","z","updateSamplingMode","NEAREST_NEAREST_MIPLINEAR","spawnAnimation","ANIMATIONTYPE_VECTOR3","ANIMATIONLOOPMODE_CYCLE","animationDelaySeconds","yOffset","keyFrames","push","frame","value","Zero","One","setKeys","animations","beginAnimation","GrassBlock","faceUV","Array","i","wrap","texture","PathBlock","TreeOne","obj","ImportMesh","meshes","forEach","setParent","alpha","TreeTwo","RockOne","RockTwo","Campfire","scaling","Tent","rotation","Fence","Character","idleAnimation","walkingAnimation","faceDirection","characterParentMaterial","characterModel","particleSystem","skeleton","animationGroups","characterModelMeshes","xOffset","zOffset","meshMaterial","ambientColor","characterFaceDirection","walk","moveAxis","moveDirection","walkAnimation","ANIMATIONTYPE_FLOAT","walkKeyframes","animationSpeed","length","pop","stop","start","from","to","setTimeout","turnLeft","abs","turnLeftAnimation","turnLeftKeyframes","turnRight","turnRightAnimation","turnRightKeyframes","respawn","respawnPositionAnimation","positionKeyframe","AddBlockButton","onButtonClicked","updateAllowedBlockTypes","allowedBlocks","parentAddBlock","parent","data-toggle","data-target","blockCountLimit","WinScreen","children","nextLevel","buttonText","DeleteBlockButton","confirm","deleteBlock","parentIndex","index","WalkBlock","TurnBlock","onSelectionChange","updateBlock","direction","onChange","LoopBlock","componentDidUpdate","updateChildReference","indexes","split","map","currentParentRef","functions","currentBlockChildren","onCycleCountChange","loopCycles","min","max","data","key","renderBlock","IfBlock","onOperatorChange","operator","onLeftOperandChange","leftOperand","onRightOperandChange","rightOperand","name","ifBlockLeftOperandSelection","option","idx","uiText","ifBlockRightOperandSelection","CodeEngine","startSimulation","isRunning","simulate","then","runSuccessfuly","characterPosition","level","_ENVIRONMENT","finishLevel","resetLevel","isObjectiveReached","error","a","block","turn","loop","if_","delayAction","hasReachedGoal","canWalk","parentBlock","metadata","getParentRef","functionsArray","parentIndexString","blockType","prevState","newFunctions","JSON","parse","stringify","blockParentRef","blockIndex","newState","keys","splice","blockMetadata","hasBlockCountLimit","CODE_BLOCK_TYPE","WALK","TURN","IF","LOOP","ms","Promise","resolve","targetX","targetZ","targetBlockType","LevelTitle","heading","subheading","LevelInstructions","ObjectivePoint","LevelOne","environmentSpawned","ENVIRONMENT","yData","yIndex","xData","xIndex","zData","zIndex","spawnEnvironmentItem","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22e48c7e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport * as BABYLON from \"babylonjs\";\nimport Globals from './Globals';\n\n// Temp definitions, delete later\nvar scene;\nvar boxMesh;\n\nclass BabylonCanvas extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { useWireFrame: false, shouldAnimate: false };\n        this.hemisphericLight = undefined;\n        this.underMapLighting = undefined;\n        this.arcRotateCamera = undefined;\n    }\n    \n    componentDidMount = () => {        \n        // Initialize scene and engine\n        this.engine = new BABYLON.Engine(this.canvas, true);\n        Globals.scene = new BABYLON.Scene(this.engine);\n        \n        // Intitialize the scene with the required elements\n        this.addLight();\n        this.addCamera();\n        this.addSkybox();\n\n        // this.addModels();\n        // this.addGround();\n\n        // Add Events\n        window.addEventListener(\"resize\", this.onWindowResize, false);\n        window.addEventListener(\"keydown\", this.onKeydownEvent);\n\n        // Render Loop\n        this.engine.runRenderLoop(() => {\n            Globals.scene.render();\n        });\n\n        // Handle animations and per frame calculations\n        // Simillar to Update() function in Unity\n        Globals.scene.registerBeforeRender(() => {\n            \n        });\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.onWindowResize, false);\n    }\n\n    onWindowResize = event => {\n        this.engine.resize();\n    };\n\n    onKeydownEvent = event => {\n        switch(event.keyCode) {\n            case 219: // [\n                Globals.scene.debugLayer.show();\n                break;\n            case 221: // ]\n                Globals.scene.debugLayer.hide();\n                break;\n            default:\n                break;\n        }\n    } \n\n    addLight = () => {\n        // Create a basic light, aiming 0,1,0 - meaning, to the sky.\n        this.hemisphericLight = new BABYLON.HemisphericLight(\n            \"hemisphericLight\",\n            new BABYLON.Vector3(0, 1, 0),\n            Globals.scene\n        );\n\n        // Create directional light below the map to light up the bottom faces\n        this.underMapLighting = new BABYLON.SpotLight(\n            \"underMapLight\",\n            new BABYLON.Vector3(2, -10, 2),\n            new BABYLON.Vector3(0, 1, 0),\n            Math.PI,\n            8,\n            Globals.scene\n        )\n    };\n\n    addSkybox = () => {\n        var photoSphere = BABYLON.Mesh.CreateSphere(\"skybox\", 16.0, 50.0, scene);\n\n        var skyboxMaterial = new BABYLON.StandardMaterial(\"skyboxMaterial\", scene);\n        skyboxMaterial.emissiveTexture = new BABYLON.Texture(\n            \"assets/other/skybox.png\",\n            Globals.scene,\n            1,\n            0\n        );\n        skyboxMaterial.diffuseColor = new BABYLON.Color3(0, 0, 0);\n        skyboxMaterial.specularColor = new BABYLON.Color3(0, 0, 0);\n        skyboxMaterial.emissiveTexture.uOffset = -Math.PI / 2; // left-right\n        skyboxMaterial.emissiveTexture.uOffset = 0.1; // up-down\n        skyboxMaterial.backFaceCulling = false;\n\n        photoSphere.material = skyboxMaterial;\n    }\n\n    addCamera = () => {\n        // ---------------ArcRotateCamera or Orbit Control----------\n        this.arcRotateCamera = new BABYLON.ArcRotateCamera(\n            \"MainCamera\",\n            Math.PI / 2,\n            Math.PI / 4,\n            10,\n            new BABYLON.Vector3(2, 0, 2),\n            Globals.scene\n        );\n        \n        this.arcRotateCamera.panningSensibility = 0;\n        this.arcRotateCamera.lowerRadiusLimit = this.arcRotateCamera.upperRadiusLimit = 10;\n\n        // camera.inertia = 0;\n        // camera.angularSensibilityX = 250;\n        // camera.angularSensibilityY = 250;\n\n        // This attaches the camera to the canvas\n        this.arcRotateCamera.attachControl(this.canvas, true);\n        this.arcRotateCamera.setPosition(new BABYLON.Vector3(7, 7, 7));\n        this.arcRotateCamera.beta = Math.PI / 2.5;\n    };\n\n    addGround = () => {\n        // Create a built-in \"ground\" shape.\n        var ground = BABYLON.MeshBuilder.CreateGround(\n            \"ground1\",\n            { height: 6, width: 6, subdivisions: 2 },\n            scene\n        );\n        var groundMaterial = new BABYLON.StandardMaterial(\"grass0\", scene);\n        groundMaterial.diffuseTexture = new BABYLON.Texture(\n            \"./assets/ground.jpeg\",\n            scene\n        );\n        ground.material = groundMaterial;\n    };\n\n    addModels = () => {\n        // Add BOX\n        boxMesh = BABYLON.MeshBuilder.CreateBox(\n            \"box\",\n            { height: 1, width: 1, depth: 1 },\n            scene\n        );\n        boxMesh.position.y = 1;\n\n        var woodMaterial = new BABYLON.StandardMaterial(\"wood\", scene);\n        woodMaterial.diffuseTexture = new BABYLON.Texture(\n            \"./assets/portal_cube.png\",\n            scene\n        );\n        boxMesh.material = woodMaterial;\n    };\n\n    render() {\n        return (\n            <canvas\n                className=\"renderCanvas\"\n                ref={canvas => {\n                    this.canvas = canvas;\n                }}\n            />\n        );\n    }\n}\nexport default BabylonCanvas;","class Globals {\n    constructor() {\n        this.scene = undefined;\n        this.engine = undefined;\n        this.framerate = 60;\n        this.character = undefined;\n        this.addBlockModal = undefined;\n        this.currentLevel = undefined;\n        this.codeEngine = undefined;\n    }\n}\n\nexport default new Globals();","import React, { Component } from 'react';\nimport Globals from '../../Globals';\n\nclass AddBlockModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedBlockType: null,\n            allowedBlockTypes: []\n        }\n        this.parentBlockIndex = -1;\n\n        Globals.addBlockModal = this;\n\n        // Bind functions\n        this.onChangeSelection = this.onChangeSelection.bind(this);\n    }\n\n    onChangeSelection = (event) => {\n        this.setState({\n            selectedBlockType: event.target.id\n        }, () => { this.forceUpdate() });\n    }\n\n    resetSelectedBlockType = (event) => {\n        this.setState({\n            selectedBlockType: null\n        });\n    }\n\n    onAddButtonClicked = () => {\n        console.log(`Adding ${this.state.selectedBlockType} block`);\n        Globals.codeEngine.addBlock(this.state.selectedBlockType, this.parentBlockIndex);\n        this.resetSelectedBlockType();\n    }\n\n    updateAllowedBlockTypes(blockTypesArray) {\n        this.setState({\n            allowedBlockTypes: blockTypesArray\n        });\n    }\n\n    render() { \n        return (\n            <div id=\"addBlockModal\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h4 className=\"modal-title\" id=\"myModalLabel\">Add Function</h4>                        </div>\n                        <div className=\"modal-body\">\n                            <form>\n                                <ul className=\"list-group\">\n                                    {\n                                        this.state.allowedBlockTypes.includes(\"WALK\") ?\n                                        <li className={`list-group-item list-group-item-primary ${this.state.selectedBlockType === \"WALK\" ? \"active\" : null}`} \n                                            id=\"WALK\" \n                                            onClick={this.onChangeSelection}\n                                        >\n                                        <b>Walk</b><br/>\n                                        Move the character one block towards the direction its facing\n                                        </li>\n                                        : null\n                                    }\n                                    {\n                                        this.state.allowedBlockTypes.includes(\"TURN\") ?\n                                        <li className={`list-group-item list-group-item-primary ${this.state.selectedBlockType === \"TURN\" ? \"active\" : null}`} \n                                            id=\"TURN\" \n                                            onClick={this.onChangeSelection}\n                                        >\n                                        <b>Turn</b><br/>\n                                        Rotate the character to the left or right\n                                        </li>\n                                        : null\n                                    }\n                                    {                    \n                                        this.state.allowedBlockTypes.includes(\"LOOP\") ?                \n                                        <li className={`list-group-item list-group-item-warning ${this.state.selectedBlockType === \"LOOP\" ? \"active\" : null}`} \n                                            id=\"LOOP\" \n                                            onClick={this.onChangeSelection}\n                                        >\n                                        <b>Loop</b><br/>\n                                        Run a set of functions in a loop\n                                        </li>\n                                        : null\n                                    }\n                                    {\n                                        this.state.allowedBlockTypes.includes(\"IF\") ?\n                                        <li className={`list-group-item list-group-item-danger ${this.state.selectedBlockType === \"IF\" ? \"active\" : null}`} \n                                            id=\"IF\" \n                                            onClick={this.onChangeSelection}\n                                        >\n                                        <b>If</b><br/>\n                                        Run a set of functions if a certain condition is met\n                                        </li> \n                                        : null\n                                    }\n                                </ul>\n                            </form>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button\n                                type=\"button\" className=\"btn btn-success\" \n                                data-dismiss=\"modal\"\n                                disabled={this.state.selectedBlockType === null}\n                                onClick={this.onAddButtonClicked}\n                            >\n                                Add\n                            </button>\n                            <button \n                                type=\"button\" className=\"btn btn-light\" data-dismiss=\"modal\" \n                                onClick={this.resetSelectedBlockType}\n                            >\n                                Cancel\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddBlockModal\n","/*\n    _ENVIRONMENT.js\n    Environment game objects id definition. Used for map spawning and referencing\n*/\n\nclass ENVIRONMENT {\n    NONE = 0;\n    STONE = 1;\n    GRASS = 2;\n    PATH = 3;\n    WALKED_PATH = 4\n    TREE_1 = 10;\n    TREE_2 = 11;\n    ROCK_1 = 12;\n    ROCK_2 = 13;\n    LARGE_RED_MUSHROOM = 14;\n    SMALL_PURPLE_MUSHROOM = 15;\n    SMALL_YELLOW_MUSHROOM = 16;\n    CAMPFIRE = 17;\n    TENT = 18;\n    FENCE = 19;\n    OBJECTIVE = 99;\n    \n    WALKABLE_BLOCKS = [this.PATH];\n}\n\n// Freeze the object to prevent changes\nexport default Object.freeze(new ENVIRONMENT());","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass StoneBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n        this.startSpawnAnimation();\n    }\n\n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `stoneBlock_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Modify mesh properties\n        this.mesh.position.x = posX;\n        this.mesh.position.y = posY;\n        this.mesh.position.z = posZ;\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"StoneBlockMaterial\", Globals.scene);\n        \n        // \n        material.diffuseTexture = new BABYLON.Texture(\"assets/textures/stone.png\", Globals.scene);\n        material.diffuseTexture.updateSamplingMode(BABYLON.Texture.NEAREST_NEAREST_MIPLINEAR);\n\n        // Use CubeTexture to map the texture to each face\n        // material.reflectionTexture = new BABYLON.CubeTexture(\"/assets/textures/grass/grass\", Globals.scene);\n        // material.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\n        // material.reflectionTexture.updateSamplingMode(BABYLON.Texture.NEAREST_NEAREST_MIPLINEAR);\n        // material.diffuseColor = new BABYLON.Color3(0, 0, 0);\n        material.specularColor = new BABYLON.Color3(0, 0, 0);\n        material.backFaceCulling = false;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"scaling\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: BABYLON.Vector3.Zero(),\n        });\n        keyFrames.push({\n            frame: animationDelaySeconds * Globals.framerate,\n            value: BABYLON.Vector3.Zero()\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: BABYLON.Vector3.One(),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default StoneBlock\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass GrassBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n        this.startSpawnAnimation();\n    }\n\n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Texture Options\n        // Source: https://playground.babylonjs.com/#ICLXQ8#1\n        let columns = 6;  // 6 columns\n        let rows = 1;  // 1 row\n\n        //alien sprite\n        let faceUV = new Array(6);\n\n        //set all faces to same\n        for (let i = 0; i < 6; i++) {\n            faceUV[i] = new BABYLON.Vector4(i / columns, 0, (i + 1) / columns, 1 / rows);\n        }\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `grassBlock_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1, faceUV: faceUV, wrap:true },\n            Globals.scene\n        );\n\n        // Modify mesh properties\n        this.mesh.position.x = posX;\n        this.mesh.position.y = posY;\n        this.mesh.position.z = posZ;\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"GrassBlockMaterial\", Globals.scene);\n        let texture = new BABYLON.Texture(\"assets/textures/grass_block.jpg\", Globals.scene);\n        material.diffuseTexture = texture;\n        material.specularColor = new BABYLON.Color3(0, 0, 0);\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"scaling\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: BABYLON.Vector3.Zero(),\n        });\n        keyFrames.push({\n            frame: animationDelaySeconds * Globals.framerate,\n            value: BABYLON.Vector3.Zero()\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: BABYLON.Vector3.One(),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default GrassBlock\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass PathBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n        this.startSpawnAnimation();\n    }\n\n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Texture Options\n        // Source: https://playground.babylonjs.com/#ICLXQ8#1\n        let columns = 6;  // 6 columns\n        let rows = 1;  // 1 row\n\n        //alien sprite\n        let faceUV = new Array(6);\n\n        //set all faces to same\n        for (let i = 0; i < 6; i++) {\n            faceUV[i] = new BABYLON.Vector4(i / columns, 0, (i + 1) / columns, 1 / rows);\n        }\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `grassBlock_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1, faceUV: faceUV, wrap:true },\n            Globals.scene\n        );\n\n        // Modify mesh properties\n        this.mesh.position.x = posX;\n        this.mesh.position.y = posY;\n        this.mesh.position.z = posZ;\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"GrassBlockMaterial\", Globals.scene);\n        let texture = new BABYLON.Texture(\"assets/textures/path_block.jpg\", Globals.scene);\n        material.diffuseTexture = texture;\n        material.specularColor = new BABYLON.Color3(0, 0, 0);\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"scaling\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: BABYLON.Vector3.Zero(),\n        });\n        keyFrames.push({\n            frame: animationDelaySeconds * Globals.framerate,\n            value: BABYLON.Vector3.Zero()\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: BABYLON.Vector3.One(),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default PathBlock\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass TreeOne extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n        this.obj = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n    }\n    \n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `treeOne_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Load 3D model\n        this.obj = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"tree_1.obj\",\n            Globals.scene,\n            (meshes) => {\n                meshes.forEach((mesh) => {\n                    mesh.setParent(this.mesh);\n                    mesh.position.y -= 0.5;\n                });\n\n                // Modify parent mesh properties\n                this.mesh.position.x = posX;\n                this.mesh.position.y = posY;\n                this.mesh.position.z = posZ;\n\n                this.startSpawnAnimation();\n            }\n        );\n\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"TreeOneParentMaterial\", Globals.scene);\n        material.alpha = 0;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"position\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate) - 1,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY + 0.5,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            ),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default TreeOne\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass TreeTwo extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n        this.obj = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n    }\n    \n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `treeTwo_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Load 3D model\n        this.obj = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"tree_2.obj\",\n            Globals.scene,\n            (meshes) => {\n                meshes.forEach((mesh) => {\n                    mesh.setParent(this.mesh);\n                    mesh.position.y -= 0.5;\n                });\n\n                // Modify parent mesh properties\n                this.mesh.position.x = posX;\n                this.mesh.position.y = posY;\n                this.mesh.position.z = posZ;\n\n                this.startSpawnAnimation();\n            }\n        );\n\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"TreeOneParentMaterial\", Globals.scene);\n        material.alpha = 0;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"position\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate) - 1,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY + 0.5,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            ),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default TreeTwo\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass RockOne extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n        this.obj = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n    }\n    \n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `rockOne_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Load 3D model\n        this.obj = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"rock_1.obj\",\n            Globals.scene,\n            (meshes) => {\n                meshes.forEach((mesh) => {\n                    mesh.setParent(this.mesh);\n                    mesh.position.y -= 0.5;\n                });\n\n                // Modify parent mesh properties\n                this.mesh.position.x = posX;\n                this.mesh.position.y = posY;\n                this.mesh.position.z = posZ;\n\n                this.startSpawnAnimation();\n            }\n        );\n\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"TreeOneParentMaterial\", Globals.scene);\n        material.alpha = 0;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"position\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate) - 1,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY + 0.5,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            ),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default RockOne\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass RockTwo extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n        this.obj = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n    }\n    \n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `rockTwo_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Load 3D model\n        this.obj = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"rock_2.obj\",\n            Globals.scene,\n            (meshes) => {\n                meshes.forEach((mesh) => {\n                    mesh.setParent(this.mesh);\n                    mesh.position.y -= 0.5;\n                });\n\n                // Modify parent mesh properties\n                this.mesh.position.x = posX;\n                this.mesh.position.y = posY;\n                this.mesh.position.z = posZ;\n\n                this.startSpawnAnimation();\n            }\n        );\n\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"TreeOneParentMaterial\", Globals.scene);\n        material.alpha = 0;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"position\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate) - 1,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY + 0.5,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            ),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default RockTwo\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass Campfire extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n        this.obj = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n    }\n    \n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `campfire_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Load 3D model\n        this.obj = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"campfire.obj\",\n            Globals.scene,\n            (meshes) => {\n                meshes.forEach((mesh) => {\n                    mesh.setParent(this.mesh);\n                    mesh.scaling = new BABYLON.Vector3(0.9, 0.9, 0.9);\n                    mesh.position.x += 0.1;\n                    mesh.position.y -= 0.5;\n                });\n\n                // Modify parent mesh properties\n                this.mesh.position.x = posX;\n                this.mesh.position.y = posY;\n                this.mesh.position.z = posZ;\n\n                this.startSpawnAnimation();\n            }\n        );\n\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"TreeOneParentMaterial\", Globals.scene);\n        material.alpha = 0;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"position\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate) - 1,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY + 0.5,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            ),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default Campfire;\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass Tent extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n        this.obj = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n    }\n    \n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `tent_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Load 3D model\n        this.obj = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"tent.obj\",\n            Globals.scene,\n            (meshes) => {\n                meshes.forEach((mesh) => {\n                    mesh.setParent(this.mesh);\n                    mesh.position.y -= 0.5;\n                    mesh.position.x -= 0.5;\n                });\n\n                // Modify parent mesh properties\n                this.mesh.position.x = posX;\n                this.mesh.position.y = posY;\n                this.mesh.position.z = posZ;\n                this.mesh.rotation.y = Math.PI;\n\n                this.startSpawnAnimation();\n            }\n        );\n\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"TreeOneParentMaterial\", Globals.scene);\n        material.alpha = 0;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"position\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate) - 1,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY + 0.5,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            ),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default Tent;\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass Fence extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n        this.obj = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n    }\n    \n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `fence_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Load 3D model\n        this.obj = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"fence.obj\",\n            Globals.scene,\n            (meshes) => {\n                meshes.forEach((mesh) => {\n                    mesh.setParent(this.mesh);\n                    mesh.rotation.y = 0.125;\n                    mesh.position.y -= 0.5;\n                });\n\n                // Modify parent mesh properties\n                this.mesh.position.x = posX;\n                this.mesh.position.y = posY;\n                this.mesh.position.z = posZ;\n\n                this.startSpawnAnimation();\n            }\n        );\n\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"TreeOneParentMaterial\", Globals.scene);\n        material.alpha = 0;\n\n        // Apply material to mesh\n        this.mesh.material = material;\n    }\n\n    startSpawnAnimation = () => {\n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"position\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate) - 1,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY + 0.5,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            ),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default Fence;\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass Character extends Component {\n    constructor(props) {\n        super(props);\n\n        // Character\n        this.mesh = undefined;\n        this.characterModel = undefined;\n        this.characterModelMeshes = undefined;\n        this.characterFaceDirection = props.faceDirection;    // Value represents N E S W\n        \n        // Object position offset\n        this.xOffset = 0;\n        this.yOffset = -0.5;\n        this.zOffset = 0;\n\n        // Animations\n        this.animationSpeed = 0.5;\n        this.turnLeftAnimation = undefined;\n        this.idleAnimation = undefined;\n        this.walkingAnimation = undefined;\n\n        // Put a global reference to this object\n        Globals.character = this;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n    }\n    \n    componentWillUnmount = () => {\n        Globals.character = undefined;\n        this.mesh.dispose();\n        this.idleAnimation = this.walkingAnimation = null;\n    }\n    \n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n        const faceDirection = this.props.faceDirection ? this.props.faceDirection : 0;\n        \n        // Create parent mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            \"character\",\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Create parent material for transparency\n        const characterParentMaterial = new BABYLON.Material(\"characterParentMaterial\");\n        characterParentMaterial.alpha = 0;\n            \n        // Modify parent object properties\n        this.mesh.position = new BABYLON.Vector3(posX, posY, posZ);\n        this.mesh.material = characterParentMaterial;\n        \n\n        // Load mesh\n        this.characterModel = BABYLON.SceneLoader.ImportMesh(\n            \"\",\n            \"assets/obj/\",\n            \"character_running.glb\",\n            Globals.scene,\n            (meshes, particleSystem, skeleton, animationGroups) => {               \n                // Expose the meshes and animations to the outside world\n                this.characterModelMeshes = meshes;\n                this.idleAnimation = animationGroups[0];\n                this.walkingAnimation = animationGroups[1];\n                \n                \n                // Modify mesh properties\n                meshes.forEach(mesh => {\n                    mesh.scaling = new BABYLON.Vector3(0.1, 0.1, 0.1);\n                    mesh.position = new BABYLON.Vector3(\n                        posX + this.xOffset,\n                        posY + this.yOffset,\n                        posZ + this.zOffset\n                    );\n                    const meshMaterial = new BABYLON.StandardMaterial(\"characterMaterial\");\n                    meshMaterial.specularColor = new BABYLON.Color3(1 ,1 ,1);\n                    meshMaterial.diffuseColor = new BABYLON.Color3(1, 0.6, 0);\n                    meshMaterial.backFaceCulling = false;\n                    meshMaterial.ambientColor = new BABYLON.Color3(0.23, 0.98, 0.53);\n\n                    mesh.material = meshMaterial;\n                    mesh.setParent(this.mesh);\n                });\n\n                // Use rotation data from component properties\n                this.characterFaceDirection = faceDirection;\n                this.mesh.rotation.y += Math.PI * 0.5 * faceDirection;\n\n                // Start spawn animation after loading mesh\n                this.startSpawnAnimation();\n            }\n        );\n    }\n\n    startSpawnAnimation = () => {\n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"position\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate) - 1,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                100,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.1 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY + 0.5,\n                this.props.posZ\n            ),\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            ),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n    walk = () => {\n        // Determine the move axis and move direction\n        const moveAxis = this.characterFaceDirection % 2 === 0 ? \"z\" : \"x\";\n        const moveDirection = this.characterFaceDirection >=2 ? 1 : -1;\n\n        const walkAnimation = new BABYLON.Animation(\n            \"characterTurnleft\",\n            `position.${moveAxis}`,\n            Globals.framerate,\n            BABYLON.Animation.ANIMATIONTYPE_FLOAT,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n\n        const walkKeyframes = [];\n        walkKeyframes.push({\n            frame: 0,\n            value: moveAxis === \"x\" ? this.mesh.position.x : this.mesh.position.z\n        });\n        walkKeyframes.push({\n            frame: this.animationSpeed * Globals.framerate,\n            value: (moveAxis === \"x\" ? this.mesh.position.x : this.mesh.position.z) + moveDirection\n        });\n\n        walkAnimation.setKeys(walkKeyframes);\n\n        // Pop the last animation before adding another one\n        if (this.mesh.animations.length > 0)\n            this.mesh.animations.pop();\n        this.mesh.animations.push(walkAnimation);\n\n        Globals.scene.beginAnimation(this.mesh, 0, this.animationSpeed * Globals.framerate, false);\n        this.idleAnimation.stop();\n        this.walkingAnimation.start(false, 2.0, this.walkingAnimation.from, this.walkingAnimation.to, false);\n        \n        // Stop animation after finished walking\n        setTimeout(() => {\n            this.walkingAnimation.stop();\n            this.idleAnimation.start(true, 1.0, this.idleAnimation.from, this.idleAnimation.to, false);\n        }, this.animationSpeed * 1000);\n    }\n\n    turnLeft = () => {\n        // Update the direction of the character\n        if (this.characterFaceDirection === 0)\n            this.characterFaceDirection = 3;\n        else\n            this.characterFaceDirection = Math.abs((this.characterFaceDirection - 1) % 4);\n        console.log(`Rotating player to ${this.characterFaceDirection}`);\n\n        const turnLeftAnimation = new BABYLON.Animation(\n            \"characterTurnleft\",\n            \"rotation.y\",\n            Globals.framerate,\n            BABYLON.Animation.ANIMATIONTYPE_FLOAT,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n\n        const turnLeftKeyframes = [];\n        turnLeftKeyframes.push({\n            frame: 0,\n            value: this.mesh.rotation.y\n        });\n        turnLeftKeyframes.push({\n            frame: this.animationSpeed * Globals.framerate,\n            value: this.mesh.rotation.y - Math.PI/2\n        });\n\n        turnLeftAnimation.setKeys(turnLeftKeyframes);\n        \n        // Pop the last animation before adding another one\n        if (this.mesh.animations.length > 0)\n            this.mesh.animations.pop();\n        this.mesh.animations.push(turnLeftAnimation);\n\n        Globals.scene.beginAnimation(this.mesh, 0, this.animationSpeed * Globals.framerate, false);\n    }\n\n    turnRight = () => {\n        // Update the direction of the character\n        this.characterFaceDirection = Math.abs((this.characterFaceDirection + 1) % 4);\n        console.log(`Rotating player to ${this.characterFaceDirection}`);\n\n        const turnRightAnimation = new BABYLON.Animation(\n            \"characterTurnleft\",\n            \"rotation.y\",\n            Globals.framerate,\n            BABYLON.Animation.ANIMATIONTYPE_FLOAT,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n\n        const turnRightKeyframes = [];\n        turnRightKeyframes.push({\n            frame: 0,\n            value: this.mesh.rotation.y\n        });\n        turnRightKeyframes.push({\n            frame: this.animationSpeed * Globals.framerate,\n            value: this.mesh.rotation.y + Math.PI/2\n        });\n\n        turnRightAnimation.setKeys(turnRightKeyframes);\n        \n        // Pop the last animation before adding another one\n        if (this.mesh.animations.length > 0)\n            this.mesh.animations.pop();\n        this.mesh.animations.push(turnRightAnimation);\n\n        Globals.scene.beginAnimation(this.mesh, 0, this.animationSpeed * Globals.framerate, false);\n    }\n\n    respawn = () => {\n        const respawnPositionAnimation = new BABYLON.Animation(\n            \"characterRespawnPosition\",\n            \"position\",\n            Globals.framerate,\n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );        \n        const positionKeyframe = [];\n        positionKeyframe.push({\n            frame: 0,\n            value: this.mesh.position\n        });\n        positionKeyframe.push({\n            frame: 0.2 * Globals.framerate,\n            value: new BABYLON.Vector3(\n                this.mesh.position.x,\n                1.5,\n                this.mesh.position.z\n            )\n        });\n        positionKeyframe.push({\n            frame: 0.2 * Globals.framerate + 1,\n            value: new BABYLON.Vector3(\n                this.mesh.position.x,\n                1.5,\n                this.mesh.position.z\n            )\n        });\n        positionKeyframe.push({\n            frame: 0.4 * Globals.framerate,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                1.5,\n                this.props.posZ\n            )\n        });\n        positionKeyframe.push({\n            frame: 0.7 * Globals.framerate,\n            value: new BABYLON.Vector3(\n                this.props.posX,\n                this.props.posY,\n                this.props.posZ\n            )\n        });\n        respawnPositionAnimation.setKeys(positionKeyframe);\n        \n        // Pop the last animation before adding another one\n        if (this.mesh.animations.length > 0)\n            this.mesh.animations.pop();\n        this.mesh.animations.push(respawnPositionAnimation);\n\n        // Move character to spawn point\n        Globals.scene.beginAnimation(this.mesh, 0, 0.8 * Globals.framerate, false);\n        \n        // Rotate player to its original state\n        this.mesh.rotation.y = Math.PI * 0.5 * this.props.faceDirection;\n        this.characterFaceDirection = this.props.faceDirection;\n    }\n    \n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default Character\n","import React, { Component } from 'react';\nimport Globals from '../../Globals';\n\nclass AddBlockButton extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            blockCountLimit: null\n        }\n    }\n\n    onButtonClicked = () => {\n        // Set the modal's parent index reference\n        Globals.addBlockModal.parentBlockIndex = this.props.parentBlockIndex;\n        Globals.addBlockModal.updateAllowedBlockTypes(Globals.currentLevel.allowedBlocks);\n    }\n\n    render = () => {\n        let parentAddBlock = this.props.parent ? \"parentAddBlock\" : null;\n        return (\n            <button \n                className={`btnAddBlock ${parentAddBlock}`}\n                data-toggle=\"modal\"\n                data-target=\"#addBlockModal\"\n                onClick={this.onButtonClicked}\n                disabled={this.props.disabled}\n            >\n                +\n            </button>\n        )\n    }\n}\n\nexport default AddBlockButton\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass WinScreen extends Component {\n    render() {\n        return (\n            <div className=\"winScreen\">\n                <h1>Level Passed!</h1>\n                { this.props.children }\n                <p>Congratulations! You passed the first level.</p>\n                <Link to={this.props.nextLevel} className=\"btn btn-lg btn-success\">{this.props.buttonText ? this.props.buttonText : \"Next Level\"}</Link>\n            </div>\n        )\n    }\n}\n\nexport default WinScreen\n","import React, { Component } from 'react';\nimport Globals from '../../Globals';\n\nclass DeleteBlockButton extends Component {\n    onButtonClicked = () => {\n        const deleteConfirmed = window.confirm(\"Are you sure you want to delete this function?\");\n        if (deleteConfirmed) Globals.codeEngine.deleteBlock(this.props.parentIndex, this.props.index);\n    }\n\n    render = () => {\n        return (\n            <button \n                className=\"btnDeleteBlock\"\n                onClick={this.onButtonClicked}\n                disabled={this.props.disabled}\n            >\n                -\n            </button>\n        )\n    }\n}\n\nexport default DeleteBlockButton\n","import React, { Component } from 'react';\nimport DeleteBlockButton from '../uiElements/DeleteBlockButton';\n\nclass WalkBlock extends Component {\n    render = () => {\n        return (\n            <div className=\"block function\" index={this.props.index}>\n                <DeleteBlockButton index={this.props.index} parentIndex={this.props.parentIndex} disabled={this.props.disabled}/>\n                <p>Walk</p>\n            </div>\n        )\n    }\n}\n\nexport default WalkBlock\n","import React, { Component } from 'react';\nimport Globals from '../../Globals';\nimport DeleteBlockButton from '../uiElements/DeleteBlockButton';\n\nclass TurnBlock extends Component {\n    onSelectionChange = (event) => {\n        const { value } = event.target;\n        Globals.codeEngine.updateBlock(\n            this.props.parentIndex,\n            this.props.index,\n            { direction: value }\n        );\n    }\n\n    render = () => {\n        return (\n            <div className=\"block function\" index={this.props.index}>\n                <DeleteBlockButton index={this.props.index} parentIndex={this.props.parentIndex} disabled={this.props.disabled}/>\n                <p>Turn</p>\n                <select className=\"form-control\" value={this.props.direction} onChange={this.onSelectionChange} disabled={this.props.disabled}>\n                    <option value=\"-1\">Left</option>\n                    <option value=\"1\">Right</option>\n                </select>\n            </div>\n        )\n    }\n}\n\nexport default TurnBlock\n","import React, { Component } from 'react';\nimport Globals from '../../Globals';\nimport AddBlockButton from './AddBlockButton';\nimport DeleteBlockButton from './DeleteBlockButton';\n\nclass LoopBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.updateChildReference();\n    }\n    \n    componentDidUpdate = () => {\n        this.updateChildReference();\n    }\n    \n    updateChildReference = () => {\n        // Retrieve functions array reference from index props\n        const indexes = this.props.parentIndex.split(\" \").map(i => +i);\n        let currentParentRef = undefined;\n        for (let i = 0; i < indexes.length; i++) {\n            if (indexes[i] === -1) {\n                currentParentRef = Globals.codeEngine.state.functions;\n            } else {\n                if (!currentParentRef[indexes[i]]) return;\n                currentParentRef = currentParentRef[indexes[i]].children;\n            }\n        }\n\n        if (!currentParentRef[this.props.index]) return;\n        this.currentBlockChildren = currentParentRef[this.props.index].children;\n    }\n\n    onCycleCountChange = (event) => {\n        const { value } = event.target;\n\n        // Update value on CodeEngine\n        Globals.codeEngine.updateBlock(\n            this.props.parentIndex,\n            this.props.index,\n            { loopCycles: value }\n        );        \n    }\n\n    render = () => {\n        return (\n            <div className=\"block loop\" index={this.props.index}>\n                <DeleteBlockButton index={this.props.index} parentIndex={this.props.parentIndex} disabled={this.props.disabled}/>\n                <p>Loop</p>\n                    <input \n                        type=\"number\"\n                        className=\"form-control\"\n                        min=\"2\"\n                        max=\"99\"\n                        onChange={this.onCycleCountChange}\n                        value={this.props.loopCycles}\n                        disabled={this.props.disabled}\n                    />\n                <p>times</p>\n                <div className=\"children\">\n                    {\n                        this.currentBlockChildren.map((data, key) => {\n                            return Globals.codeEngine.renderBlock(data, key, `${this.props.parentIndex} ${this.props.index}`);\n                        })\n                    }\n                </div>\n                <AddBlockButton parentBlockIndex={`${this.props.parentIndex} ${this.props.index}`} disabled={this.props.disabled}/>\n            </div>\n        )\n    }\n}\n\nexport default LoopBlock\n","import React, { Component } from 'react';\nimport Globals from '../../Globals';\nimport AddBlockButton from './AddBlockButton';\nimport DeleteBlockButton from './DeleteBlockButton';\n\nclass IfBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.updateChildReference();\n    }\n    \n    componentDidUpdate = () => {\n        this.updateChildReference();\n    }\n    \n    updateChildReference = () => {\n        // Retrieve functions array reference from index props\n        const indexes = this.props.parentIndex.split(\" \").map(i => +i);\n        let currentParentRef = undefined;\n        for (let i = 0; i < indexes.length; i++) {\n            if (indexes[i] === -1) {\n                currentParentRef = Globals.codeEngine.state.functions;\n            } else {\n                if (!currentParentRef[indexes[i]]) return;\n                currentParentRef = currentParentRef[indexes[i]].children;\n            }\n        }\n\n        if (!currentParentRef[this.props.index]) return;\n        this.currentBlockChildren = currentParentRef[this.props.index].children;\n    }\n\n    onOperatorChange = (event) => {\n        const { value } = event.target;\n\n        // Update value on CodeEngine\n        Globals.codeEngine.updateBlock(\n            this.props.parentIndex,\n            this.props.index,\n            { operator: value }\n        );        \n    }\n\n    onLeftOperandChange = (event) => {\n        const { value } = event.target;\n\n        // Update value on CodeEngine\n        Globals.codeEngine.updateBlock(\n            this.props.parentIndex,\n            this.props.index,\n            { leftOperand: value }\n        );        \n    }\n\n    onRightOperandChange = (event) => {\n        const { value } = event.target;\n\n        // Update value on CodeEngine\n        Globals.codeEngine.updateBlock(\n            this.props.parentIndex,\n            this.props.index,\n            { rightOperand: value }\n        );        \n    }\n\n    render = () => {\n        return (\n            <div className=\"block if\" index={this.props.index}>\n                <DeleteBlockButton index={this.props.index} parentIndex={this.props.parentIndex} disabled={this.props.disabled}/>\n                <p>If</p>\n                <div className=\"options\">\n                    <select className=\"form-control operand\" name=\"leftOperand\" value={this.props.leftOperand} onChange={this.onLeftOperandChange} disabled={this.props.disabled}>\n                        {\n                            Globals.codeEngine.ifBlockLeftOperandSelection.map((option, idx) => {\n                                return (\n                                    <option value={option.id} key={idx}>{option.uiText}</option>\n                                );\n                            })\n                        }\n                    </select>\n                    <select className=\"form-control operator\" name=\"operator\" value={this.props.operator} onChange={this.onOperatorChange} disabled={this.props.disabled}>\n                        <option value=\"EQUALS\">=</option>\n                        <option value=\"NOT_EQUALS\">!=</option>\n                    </select>\n                    <select className=\"form-control operand\" name=\"rightOperand\" value={this.props.rightOperand} onChange={this.onRightOperandChange} disabled={this.props.disabled}>\n                        {\n                            Globals.codeEngine.ifBlockRightOperandSelection.map((option, idx) => {\n                                return (\n                                    <option value={option.id} key={idx}>{option.uiText}</option>\n                                );\n                            })\n                        }\n                    </select>\n                </div>\n                <div className=\"children\">\n                    {\n                        this.currentBlockChildren.map((data, key) => {\n                            return Globals.codeEngine.renderBlock(data, key, `${this.props.parentIndex} ${this.props.index}`);\n                        })\n                    }\n                </div>\n                <AddBlockButton parentBlockIndex={`${this.props.parentIndex} ${this.props.index}`} disabled={this.props.disabled}/>\n            </div>\n        )\n    }\n}\n\nexport default IfBlock;\n","import React, { Component } from 'react'\nimport Globals from '../../Globals';\nimport _ENVIRONMENT from '../gameObjects/_ENVIRONMENT';\n\n// CodeEngine DOM Elements\nimport AddBlockButton from '../uiElements/AddBlockButton';\nimport WinScreen from '../uiElements/WinScreen';\nimport WalkBlock from '../uiElements/WalkBlock';\nimport TurnBlock from '../uiElements/TurnBlock';\nimport LoopBlock from '../uiElements/LoopBlock';\nimport IfBlock from '../uiElements/IfBlock';\n\nclass CodeEngine extends Component {\n    constructor(props) {\n        super(props);\n        // const { allowedFunctions, level } = props;\n        this.state = {\n            functions: [],\n            hasBlockCountLimit: false,\n            blockCountLimit: -1,\n            isRunning: false,\n            isObjectiveReached: false\n        }\n\n        // Block types enum\n        this.CODE_BLOCK_TYPE = Object.freeze({\n            WALK: 0,\n            TURN: 1,\n            IF: 2,\n            LOOP: 3\n        });\n\n        // If block value definition\n        this.ifBlockLeftOperandSelection = [\n            { id: \"CHARACTER\", uiText: \"character\" }\n        ];\n        this.ifBlockRightOperandSelection = [\n            { id: \"CAN_WALK\", uiText: \"canWalk\" }\n        ];\n\n        // Reference current CodeEngine instance to globals\n        Globals.codeEngine = this;\n    }\n\n    componentDidMount = () => {\n\n    }\n\n    startSimulation = (functions) => {\n        // Disable buttons\n        this.setState(\n            { isRunning: true },\n            () => {\n                this.forceUpdate();\n            }\n        );\n\n        // Run recursive simulation function\n        this.simulate(this.state.functions).then((runSuccessfuly) => {\n            if (!runSuccessfuly) {\n                this.resetLevel();\n            } else {\n                const characterPosition = Globals.character.mesh.position;\n                const characterIsOnObjective = Globals.currentLevel.level[characterPosition.y + this.props.yOffset][characterPosition.x][characterPosition.z] === _ENVIRONMENT.OBJECTIVE;\n                if (characterIsOnObjective) this.finishLevel();\n                else this.resetLevel()\n            }\n        });\n    }\n    \n    finishLevel = () => {\n        console.log(\"Simulation ran successfuly.\");\n        this.setState(\n            { isRunning: false, isObjectiveReached: true },\n            () => {\n                this.forceUpdate();\n            }\n        );\n    }\n\n    resetLevel = () => {\n        // Reset level to its original state\n        console.error(\"Simulation failed\");\n        Globals.character.respawn();\n        this.setState(\n            { isRunning: false },\n            () => {\n                this.forceUpdate();\n            }\n        );\n    }\n\n    simulate = async (parent) => {\n        // Run actions based on the user input\n        for (let block of parent) {\n            switch(block.type) {\n                case \"WALK\":\n                    if (!await this.walk()) return false;\n                    break;\n                case \"TURN\":\n                    if (!await this.turn(block.direction)) return false;\n                    break;\n                case \"LOOP\":\n                    if (!await this.loop(block)) return false;\n                    break;\n                case \"IF\":\n                    if (!await this.if_(block)) return false;\n                    break;\n                default:\n                    console.error(`Invalid block type. Received ${block.type}`);\n                    return false;\n            }\n\n            // Do not add any execution delay if the current block is loop\n            if (block.type !== \"LOOP\") await this.delayAction(1000);\n            \n            // Check if the player has reached the final position\n        }\n\n        // Check if the player has reached the final position\n        return true;\n    }\n\n    delayAction(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    hasReachedGoal = () => {\n        // Check if the player has reached the final position\n    }\n\n    canWalk() {\n        // Validate if the player can move forward\n        let targetX = Globals.character.mesh.position.x;\n        let targetZ = Globals.character.mesh.position.z;\n\n        switch(Globals.character.characterFaceDirection) {\n            case 0: // Z-\n                targetZ -= 1;\n                break;\n            case 1:  // X-\n                targetX -= 1;\n                break;\n            case 2: // Z+\n                targetZ += 1;\n                break;\n            case 3: // X+\n                targetX += 1;\n                break;\n            default:\n                break;\n        }\n\n        if (targetX < 0 || targetX > 4) return false;\n        if (targetZ < 0 || targetZ > 4) return false;\n        const targetBlockType = Globals.currentLevel.level[Globals.currentLevel.yOffset][targetX][targetZ];\n        if (!_ENVIRONMENT.WALKABLE_BLOCKS.includes(targetBlockType)) return false;\n\n        return true;\n    }\n\n    walk = async () => {\n        // Before walking, check if the character can move into its direction\n        if (!this.canWalk()) return false;\n\n        // Send the command to move forward.\n        // Return true tells the recursive funciton to contunue running.\n        Globals.character.walk();\n        return true;\n    }\n\n    turn = async (direction) => {\n        switch(direction) {\n            case \"1\": // Turn right\n                Globals.character.turnRight();\n                break;\n            case \"-1\": // Turn left\n                Globals.character.turnLeft();\n                break;\n            default:\n                console.error(`Invalid turn direction. Received ${direction}`);\n                break;\n        }\n        return true;\n    }\n\n    loop = async (parentBlock) => {\n        for(let i = 0; i < parentBlock.loopCycles; i++) {\n            if (!await this.simulate(parentBlock.children)) return false;\n        }\n        return true;\n    }\n\n    if_ = async (metadata) => {\n        let operator = metadata.operator === \"EQUALS\";\n        switch(metadata.leftOperand) {\n            case \"CHARACTER\":\n                switch(metadata.rightOperand) {\n                    case \"CAN_WALK\":\n                        if (this.canWalk() === operator) {\n                            if(!await this.simulate(metadata.children)) return false;\n                        }\n                        break;\n                    default:\n                        console.error(\"Invalid if right operand. Received\", metadata.rightOperand);\n                }    \n                break;\n            default:\n                console.error(\"Invalid if left operand. Received\", metadata.leftOperand);\n                return false;\n        }\n\n        return true;\n    }\n\n    getParentRef = (functionsArray, parentIndexString) => {\n        const indexes = parentIndexString.split(\" \").map(i => +i);\n        let currentParentRef = undefined;\n        for (let i = 0; i < indexes.length; i++) {\n            if (indexes[i] === -1) {\n                currentParentRef = functionsArray;\n            } else {\n                currentParentRef = currentParentRef[indexes[i]].children;\n            }\n        }\n        return currentParentRef;\n    }\n\n    addBlock = (blockType, parentIndex) => {\n        this.setState(\n            prevState => {\n                // Duplicate the state to another variable\n                // Stringify and reparse JSON to do deep copy of nested objects\n                let newFunctions = JSON.parse(\n                    JSON.stringify(prevState.functions)\n                );\n\n                // Get the reference to the parent block\n                // Determines where the new objecrt is placed\n                let blockParentRef = this.getParentRef(newFunctions, parentIndex);\n\n                // Add the new block to the parent block\n                switch(blockType) {\n                    case \"WALK\":\n                        blockParentRef.push({\n                            type: \"WALK\"\n                        });\n                        break;\n                    case \"TURN\":\n                        blockParentRef.push({\n                            type: \"TURN\",\n                            direction: \"1\"    // 1: left, -1: right\n                        });\n                        break;\n                    case \"LOOP\":\n                        blockParentRef.push({\n                            type: \"LOOP\",\n                            loopCycles: 2,\n                            children: []\n                        });\n                        break;\n                    case \"IF\":\n                        blockParentRef.push({\n                            type: \"IF\",\n                            operator: \"EQUALS\",\n                            leftOperand: \"CHARACTER\",\n                            rightOperand: \"CAN_WALK\",\n                            children: []\n                        });\n                        break;\n                    default:\n                        console.error(`Unknown code block type: ${blockType}`);\n                        break; \n                }\n\n                // Return the new functions array\n                return {\n                    functions: newFunctions\n                }\n            },\n            () => {\n                this.forceUpdate();\n            }\n        )\n    }\n\n    updateBlock = (parentIndex, blockIndex, newState) => {\n        this.setState(\n            prevState => {\n                // Duplicate the state to another variable\n                // Stringify and reparse JSON to do deep copy of nested objects\n                let newFunctions = JSON.parse(\n                    JSON.stringify(prevState.functions)\n                );\n\n                let blockParentRef = this.getParentRef(newFunctions, parentIndex);\n                \n                // Update block with the passed key value pair(s)\n                Object.keys(newState).forEach((key) => {\n                    blockParentRef[blockIndex][key] = newState[key];\n                });\n                \n                // Return the new functions array\n                return {\n                    functions: newFunctions\n                }\n            },\n            () => {\n                this.forceUpdate();\n            }\n        )\n    }\n\n    deleteBlock = (parentIndex, blockIndex) => {\n        this.setState(\n            prevState => {\n                // Duplicate the state to another variable\n                // Stringify and reparse JSON to do deep copy of nested objects\n                let newFunctions = JSON.parse(\n                    JSON.stringify(prevState.functions)\n                );\n\n                let blockParentRef = this.getParentRef(newFunctions, parentIndex);\n                \n                blockParentRef.splice(blockIndex, 1);\n\n                // Return the new functions array\n                return {\n                    functions: newFunctions\n                }\n            },\n            () => {\n                this.forceUpdate();\n            }\n        )\n    }\n\n    renderBlock = (blockMetadata, key, parentIndex) => {\n        switch(blockMetadata.type) {\n            case \"WALK\":\n                return (\n                    <WalkBlock\n                        key={key}\n                        index={key}\n                        parentIndex={parentIndex}\n                        disabled={this.state.isRunning}\n                    />\n                );\n            case \"TURN\":\n                return (\n                    <TurnBlock \n                        key={key} \n                        index={key} \n                        parentIndex={parentIndex}\n                        direction={blockMetadata.direction}\n                        disabled={this.state.isRunning}\n                    />\n                );\n            case \"LOOP\":\n                return (\n                    <LoopBlock \n                        key={key}\n                        index={key}\n                        parentIndex={parentIndex}\n                        loopCycles={blockMetadata.loopCycles}\n                        disabled={this.state.isRunning}\n                    />\n                );\n            case \"IF\":\n                return (\n                    <IfBlock\n                        key={key}\n                        index={key}\n                        parentIndex={parentIndex}\n                        operator={blockMetadata.operator}\n                        leftOperand={blockMetadata.leftOperand}\n                        rightOperand={blockMetadata.rightOperand}\n                        disabled={this.state.isRunning}\n                    />\n                );\n            default:\n                return <div>Invalid data. Received {JSON.stringify(blockMetadata)}</div>;\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"codeEngine\">\n                {\n                    this.state.isObjectiveReached ?\n                    <WinScreen nextLevel={this.props.nextLevel}/>\n                    : <div>\n                        {\n                            this.state.functions.map((data, key) => {\n                                return this.renderBlock(data, key, \"-1\");\n                            })\n                        }\n                        <AddBlockButton parentBlockIndex=\"-1\" disabled={this.state.isRunning} parent=\"1\"/>\n                        <button className=\"btn btn-info startSimulation\" onClick={() => {this.startSimulation()}} disabled={this.state.isRunning}>Start Simulation</button>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default CodeEngine;\n","import React, { Component } from 'react';\n\nclass LevelTitle extends Component {\n    render() {\n        return (\n            <div className=\"titlePanel\">\n                <h1>{this.props.heading}</h1>\n                <p>{this.props.subheading}</p>\n            </div>\n        )\n    }\n}\n\nexport default LevelTitle\n","import React, { Component } from 'react';\n\nclass LevelInstructions extends Component {\n    render = () => {\n        return (\n            <div className=\"instructionsPanel\">\n                <div className=\"instructionsHeading\">\n                    Instructions\n                </div>\n                <p>{this.props.children}</p>\n            </div>\n        )\n    }\n}\n\nexport default LevelInstructions\n","import React, { Component } from 'react';\nimport * as BABYLON from 'babylonjs';\nimport Globals from '../../Globals';\n\nclass ObjectivePoint extends Component {\n    constructor(props) {\n        super(props);\n        this.mesh = undefined;\n    }\n    \n    componentDidMount = () => {\n        this.createMesh();\n        this.applyMaterial();\n        this.startSpawnAnimation();\n    }\n\n    componentWillUnmount = () => {\n        this.mesh.dispose();\n    }\n\n    createMesh = () => {\n        // Read values from component props. Load default value if not defined.\n        const posX = this.props.posX ? this.props.posX : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const posZ = this.props.posZ ? this.props.posZ : 0;\n\n        // Create mesh\n        this.mesh = BABYLON.MeshBuilder.CreateBox(\n            `objectivePoint_${posX},${posY},${posZ}`,\n            { height: 1, width: 1, depth: 1 },\n            Globals.scene\n        );\n\n        // Modify mesh properties\n        this.mesh.position.x = posX;\n        this.mesh.position.y = posY;\n        this.mesh.position.z = posZ;\n    }\n\n    applyMaterial = () => {\n        let material = new BABYLON.StandardMaterial(\"StoneBlockMaterial\", Globals.scene);\n        // let shaderMaterial = new BABYLON.ShaderMaterial(\n        //     \"objectiveShader\", \n        //     Globals.scene, \n        //     \"/cg-final-project/assets/other/ObjectivePoint\",\n        //     {\n        //     attributes: [\"position\", \"normal\", \"uv\"],\n        //     uniforms: [\"world\", \"worldView\", \"worldViewProjection\", \"view\", \"projection\", \"time\", \"direction\" ],\n        //     // defines: [\"MyDefine\"],\n        //     needAlphaBlending: true,\n        //     needAlphaTesting: true\n        //     }\n        // );\n        // let shaderMaterial = new BABYLON.ShaderMaterial(\"shader\", Globals.scene, {\n        //     vertexElement: \"objectivePointShader\",\n        //     // fragmentElement: \"fragmentShaderCode\"\n        // }, {\n        //     attributes: [\"position\", \"normal\", \"uv\"],\n        //     // uniforms: [\"world\", \"worldView\", \"worldViewProjection\", \"view\", \"project\"]\n        // });\n        material.specularColor = new BABYLON.Color3(0, 0, 0);\n        material.backFaceCulling = false;\n\n        // Apply material to mesh\n        // this.mesh.material = shaderMaterial;\n    }\n\n    startSpawnAnimation = () => {\n        const spawnAnimation = new BABYLON.Animation(\n            \"spawnAnimation\", \n            \"scaling\", \n            Globals.framerate, \n            BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n            BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\n        );\n        \n        const yOffset = this.props.yOffset ? this.props.yOffset : 0;\n        const posY = this.props.posY ? this.props.posY : 0;\n        const animationDelaySeconds = (yOffset + posY) * 0.2 + 1;\n        \n        const keyFrames = [];\n        keyFrames.push({\n            frame: 0,\n            value: BABYLON.Vector3.Zero(),\n        });\n        keyFrames.push({\n            frame: animationDelaySeconds * Globals.framerate,\n            value: BABYLON.Vector3.Zero()\n        });\n        keyFrames.push({\n            frame: (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate),\n            value: BABYLON.Vector3.One(),\n        });\n        spawnAnimation.setKeys(keyFrames);\n\n        this.mesh.animations.push(spawnAnimation);\n        \n        Globals.scene.beginAnimation(this.mesh, 0, (animationDelaySeconds * Globals.framerate) + (0.3 * Globals.framerate), false);\n    }\n\n\n    render = () => {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default ObjectivePoint\n","import React, { Component } from 'react';\nimport ENVIRONMENT from '../gameObjects/_ENVIRONMENT';\nimport Globals from '../../Globals';\n\n// Babylon Objects\nimport StoneBlock from '../gameObjects/StoneBlock';\nimport GrassBlock from '../gameObjects/GrassBlock';\nimport PathBlock from '../gameObjects/PathBlock';\nimport TreeOne from '../gameObjects/TreeOne';\nimport TreeTwo from '../gameObjects/TreeTwo';\nimport RockOne from '../gameObjects/RockOne';\nimport RockTwo from '../gameObjects/RockTwo';\nimport Campfire from '../gameObjects/Campfire';\nimport Tent from '../gameObjects/Tent';\nimport Fence from '../gameObjects/Fence';\nimport Character from '../gameObjects/Character';\n\n// UI and Code Engine\nimport CodeEngine from '../codeEngine/CodeEngine';\nimport LevelTitle from '../uiElements/LevelTitle';\nimport LevelInstructions from '../uiElements/LevelInstructions';\nimport ObjectivePoint from '../gameObjects/ObjectivePoint';\n\nclass LevelOne extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            environmentSpawned: false\n        }\n\n        // Update allowed functions\n        this.allowedBlocks = [\"WALK\", \"TURN\"];\n\n        // level[y][x][z]\n        this.level = [ \n            [   // First Layer\n                [0, 0, 1, 0, 0],\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n                [0, 0, 1, 0, 0],\n            ],\n            [   // Second Layer\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n            ],\n            [   // ...\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1],\n            ],\n            [\n                [2, 2, 2, 2, 2],\n                [2, 3, 3, 3, 2],\n                [2, 2, 2, 3, 2],\n                [2, 2, 2, 3, 2],\n                [2, 2, 2, 2, 2],\n            ],\n            [\n                [0, 13, 0, 0, 11],\n                [0, 0, 0, 0, 0],\n                [0, 18, 0, 0, 19],\n                [0, 0, 0, 99, 0],\n                [0, 10, 0, 12, 0],\n            ]\n        ]\n        this.yOffset = 3;\n        Globals.currentLevel = this;\n    }\n\n    componentDidMount() {\n        \n    }\n\n    spawnEnvironmentItem(x, y, z, type) {\n        // Apply y spawn offset\n        y -= this.yOffset;\n\n        switch(type) {\n            case ENVIRONMENT.NONE:\n                return <div></div>\n            case ENVIRONMENT.STONE:\n                return <StoneBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.GRASS:\n                return <GrassBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.PATH:\n                return <PathBlock posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.OBJECTIVE:\n                return <ObjectivePoint posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TREE_1:\n                return <TreeOne posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TREE_2:\n                return <TreeTwo posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.ROCK_1:\n                return <RockOne posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.ROCK_2:\n                return <RockTwo posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.CAMPFIRE:\n                return <Campfire posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.TENT:\n                return <Tent posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            case ENVIRONMENT.FENCE:\n                return <Fence posX={x} posY={y} posZ={z} yOffset={this.yOffset}/>;\n            default:\n                return <div></div>;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {/* Level Details */}\n                <div className=\"levelPanel\">\n                    <LevelTitle heading=\"Level One\" subheading=\"The Basics\"/>\n                    <CodeEngine yOffset={this.yOffset} nextLevel=\"/cg-final-project/level-2\"/>\n                    <LevelInstructions>\n                        <b>Welcome to your first level!</b><br/>\n                        To complete this level, you need to walk the\n                        character to the finish line using functions. \n                        To add a function, press the plus button above.\n                    </LevelInstructions>\n                </div>\n\n                {/* Spawn map environment */}\n                {\n                    // Spawn the map according to this.level\n                    this.level.map((yData, yIndex) => {\n                        return <div className={`env_y_${yIndex}`} key={yIndex}> {\n                            yData.map((xData, xIndex) => {\n                                return <div className={`env_x_${xIndex}`} key={xIndex}> {\n                                    xData.map((zData, zIndex) => {\n                                        return <div className={`env_z_${zIndex}`} key={zIndex}> {\n                                            this.spawnEnvironmentItem(\n                                                xIndex, yIndex, zIndex, zData\n                                            )\n                                        } </div>\n                                    })\n                                } </div>\n                            })\n                        } </div>\n                    })\n                }\n\n                {/* Spawn player object */}\n                <Character posX={1} posY={1} posZ={1} yOffset={this.yOffset} faceDirection={2}/>\n            </div>\n        )\n    }\n}\n\nexport default LevelOne\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport 'babylonjs-loaders';\nimport BabylonCanvas from './BabylonCanvas';\nimport AddBlockModal from './components/uiElements/AddBlockModal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Levels\nimport LevelOne from './components/levels/LevelOne';\n\nclass App extends Component {\n    state = {  }\n\n    render() {\n        return (\n            <Router>\n                <div className=\"App\">\n                    <div className=\"AppContainer\">\n                        <BabylonCanvas/>\n                        <Switch className=\"LevelContainer\">\n                            {/* <Route path=\"/\"> */}\n                                {/* Create main menu scene */}\n                            {/* </Route> */}\n                            <Route path=\"/cg-final-project/level-1\">\n                                <LevelOne/>\n                            </Route>\n                        </Switch>\n                    </div>\n                </div>\n                <AddBlockModal></AddBlockModal>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}